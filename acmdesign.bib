
@phdthesis{moura_design_2020,
	type = {{PhD} {Thesis}},
	title = {Design {Patterns} for {Ethereum} {Smart} {Contracts}},
	abstract = {The Ethereum platform has become very popular in recent years in smart contract development, an area in which several programming languages are applied. Solidity, nevertheless is the most popular and widely used. On top of blockchain technology, Ethereum and its smart contracts have enabled developers worldwide to create innovative solutions in various areas such as finance, healthcare, insurance, internet of things, supply chain and others. These solutions are referred to as Decentralized Applications (dapps) and use the distributed nature of blockchain technology to solve problems in a disruptive manner, casting out intermediaries and automating processes. The fact that blockchain transactions triggered by smart contract execution are unchangeable also provides dapps users with a lot of confidence when compared to traditional centralized apps, because dapps' data becomes tamper-proof.In the context of this work, it was necessary to analyze and look for software design patterns in order to help making the development of Solidity smart contracts simpler and safer, thus giving confidence both to users and developers of dapps built with Ethereum. In an initial phase, a literature review was made and 62 design patterns were found. From this set, 30 design patterns were selected for the practical component of this work. In this stage, 318 smart contracts were analyzed and the 30 previously selected patterns were confirmed. Additionally, four more patterns which had not been identified in the literature review stage were found.The 30 design patterns were divided into four categories: authorization, control, maintenance and security. Efficiency across all these categories was evaluated in terms of gas consumption and security vulnerabilities. Once the research was completed, it became possible to create a set of recommendations for Solidity developers.},
	school = {Instituto Politecnico do Porto (Portugal)},
	author = {Moura, Tiago Augusto Pinto},
	year = {2020},
	note = {ISBN: 9798790616754},
	annote = {AAI28985155},
}

@inproceedings{wijaya_designing_2019,
	address = {Berlin, Heidelberg},
	title = {Designing {Smart} {Contract} for {Electronic} {Document} {Taxation}},
	isbn = {978-3-030-31577-1},
	url = {https://doi.org/10.1007/978-3-030-31578-8_11},
	doi = {10.1007/978-3-030-31578-8_11},
	abstract = {In recent years, we have seen a massive blockchain adoption in cryptocurrencies such as Bitcoin. Following the success of blockchain in cryptocurrency industry, many people start to explore the possibility of implementing blockchain technology in different fields. In this paper, we propose Smart Stamp Duty, a system which can revolutionize the way stamp duty (document tax) is managed and paid. The proposed Smart Stamp Duty offers significant improvements on the convenience when paying stamp duty by removing the need of physical revenue stamp. At the same time, the blockchain technology also provides the auditability of the recorded data. Smart stamp duty enables the expansion of the existing electronic stamp duty application to retail level. Smart stamp duty also enables the taxpayers to pay the stamp duty of their electronic documents. Our proposed system also enables the taxpayers to convert their electronic documents into physical documents while still maintain the ability to refer the electronic-based stamp duty payments.},
	booktitle = {Cryptology and {Network} {Security}: 18th {International} {Conference}, {CANS} 2019, {Fuzhou}, {China}, {October} 25–27, 2019, {Proceedings}},
	publisher = {Springer-Verlag},
	author = {Wijaya, Dimaz Ankaa and Liu, Joseph K. and Steinfeld, Ron and Liu, Dongxi and Junis, Fengkie and Suwarsono, Dony Ariadi},
	year = {2019},
	note = {event-place: Fuzhou, China},
	keywords = {Blockchain, Smart contract, Electronic document, Taxation},
	pages = {199--213},
}

@inproceedings{zecchini_refining_2019,
	address = {Berlin, Heidelberg},
	title = {On {Refining} {Design} {Patterns} for {Smart} {Contracts}},
	isbn = {978-3-030-48339-5},
	url = {https://doi.org/10.1007/978-3-030-48340-1_18},
	doi = {10.1007/978-3-030-48340-1_18},
	abstract = {The need for a Blockchain Oriented Software Engineering (BOSE) has been recognized in several research papers. Design Patterns are considered among the main and compelling areas to be developed in BOSE. Anyway, design patterns need to be enhanced with some additional fields to better support the specific needs of Blockchain development. In this paper, we discuss the use of Solidity design patterns applied to a water management use case and we introduce specific fields in their description, aiming at offering to Blockchain developers more support in the critical decisions to build efficient decentralized applications.},
	booktitle = {Euro-{Par} 2019: {Parallel} {Processing} {Workshops}: {Euro}-{Par} 2019 {International} {Workshops}, {Göttingen}, {Germany}, {August} 26–30, 2019, {Revised} {Selected} {Papers}},
	publisher = {Springer-Verlag},
	author = {Zecchini, Marco and Bracciali, Andrea and Chatzigiannakis, Ioannis and Vitaletti, Andrea},
	year = {2019},
	note = {event-place: Göttingen, Germany},
	keywords = {Solidity, Smart contracts, Blockchain Oriented Software Engineering (BOSE), Design patters, Use case},
	pages = {228--239},
}

@inproceedings{mavridou_verisolid_2019,
	address = {Berlin, Heidelberg},
	title = {{VeriSolid}: {Correct}-by-{Design} {Smart} {Contracts} for {Ethereum}},
	isbn = {978-3-030-32100-0},
	url = {https://doi.org/10.1007/978-3-030-32101-7_27},
	doi = {10.1007/978-3-030-32101-7_27},
	abstract = {The adoption of blockchain based distributed ledgers is growing fast due to their ability to provide reliability, integrity, and auditability without trusted entities. One of the key capabilities of these emerging platforms is the ability to create self-enforcing smart contracts. However, the development of smart contracts has proven to be error-prone in practice, and as a result, contracts deployed on public platforms are often riddled with security vulnerabilities. This issue is exacerbated by the design of these platforms, which forbids updating contract code and rolling back malicious transactions. In light of this, it is crucial to ensure that a smart contract is secure before deploying it and trusting it with significant amounts of cryptocurrency. To this end, we introduce the VeriSolid framework for the formal verification of contracts that are specified using a transition-system based model with rigorous operational semantics. Our model-based approach allows developers to reason about and verify contract behavior at a high level of abstraction. VeriSolid allows the generation of Solidity code from the verified models, which enables the correct-by-design development of smart\&nbsp;contracts.},
	booktitle = {Financial {Cryptography} and {Data} {Security}: 23rd {International} {Conference}, {FC} 2019, {Frigate} {Bay}, {St}. {Kitts} and {Nevis}, {February} 18–22, 2019, {Revised} {Selected} {Papers}},
	publisher = {Springer-Verlag},
	author = {Mavridou, Anastasia and Laszka, Aron and Stachtiari, Emmanouela and Dubey, Abhishek},
	year = {2019},
	note = {event-place: St. Kitts, Saint Kitts and Nevis},
	pages = {446--465},
}

@inproceedings{liu_applying_2018,
	address = {Berlin, Heidelberg},
	title = {Applying {Design} {Patterns} in {Smart} {Contracts}: {A} {Case} {Study} on a {Blockchain}-{Based} {Traceability} {Application}},
	isbn = {978-3-319-94477-7},
	url = {https://doi.org/10.1007/978-3-319-94478-4_7},
	doi = {10.1007/978-3-319-94478-4_7},
	abstract = {Blockchain, the technology Bitcoin lives on, is an emerging research field due to its nature of decentralisation, and properties of data immutability and transparency. Smart contracts are the programs executed on programmable infrastructure provided by blockchain, which can manage complex business logic, extending the field significantly. As blockchain technology is still at an early stage, there are little works on applying software architectural methods to the design of blockchain-based applications. In this paper, we summarise eight smart contract design patterns based on existing smart contracts and our experience, and classify them into four categories: Creational Patterns, Structural Patterns, Inter-Behavioral Patterns, and Intra-Behavioral Patterns. We share some experiences of applying the presented design patterns of smart contract on a real-world blockchain-based traceability application, and also discuss how patterns can improve the quality attributes of blockchain-based application.},
	booktitle = {Blockchain – {ICBC} 2018: {First} {International} {Conference}, {Held} as {Part} of the {Services} {Conference} {Federation}, {SCF} 2018, {Seattle}, {WA}, {USA}, {June} 25-30, 2018, {Proceedings}},
	publisher = {Springer-Verlag},
	author = {Liu, Yue and Lu, Qinghua and Xu, Xiwei and Zhu, Liming and Yao, Haonan},
	year = {2018},
	note = {event-place: Seattle, WA, USA},
	keywords = {Blockchain, Smart contract, Adaptability, Interoperability},
	pages = {92--106},
}

@inproceedings{yang_design_2021,
	address = {New York, NY, USA},
	series = {{ICCBN} 2021},
	title = {Design of {Blockchain} {Smart} {Contract} {Based} on {Ring} {Signature}},
	isbn = {978-1-4503-8917-4},
	url = {https://doi.org/10.1145/3456415.3457223},
	doi = {10.1145/3456415.3457223},
	abstract = {In view of the current blockchain network transaction data information is completely open and transparent, which causes that identity privacy information of the trading parties is faced major security risks, a smart contract scheme based on ring signature is proposed after the research and analysis of the blockchain smart contract. The ring signature algorithm is invoked during the transaction to authenticate the identity of the transaction initiator, so that the identity of the sender can be hidden in a group of public key rings, and the user can achieve the anonymous transaction on the blockchain. Furthermore, the smart contract based on ring signature is applied to the on-chain storage of data information of Internet of Things devices, and its related functions are verified and analyzed by experiments. It proves that this scheme is feasible, and can effectively realize the secure on-chain storage and management of data information of Internet of Things devices.},
	booktitle = {2021 9th {International} {Conference} on {Communications} and {Broadband} {Networking}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Hongzhi and Yuan, Linyun and Wang, Shu},
	year = {2021},
	note = {event-place: Shanghai, China},
	keywords = {Blockchain, Smart contract, Internet of Things, On-chain storage, Privacy protection, Ring signature},
	pages = {108--114},
}

@inproceedings{bagozi_three-layered_2019,
	address = {Berlin, Heidelberg},
	title = {A {Three}-{Layered} {Approach} for {Designing} {Smart} {Contracts} in {Collaborative} {Processes}},
	isbn = {978-3-030-33245-7},
	url = {https://doi.org/10.1007/978-3-030-33246-4_28},
	doi = {10.1007/978-3-030-33246-4_28},
	abstract = {In collaborative environments, where enterprises interact each other’s without a centralised authority that ensures trust among them, the ability of providing cross-organisational services must be enabled also between mutually untrusting participants. Blockchain platforms and smart contracts have been proposed to implement collaborative processes. However, current solutions are platform-dependent and deploy on-chain the whole process, thus increasing the execution costs of smart contracts if deployed on permissionless blockchain. In this paper, we propose an approach that includes criteria to identify trust-demanding objects and activities in collaborative processes, a model to describe smart contracts in a platform-independent way and guidelines to deploy them in a blockchain. To this aim, a three-layered model is used to describe: (i) the collaborative process, represented in BPMN, where the business expert is supported to add annotations that identify trust-demanding objects and activities; (ii) Abstract Smart Contracts based on trust-demanding objects and activities only and specified by means of descriptors, that are independent from any blockchain technology; (iii) Concrete Smart Contracts, that implement abstract ones and are deployed over a specific blockchain, enabling the creation of a repository where a single descriptor is associated with multiple implementations. The flexibility and reduced costs of the approach, due to the smart contracts abstraction and the use of blockchain only when necessary, are discussed with a case study on remote monitoring services in the digital factory.},
	booktitle = {On the {Move} to {Meaningful} {Internet} {Systems}: {OTM} 2019 {Conferences}: {Confederated} {International} {Conferences}: {CoopIS}, {ODBASE}, {C}\&amp;{TC} 2019, {Rhodes}, {Greece}, {October} 21–25, 2019, {Proceedings}},
	publisher = {Springer-Verlag},
	author = {Bagozi, Ada and Bianchini, Devis and De Antonellis, Valeria and Garda, Massimiliano and Melchiori, Michele},
	year = {2019},
	note = {event-place: Rhodes, Greece},
	keywords = {Blockchain, Smart contract, Collaborative processes},
	pages = {440--457},
}

@inproceedings{mavridou_designing_2018,
	address = {Berlin, Heidelberg},
	title = {Designing {Secure} {Ethereum} {Smart} {Contracts}: {A} {Finite} {State} {Machine} {Based} {Approach}},
	isbn = {978-3-662-58386-9},
	url = {https://doi.org/10.1007/978-3-662-58387-6_28},
	doi = {10.1007/978-3-662-58387-6_28},
	abstract = {The adoption of blockchain-based distributed computation platforms is growing fast. Some of these platforms, such as Ethereum, provide support for implementing smart contracts, which are envisioned to have novel applications in a broad range of areas, including finance and the Internet-of-Things. However, a significant number of smart contracts deployed in practice suffer from security vulnerabilities, which enable malicious users to steal assets from a contract or to cause damage. Vulnerabilities present a serious issue since contracts may handle financial assets of considerable value, and contract bugs are non-fixable by design. To help developers create more secure smart contracts, we introduce FSolidM, a framework rooted in rigorous semantics for designing contracts as Finite State Machines (FSM). We present a tool for creating FSM on an easy-to-use graphical interface and for automatically generating Ethereum contracts. Further, we introduce a set of design patterns, which we implement as plugins that developers can easily add to their contracts to enhance security and functionality.},
	booktitle = {Financial {Cryptography} and {Data} {Security}: 22nd {International} {Conference}, {FC} 2018, {Nieuwpoort}, {Curaçao}, {February} 26 – {March} 2, 2018, {Revised} {Selected} {Papers}},
	publisher = {Springer-Verlag},
	author = {Mavridou, Anastasia and Laszka, Aron},
	year = {2018},
	note = {event-place: Nieuwpoort, Curaçao},
	keywords = {Ethereum, Smart contract, Solidity, Security, Automatic code generation, Design patterns, Finite state machine},
	pages = {523--540},
}

@inproceedings{vandenbogaerde_graph-based_2019,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2019},
	title = {A {Graph}-{Based} {Framework} for {Analysing} the {Design} of {Smart} {Contracts}},
	isbn = {978-1-4503-5572-8},
	url = {https://doi.org/10.1145/3338906.3342495},
	doi = {10.1145/3338906.3342495},
	abstract = {Used as a platform for executing smart contracts, Blockchain technology has yielded new programming languages. We propose a graph-based framework for computing software design metrics for the Solidity programming language, and use this framework in a preliminary study on 505 smart contracts mined from GitHub. The results show that most of the smart contracts are rather straightforward from an objected-oriented point of view and that new design metrics specific to smart contracts should be developed.},
	booktitle = {Proceedings of the 2019 27th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Vandenbogaerde, Bram},
	year = {2019},
	note = {event-place: Tallinn, Estonia},
	keywords = {Smart Contracts, Metrics, Mining Software Repositories},
	pages = {1220--1222},
}

@article{rosaire_brice_design_2020,
	title = {Design of a {Blockchain}-{Based} {Smart} {Contract} {Model} for {Child} {Labor} {Alleviation}},
	volume = {11},
	issn = {1947-9301},
	url = {https://doi.org/10.4018/IJTD.2020070104},
	doi = {10.4018/IJTD.2020070104},
	abstract = {The achievements of west and central Africa in producing more than 60\% of the world's cocoa, and sub-Saharan Africa's achievement in producing 13\% of the world's cotton, hide child labor. These significant levels of production often involve child exposure to issues such as a lack of education; pesticides; dangerous farming tools; work accidents; human trafficking; etc. Blockchain offers an immutable register that allows for digital transactions, smart contract creation, as well as end-to-end product traceability. The main aim of this article is to provide an intelligent contract framework that protects child labor in farming while further enlightening understandings of adoption-related challenges. This framework considers conditions that farmer associations need to satisfy and gives them a tool to improve children's welfare. A research model for the adoption of this tool has been proposed and validated through surveys in the cotton and cacao sectors.},
	number = {3},
	journal = {Int. J. Technol. Diffus.},
	author = {Rosaire Brice, Senou Mahugnon and Jules, Degila},
	month = jul,
	year = {2020},
	note = {Place: USA
Publisher: IGI Global},
	keywords = {Blockchain, Acceptation Issues, Central Africa, Child Work, Cocoa, Cotton, Digital Ledger, Intelligent Agreement, Investigation, West Africa},
	pages = {60--81},
}

@inproceedings{kuo_cross-domain_2020,
	address = {New York, NY, USA},
	series = {{ICMHI} '20},
	title = {Cross-{Domain} {Design} of {Blockchain} {Smart} {Contract} for {Library} and {Healthcare} {Privacy}},
	isbn = {978-1-4503-7776-8},
	url = {https://doi.org/10.1145/3418094.3418145},
	doi = {10.1145/3418094.3418145},
	abstract = {The blockchain technology designed by information security experts empowers in library service and healthcare service via smart contracts. Advanced blockchain technology provides a mechanism for smart contracts. Through intelligent threshold design and the open and tamper-proof nature of the blockchain, smart contracts have become a new generation of information security technology. In the next-generation library services, traditional borrowing materials from the library have evolved into a limited-time sharing service for electronic materials. These electronic materials have various loan periods and sharing time-varying by different borrower privileges. This study designs a patron-centric account's smart contract to disseminate library information more effectively and collect accurate library data. The smart contract automatically triggers the loan period and extends this mechanism to designing a personal health privacy sharing protocol for improving the one-time authorization sharing mechanism. As a result, this study may provide blockchain smart contract designs shared by library information and healthcare through cross-domain consideration and scheme.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Medical} and {Health} {Informatics}},
	publisher = {Association for Computing Machinery},
	author = {Kuo, Yu-Jie Jessica and Shieh, Jiann-Cherng},
	year = {2020},
	note = {event-place: Kamakura City, Japan},
	keywords = {Blockchain, Smart Contract, Healthcare Privacy, iLibrary, Library Information},
	pages = {122--126},
}

@article{kang_design_2021,
	title = {Design and {Implementation} of {Data} {Sharing} {Traceability} {System} {Based} on {Blockchain} {Smart} {Contract}},
	volume = {2021},
	issn = {1058-9244},
	url = {https://doi.org/10.1155/2021/1455814},
	doi = {10.1155/2021/1455814},
	abstract = {“Traceability” is an important method often used in modern supply management. The traceability system is a system based on the Internet of Things technology. In this process, users will share resources through cloud service providers, so how to ensure data security is also one of the issues we consider. Blockchain technology is an emerging technology in the field of information technology. Its decentralized nature, distributed storage, and difficult data modification provide us with fair exchange and sharing of data. Feasible solutions: in this article, we have studied the key issues of fair exchange and safe sharing of data based on blockchain and designed a multigroup data sharing scheme based on alliance chain. To solve the various existing traceability systems problem, this paper designs a new traceability system based on blockchain technology and implements a system prototype to verify the feasibility of the system.},
	journal = {Sci. Program.},
	author = {Kang, Yang and Li, Qiang and Ding, Bai Yuan},
	month = jan,
	year = {2021},
	note = {Place: London, GBR
Publisher: Hindawi Limited},
}

@inproceedings{tiansong_design_2020,
	address = {New York, NY, USA},
	series = {{ICIIP} '19},
	title = {Design and {Implementation} of {Second}-{Hand} {Goods} {Renting} {System} {Based} {On} {Ethereum} {Smart} {Contract}},
	isbn = {978-1-4503-6191-0},
	url = {https://doi.org/10.1145/3378065.3378131},
	doi = {10.1145/3378065.3378131},
	abstract = {Ethereum blockchain is a revolutionary decentralized database technology on the Internet, with the characteristics of data tamperability, disintermediation, autonomy, traceability, point-to-point transaction, programmable and so on. Its emergence has an important impact on the development of many traditional industries. This paper analyzes the shortcomings of the traditional second-hand goods rental system and uses the blockchain technology to design the second-hand goods renting system based on ethereum smart contract. It introduces the background of blockchain and Ethereum smart contract, gives the overall framework of system design, and specifically describes the three parts of the system: blockchain module, smart contract module and the front end of DAPP, and the problems of combining blockchain and rental system are analyzed to provide a reference for better applications in the future.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Intelligent} {Information} {Processing}},
	publisher = {Association for Computing Machinery},
	author = {Tiansong, Li and Yu, Liu},
	year = {2020},
	note = {event-place: China, China},
	keywords = {Blockchain, Ethereum, Smart contract, Rental system, Second-hand goods},
	pages = {346--351},
}

@article{das_design_2022,
	title = {Design and {Development} of an {Intelligent} {Transportation} {Management} {System} {Using} {Blockchain} and {Smart} {Contracts}},
	volume = {25},
	issn = {1386-7857},
	url = {https://doi.org/10.1007/s10586-022-03536-z},
	doi = {10.1007/s10586-022-03536-z},
	abstract = {The automated toll-tax collection system (ATCS) is advantageous to facilitate traffic management at the toll plaza and to save fuel for vehicles. The most advanced application of the electronic toll collection (ETC) system is to collect the toll-tax amount (TA) at toll plazas of the national highways. The few existing TA collection systems suffer from data security, transparency, privacy, and data immutability as these are centralized systems. As the Blockchain is a decentralized, transparent, secure, and low-cost technology. However, this paper presents an intelligent transportation management system (I-TMS) using Blockchain. The proposed I-TMS shows the way of implementation of blockchain technology for vehicle data management in various applications of I-TMS. Herein, a framework of blockchain-enabled ATCS (BATCS) is provided as a blockchain-based I-TMS application to collect TAs without stopping vehicles while they pass the toll plaza. Smart contracts are used to authenticate vehicles’ data and to collect TAs automatically. An efficient algorithm is presented for data verification and TA collection in this paper. This research work provides a secure, transparent, and privacy-preserving framework in the field of the ETC system. The significant contributions of the BATCS compared with the RFID-based system are less fuel consumption and time-saving for a vehicle. The proposed framework can enhance data security and user privacy in the intelligent decentralized ETC system.},
	number = {3},
	journal = {Cluster Computing},
	author = {Das, Debashis and Banerjee, Sourav and Chatterjee, Puspita and Biswas, Manju and Biswas, Utpal and Alnumay, Waleed},
	month = jun,
	year = {2022},
	note = {Place: USA
Publisher: Kluwer Academic Publishers},
	keywords = {Blockchain, Smart contract, Blockchain-enabled ETC system, Decentralized electronic toll collection, Intelligent transportation management system},
	pages = {1899--1913},
}

@inproceedings{li_smart_2021,
	address = {New York, NY, USA},
	series = {{ICBCT} '21},
	title = {Smart {Contract} {Design} for a {Bidding}-{Based} {Supply} {Chain} {System} {Built} on an {Alliance} {Blockchain}},
	isbn = {978-1-4503-8962-4},
	url = {https://doi.org/10.1145/3460537.3460551},
	doi = {10.1145/3460537.3460551},
	abstract = {With the development of marketing, the bidding transactions among enterprises become more and more frequent. The traditional supply chain system cannot meet the needs of enterprise operation, due to the problems like inefficient information sharing, low collaboration, and huge consumption of human resources. To deal with the above problems, the emergence of blockchain technology provides a promising solution. In this paper, we employ an alliance blockchain architecture to realize a bidding-based supply chain system. Specially, we design a smart contract with reasonable contract interaction rules for the whole process a bidding transaction, with two specific functions, i.e., risk early warning and intelligent bid evaluating. In addition, a real alliance blockchain is implemented based on the Hyperledger platform, to validate the feasibility of our designed smart contract.},
	booktitle = {2021 {The} 3rd {International} {Conference} on {Blockchain} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Li, Xuewei and Chen, Han and Xie, Zhiyuan and Xie, Ying and Yang, Antao},
	year = {2021},
	note = {event-place: Shanghai, China},
	keywords = {Smart contract, Alliance blockchian, Bidding, Supply chain},
	pages = {1--8},
}

@inproceedings{niranga_design_2023,
	address = {New York, NY, USA},
	series = {{SenSys} '22},
	title = {Design of a {Secured} {Medical} {Data} {Access} {Management} {Using} {Ethereum} {Smart} {Contracts}, {Truffle} {Suite} and {Web3}},
	isbn = {978-1-4503-9886-2},
	url = {https://doi.org/10.1145/3560905.3568180},
	doi = {10.1145/3560905.3568180},
	abstract = {Securing and managing medical data in hospitals is one of the significant challenges still existing in healthcare. There can be different kinds of patients staying in hospitals with various diseases. All these medical data records need to be secured appropriately for future use and verification. In the hospital, there will be essential documents such as criminal cases and postmortem reports, although it is unclear if they are being handled properly or not. Even the hospital staff can alter these data. This paper proposes a blockchain-based secured medical data management system to manage access to each medical record in a network of hospitals. The proposed system has three main access management categories: one for securing general (fever or cold) medical report, category 2 for postmortem or crime reports security and category 3 for securing cancer /brain death /genetic disorder reports. Sensitive clinical data should not be visible to patients with cancer or genetic disorders as these patients have a higher rate of suicide attempts. Hence, the data is accessible only to doctors, family members, and researchers. The data related to the crime or postmortem reports have only limited access for those with legal permission to access and verify these types of reports. So through blockchain distributed ledger technology and smart contracts, we could store the data in a tamper-proof manner and manage the user access to these data.},
	booktitle = {Proceedings of the 20th {ACM} {Conference} on {Embedded} {Networked} {Sensor} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Niranga, G. D Heshan and Nair, Vidya S and B, Sai Shibu N},
	year = {2023},
	note = {event-place: Boston, Massachusetts},
	keywords = {blockchain, smart contract, distributed ledger technology, access management, medical data},
	pages = {1215--1221},
}

@inproceedings{niya_design_2018,
	title = {Design and {Implementation} of an {Automated} and {Decentralized} {Pollution} {Monitoring} {System} with {Blockchains}, {Smart} {Contracts}, and {LoRaWAN}},
	url = {https://doi.org/10.1109/NOMS.2018.8406329},
	doi = {10.1109/NOMS.2018.8406329},
	abstract = {This work proposes an IoT- and Blockchain-based, distributed system, for automated measuring, storing, and monitoring of water and air quality in environments such as lakes, mountains, urban areas, or factories. Comparable state-of-the-art solutions, require human interaction to access the data or require high power consumption or space requirements, or they are based on centralized architectures. The proposed pollution monitoring system here, on one hand, employs LoRa to address the high power consumption and long-range transmission challenges of IoT protocols. On the other hand, it is designed to be fully decentralized by using the Ethereum Blockchain to store and retrieve the data recorded by IoT sensors. Thus, data integrity is provided without the need for a Trusted Third Party (TTP) and data is collected and captured automatically without any manual operations needed. Observations on the four different types of sensors for measuring Potential Hydrogen (PH), Turbidity, Carbon monoxide (CO), and Carbon dioxide (CO2), revealed a high accuracy with the expected time-lines of measurements, non-falsified experimental values collected and can be used as reliable evidence of presence of pollution.},
	booktitle = {{NOMS} 2018 - 2018 {IEEE}/{IFIP} {Network} {Operations} and {Management} {Symposium}},
	publisher = {IEEE Press},
	author = {Niya, Sina Rafati and Jha, Sanjiv S. and Bocek, Thomas and Stiller, Burkhard},
	year = {2018},
	note = {event-place: Taipei, Taiwan},
	pages = {1--4},
}

@phdthesis{bahojb_imani_design_2020,
	type = {{PhD} {Thesis}},
	title = {Design and {Development} of {Scalable} {Analytics} {Frameworks} with {Applications} in {Blockchain} {Smart} {Contract} {Security} and {Political} {News} {Mining}},
	abstract = {Nowadays, high amounts of data are continuously generated at unprecedented rate from various domains such as e-commerce, education, health, security, and social networks. This is due to many technological advancements, including Internet of Things (IoT), autonomous driving, the proliferation of Cloud Computing, data center consolidation as well as the growth of smart devices. The term big data was created to demonstrate the meaning of this emerging trend. The high volumes, velocities, and varieties of data pose a great challenge for the data mining community to extract useful knowledge. In response to this, we need scalable analytics frameworks for data acquisition, filtering, and analyzing in a quick time. Current state-of-the-arts like advanced analytics, Machine Learning (ML), Natural Language Processing (NLP) can be utilized to handle heterogeneous Big Data. Yet, most of these systems suffer scalability issues. In this dissertation, we focus on social science and blockchain areas. More specifically, we focus on location extraction from unstructured political text data, vulnerability detection in Blockchain's smart contracts and fault diagnosis in wind turbine vibration data. With regard to focus location extraction, although various tools exist to identify geolocation, they fail to identify at a granular level; they mostly rely on external knowledge, and they do not support most languages. We propose a novel scalable framework PROFILE to extract the primary focus location from political news articles in different languages. With regard to blockchain, existing solutions to this problem particularly rely on human experts to define features or different rules to detect vulnerabilities, which often lead to missing many vulnerabilities and they are inefficient in detecting new vulnerabilities. We develop a novel scalable framework to detect vulnerabilities in smart contracts. With regard to fault diagnosis in wind turbines, real-time fault diagnosis for streaming vibration data from turbine gearboxes is still an outstanding challenge. Moreover, monitoring gearboxes in a wind farm with thousands of wind turbines requires massive computational power. We address these challenges by developing SAIL, a scalable real-time framework, to capture wind turbine vibration data using a novel feature extraction and predict faults in gearbox. We show empirically that the proposed techniques outperform state-of-the-art techniques in all three areas.},
	school = {The University of Texas at Dallas},
	author = {Bahojb Imani, Maryam},
	year = {2020},
	note = {ISBN: 9798678172884},
	annote = {AAI28216098},
}

@inproceedings{nissen_geocoin_2018,
	address = {New York, NY, USA},
	series = {{CHI} '18},
	title = {{GeoCoin}: {Supporting} {Ideation} and {Collaborative} {Design} with {Smart} {Contracts}},
	isbn = {978-1-4503-5620-6},
	url = {https://doi.org/10.1145/3173574.3173737},
	doi = {10.1145/3173574.3173737},
	abstract = {Design and HCI researchers are increasingly working with complex digital infrastructures, such as cryptocurrencies, distributed ledgers and smart contracts. These technologies will have a profound impact on digital systems and their audiences. However, given their emergent nature and technical complexity, involving non-specialists in the design of applications that employ these technologies is challenging. In this paper, we discuss these challenges and present GeoCoin, a location-based platform for embodied learning and speculative ideating with smart contracts. In collaborative workshops with GeoCoin, participants engaged with location-based smart contracts, using the platform to explore digital 'debit' and 'credit' zones in the city. These exercises led to the design of diverse distributed-ledger applications, for time-limited financial unions, participatory budgeting, and humanitarian aid. These results contribute to the HCI community by demonstrating how an experiential prototype can support understanding of the complexities behind new digital infrastructures and facilitate participant engagement in ideation and design processes.},
	booktitle = {Proceedings of the 2018 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Nissen, Bettina and Pschetz, Larissa and Murray-Rust, Dave and Mehrpouya, Hadi and Oosthuizen, Shaune and Speed, Chris},
	year = {2018},
	note = {event-place: Montreal QC, Canada},
	keywords = {smart contracts, distributed ledgers, design and ideation, geofencing, smart city},
	pages = {1--10},
}

@inproceedings{kuo_cross-domain_2020-1,
	address = {New York, NY, USA},
	series = {{ICMHI} '20},
	title = {Cross-{Domain} {Design} of {Blockchain} {Smart} {Contract} for {Library} and {Healthcare} {Privacy}},
	isbn = {978-1-4503-7776-8},
	url = {https://doi.org/10.1145/3418094.3418145},
	doi = {10.1145/3418094.3418145},
	abstract = {The blockchain technology designed by information security experts empowers in library service and healthcare service via smart contracts. Advanced blockchain technology provides a mechanism for smart contracts. Through intelligent threshold design and the open and tamper-proof nature of the blockchain, smart contracts have become a new generation of information security technology. In the next-generation library services, traditional borrowing materials from the library have evolved into a limited-time sharing service for electronic materials. These electronic materials have various loan periods and sharing time-varying by different borrower privileges. This study designs a patron-centric account's smart contract to disseminate library information more effectively and collect accurate library data. The smart contract automatically triggers the loan period and extends this mechanism to designing a personal health privacy sharing protocol for improving the one-time authorization sharing mechanism. As a result, this study may provide blockchain smart contract designs shared by library information and healthcare through cross-domain consideration and scheme.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Medical} and {Health} {Informatics}},
	publisher = {Association for Computing Machinery},
	author = {Kuo, Yu-Jie Jessica and Shieh, Jiann-Cherng},
	year = {2020},
	note = {event-place: Kamakura City, Japan},
	keywords = {Blockchain, Smart Contract, Healthcare Privacy, iLibrary, Library Information},
	pages = {122--126},
}

@inproceedings{chen_towards_2018,
	address = {New York, NY, USA},
	series = {{ICSE}-{NIER} '18},
	title = {Towards {Saving} {Money} in {Using} {Smart} {Contracts}},
	isbn = {978-1-4503-5662-6},
	url = {https://doi.org/10.1145/3183399.3183420},
	doi = {10.1145/3183399.3183420},
	abstract = {Being a new kind of software leveraging blockchain to execute real contracts, smart contracts are in great demand due to many advantages. Ethereum is the largest blockchain platform that supports smart contracts by running them in its virtual machine. To ensure that a smart contract will terminate eventually and prevent abuse of resources, Ethereum charges the developers for deploying smart contracts and the users for executing smart contracts. Although our previous work shows that under-optimized smart contracts may cost more money than necessary, it just lists 7 anti-patterns and the detection method for 3 of them. In this paper, we conduct the first in-depth investigation on such under-optimized smart contracts. We first identify 24 anti-patterns from the execution traces of real smart contracts. Then, we design and develop GasReducer, the first tool to automatically detect all these anti-patterns from the bytecode of smart contracts and replace them with efficient code through bytecode-to-bytecode optimization. Using GasReducer to analyze all smart contracts and their execution traces, we detect 9,490,768 and 557,565,754 anti-pattern instances in deploying and invoking smart contracts, respectively.},
	booktitle = {Proceedings of the 40th {International} {Conference} on {Software} {Engineering}: {New} {Ideas} and {Emerging} {Results}},
	publisher = {Association for Computing Machinery},
	author = {Chen, Ting and Li, Zihao and Zhou, Hao and Chen, Jiachi and Luo, Xiapu and Li, Xiaoqi and Zhang, Xiaosong},
	year = {2018},
	note = {event-place: Gothenburg, Sweden},
	keywords = {smart contract, anti-patterns, detection, optimization},
	pages = {81--84},
}

@inproceedings{zhang_town_2016,
	address = {New York, NY, USA},
	series = {{CCS} '16},
	title = {Town {Crier}: {An} {Authenticated} {Data} {Feed} for {Smart} {Contracts}},
	isbn = {978-1-4503-4139-4},
	url = {https://doi.org/10.1145/2976749.2978326},
	doi = {10.1145/2976749.2978326},
	abstract = {Smart contracts are programs that execute autonomously on blockchains. Their key envisioned uses (e.g. financial instruments) require them to consume data from outside the blockchain (e.g. stock quotes). Trustworthy data feeds that support a broad range of data requests will thus be critical to smart contract ecosystems.We present an authenticated data feed system called Town Crier (TC). TC acts as a bridge between smart contracts and existing web sites, which are already commonly trusted for non-blockchain applications. It combines a blockchain front end with a trusted hardware back end to scrape HTTPS-enabled websites and serve source-authenticated data to relying smart contracts.TC also supports confidentiality. It enables private data requests with encrypted parameters. Additionally, in a generalization that executes smart-contract logic within TC, the system permits secure use of user credentials to scrape access-controlled online data sources.We describe TC's design principles and architecture and report on an implementation that uses Intel's recently introduced Software Guard Extensions (SGX) to furnish data to the Ethereum smart contract system. We formally model TC and define and prove its basic security properties in the Universal Composibility (UC) framework. Our results include definitions and techniques of general interest relating to resource consumption (Ethereum's "gas" fee system) and TCB minimization. We also report on experiments with three example applications.We plan to launch TC soon as an online public service.},
	booktitle = {Proceedings of the 2016 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Fan and Cecchetti, Ethan and Croman, Kyle and Juels, Ari and Shi, Elaine},
	year = {2016},
	note = {event-place: Vienna, Austria},
	keywords = {smart contracts, ethereum, bitcoin, authenticated data feeds, intel SGX, trusted hardware},
	pages = {270--282},
}

@inproceedings{kaleem_event_2021,
	address = {New York, NY, USA},
	series = {{DEBS} '21},
	title = {An {Event} {Driven} {Framework} for {Smart} {Contract} {Execution}},
	isbn = {978-1-4503-8555-8},
	url = {https://doi.org/10.1145/3465480.3466924},
	doi = {10.1145/3465480.3466924},
	abstract = {Blockchain-based smart contract platforms have traditionally employed the transaction-driven execution model. This paper presents an alternate framework for blockchain-based smart contract execution called EDSC. Our platform design presents a novel approach to tackle the scalability and performance challenges facing the smart contract ecosystem. We base EDSC's design on the Ethereum template, and it can be readily implemented for other existing smart contract platforms. To evaluate our design, we perform an experimental implementation using the Ethereum client. Our experiments with performance modeling show, on average, a 2.2 to 4.6 times reduced total latency of event-triggered smart contracts, demonstrating the effectiveness of the design in supporting time-sensitive applications. Additionally, we comment on the design's potential security aspects and demonstrate its utility by discussing potential use cases.},
	booktitle = {Proceedings of the 15th {ACM} {International} {Conference} on {Distributed} and {Event}-{Based} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Kaleem, Mudabbir and Kasichainula, Keshav and Karanjai, Rabimba and Xu, Lei and Gao, Zhimin and Chen, Lin and Shi, Weidong},
	year = {2021},
	note = {event-place: Virtual Event, Italy},
	keywords = {blockchain, smart contracts, scalability, event-driven architecture},
	pages = {78--89},
}

@inproceedings{maier_uncovering_2022,
	address = {New York, NY, USA},
	series = {{ROOTS}'21},
	title = {Uncovering {Smart} {Contract} {VM} {Bugs} {Via} {Differential} {Fuzzing}},
	isbn = {978-1-4503-9602-8},
	url = {https://doi.org/10.1145/3503921.3503923},
	doi = {10.1145/3503921.3503923},
	abstract = {The ongoing public interest in blockchains and smart contracts has brought a rise to a magnitude of different blockchain implementations. The rate at which new concepts are envisioned and implemented makes it hard to vet their impact on security. Especially smart contract platforms, executing untrusted code, are very complex by design. Still, people put their trust and money into chains that may lack proper testing. A behavior deviation for edge cases of single op-codes is a critical bug class in this brave new world. It can be abused for Denial of Service against the blockchain, chain splits, double-spending, or direct attacks on applications operating on the blockchain. In this paper, we propose an automated methodology to uncover such differences. Through coverage-guided and state-guided fuzzing, we explore smart contract virtual machine behavior against multiple VMs in parallel. We develop NeoDiff, the first framework for feedback-guided differential fuzzing of smart contract VMs. We discuss real, monetary consequences our tool prevents. NeoDiff can be ported to new smart contract platforms with ease. Apart from fuzzing Ethereum VMs, NeoDiff found a range of critical differentials in VMs for the Neo blockchain. Moreover, through a higher-layer semantics mutator, we uncovered semantic discrepancies between Neo smart contracts written in Python when executed on the blockchain vs. classic CPython. Along the way, NeoDiff uncovered memory corruptions in the C\# Neo VM.},
	booktitle = {Reversing and {Offensive}-{Oriented} {Trends} {Symposium}},
	publisher = {Association for Computing Machinery},
	author = {Maier, Dominik and Fäßler, Fabian and Seifert, Jean-Pierre},
	year = {2022},
	note = {event-place: Vienna, Austria},
	keywords = {Differential Fuzzing, Smart Contract VM, State-Aware},
	pages = {11--22},
}

@inproceedings{yang_seraph_2020,
	address = {New York, NY, USA},
	series = {{ICSE} '20},
	title = {Seraph: {Enabling} {Cross}-{Platform} {Security} {Analysis} for {EVM} and {WASM} {Smart} {Contracts}},
	isbn = {978-1-4503-7122-3},
	url = {https://doi.org/10.1145/3377812.3382157},
	doi = {10.1145/3377812.3382157},
	abstract = {As blockchain becomes increasingly popular across various industries in recent years, many companies started designing and developing their own smart contract platforms to enable better services on blockchain. While smart contracts are notoriously known to be vulnerable to external attacks, such platform diversity further amplified the security challenge. To mitigate this problem, we designed the very first cross-platform security analyzer called Seraph for smart contracts. Specifically, Seraph enables automated security analysis for different platforms built on two mainstream virtual machine architectures, i.e., EVM and WASM. To this end, Seraph introduces a set of general connector API to abstract interactions between the virtual machine and blockchain, e.g., load and update storage data on blockchain. Moreover, we proposed the symbolic semantic graph to model critical dependencies and decoupled security analysis from contract code as well. Our preliminary evaluation on four existing smart contract platforms demonstrated the potential of Seraph in finding security threats both flexibly and accurately. A video of Seraph is available at https://youtu.be/wxixZkVqUsc.},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Zhiqiang and Liu, Han and Li, Yue and Zheng, Huixuan and Wang, Lei and Chen, Bangdao},
	year = {2020},
	note = {event-place: Seoul, South Korea},
	keywords = {smart contracts, connector API, symbolic semantic graph},
	pages = {21--24},
}

@inproceedings{yang_new_2019,
	address = {New York, NY, USA},
	series = {{BSCI} '19},
	title = {New {Loan} {System} {Based} on {Smart} {Contract}},
	isbn = {978-1-4503-6786-8},
	url = {https://doi.org/10.1145/3327960.3332395},
	doi = {10.1145/3327960.3332395},
	abstract = {The traditional lending system has problems such as the need to establish a trust foundation, the third-party trust media to participate in transactions, and the inevitable breach of contract behavior. The combination of smart contracts and blockchain technology has become a breakthrough point in solving the problem of lending systems. Taking the application of smart contract in the loan system as an example, this paper uses the blockchain as the storage characteristic of the distributed database, decentralizes and stably stores the smart contract on the blockchain for the purpose of directly controlling the transaction assets and their transfer. Through the rational design and application of intelligent contracts, the coded enforcement of the transaction process in the lending system is promoted, and the problems of insufficient supervision ability and low loan efficiency in the transaction process are improved. It also shows that there is a great space for innovation and practical prospects for the reasonable combination of smart contracts and blockchains.},
	booktitle = {Proceedings of the 2019 {ACM} {International} {Symposium} on {Blockchain} and {Secure} {Critical} {Infrastructure}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Qi and Zeng, Xiao and Zhang, Yu and Hu, Wei},
	year = {2019},
	note = {event-place: Auckland, New Zealand},
	keywords = {blockchain, smart contract, loan system},
	pages = {121--126},
}

@inproceedings{chatterjee_deploying_2022,
	address = {New York, NY, USA},
	series = {{ICDCN} '22},
	title = {Deploying {Transactional} {Smart} {Contracts} {Using} {Multisignature} {Boolean} {Formulas}},
	isbn = {978-1-4503-9560-1},
	url = {https://doi.org/10.1145/3491003.3491014},
	doi = {10.1145/3491003.3491014},
	abstract = {Smart contracts have been established as the standard mechanism for online crypto-currency transactions in blockchains such as Bitcoin and Ethereum. The application scope of smart contracts is predicted to expand beyond crypto-currency in upcoming years, and this emerging technology is likely to play a significant role in other major domains. Smart contracts are usually created using a special purpose programming language. In this paper, we explore an alternative mechanism based on propositional calculus, using multisignature and lock-based boolean variables. Higher order boolean quantifiers have been avoided, and from a security standpoint, the design is deliberately kept Turing-incomplete to guarantee bounded runtime and well-defined termination paths for any valid smart contract (for homogeneous locks, our validation checks run in linear time for best case and quadratic time for worst case). Keeping in mind a widening scope for smart contracts, the applicability of our design is not confined to blockchain transactions, but can be easily integrated into other application domains.},
	booktitle = {Proceedings of the 23rd {International} {Conference} on {Distributed} {Computing} and {Networking}},
	publisher = {Association for Computing Machinery},
	author = {Chatterjee, Arnab and Hansdah, R. C.},
	year = {2022},
	note = {event-place: Delhi, AA, India},
	keywords = {Smart contract, Account, Multisignature, NTSF, Propositional formula, Q/P rule, Segmented postfix, Timelock, Usergroup, Userid},
	pages = {170--174},
}

@inproceedings{nguyen_mando-guru_2022,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2022},
	title = {{MANDO}-{GURU}: {Vulnerability} {Detection} for {Smart} {Contract} {Source} {Code} by {Heterogeneous} {Graph} {Embeddings}},
	isbn = {978-1-4503-9413-0},
	url = {https://doi.org/10.1145/3540250.3558927},
	doi = {10.1145/3540250.3558927},
	abstract = {Smart contracts are increasingly used with blockchain systems for high-value applications. It is highly desired to ensure the quality of smart contract source code before they are deployed. This paper proposes a new deep learning-based tool, MANDO-GURU, that aims to accurately detect vulnerabilities in smart contracts at both coarse-grained contract-level and fine-grained line-level. Using a combination of control-flow graphs and call graphs of Solidity code, we design new heterogeneous graph attention neural networks to encode more structural and potentially semantic relations among different types of nodes and edges of such graphs and use the encoded embeddings of the graphs and nodes to detect vulnerabilities. Our validation of real-world smart contract datasets shows that MANDO-GURU can significantly improve many other vulnerability detection techniques by up to 24\% in terms of the F1-score at the contract level, depending on vulnerability types. It is the first learning-based tool for Ethereum smart contracts that identify vulnerabilities at the line level and significantly improves the traditional code analysis-based techniques by up to 63.4\%. Our tool is publicly available at https://github.com/MANDO-Project/ge-sc-machine. A test version is currently deployed at http://mandoguru.com, and a demo video of our tool is available at http://mandoguru.com/demo-video.},
	booktitle = {Proceedings of the 30th {ACM} {Joint} {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Nguyen, Hoang H. and Nguyen, Nhat-Minh and Doan, Hong-Phuc and Ahmadi, Zahra and Doan, Thanh-Nam and Jiang, Lingxiao},
	year = {2022},
	note = {event-place: Singapore, Singapore},
	keywords = {smart contracts, vulnerability detection, Ethereum blockchain, graph neural networks, heterogeneous graphs},
	pages = {1736--1740},
}

@inproceedings{vukolic_rethinking_2017,
	address = {New York, NY, USA},
	series = {{BCC} '17},
	title = {Rethinking {Permissioned} {Blockchains}},
	isbn = {978-1-4503-4974-1},
	url = {https://doi.org/10.1145/3055518.3055526},
	doi = {10.1145/3055518.3055526},
	abstract = {Current blockchain platforms, especially the recent permissioned systems, have architectural limitations: smart contracts run sequentially, all node executes all smart contracts, consensus protocols are hard-coded, the trust model is static and not flexible, and non-determinism in smart-contract execution poses serious problems. Overcoming these limitations is critical for improving both functional properties of blockchains, such as confidentiality and consistency, as well as their non-functional properties, such as performance and scalability. We discuss these limitations in the context of permissioned blockchains, including an early version of the Hyperledger Fabric blockchain platform, and how a re-design of Hyperledger Fabric's architecture addresses them.},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Blockchain}, {Cryptocurrencies} and {Contracts}},
	publisher = {Association for Computing Machinery},
	author = {Vukolić, Marko},
	year = {2017},
	note = {event-place: Abu Dhabi, United Arab Emirates},
	keywords = {blockchain, consensus, byzantine fault-tolerance, hyperledger fabric, system architecture},
	pages = {3--7},
}

@inproceedings{chen_wasai_2022,
	address = {New York, NY, USA},
	series = {{ISSTA} 2022},
	title = {{WASAI}: {Uncovering} {Vulnerabilities} in {Wasm} {Smart} {Contracts}},
	isbn = {978-1-4503-9379-9},
	url = {https://doi.org/10.1145/3533767.3534218},
	doi = {10.1145/3533767.3534218},
	abstract = {WebAssembly (Wasm) smart contracts have shown growing popularity across blockchains (e.g., EOSIO) recently. Similar to Ethereum smart contracts, Wasm smart contracts suffer from various attacks exploiting their vulnerabilities. Even worse, few developers released the source code of their Wasm smart contracts for security review, raising the bar for uncovering vulnerable contracts. Although a few approaches have been proposed to detect vulnerable Wasm smart contracts, they have several major limitations, e.g., low code coverage, low accuracy and lack of scalability, unable to produce exploit payloads, etc. To fill the gap, in this paper, we design and develop WASAI, a new concolic fuzzer for uncovering vulnerabilities in Wasm smart contract after tackling several challenging issues. We conduct extensive experiments to evaluate WASAI, and the results show that it outperforms the state-of-the-art methods. For example, it achieves 2x code coverage than the baselines and surpasses them in detection accuracy, with an F1-measure of 99.2\%. Moreover, WASAI can handle complicated contracts (e.g., contracts with obfuscation and sophisticated verification). Applying WASAI to 991 deployed smart contracts in the wild, we find that over 70\% of smart contracts are vulnerable. By the time of this study, over 300 vulnerable contracts have not been patched and are still operating on the EOSIO Mainnet. One fake EOS vulnerability reported to the EOSIO ecosystem was recently assigned a CVE identifier (CVE-2022-27134).},
	booktitle = {Proceedings of the 31st {ACM} {SIGSOFT} {International} {Symposium} on {Software} {Testing} and {Analysis}},
	publisher = {Association for Computing Machinery},
	author = {Chen, Weimin and Sun, Zihan and Wang, Haoyu and Luo, Xiapu and Cai, Haipeng and Wu, Lei},
	year = {2022},
	note = {event-place: Virtual, South Korea},
	keywords = {smart contracts, Concolic fuzzing, dynamic software analysis},
	pages = {703--715},
}

@inproceedings{tallyn_enacting_2021,
	address = {New York, NY, USA},
	series = {{CHI} '21},
	title = {Enacting the {Last} {Mile}: {Experiences} of {Smart} {Contracts} in {Courier} {Deliveries}},
	isbn = {978-1-4503-8096-6},
	url = {https://doi.org/10.1145/3411764.3445525},
	doi = {10.1145/3411764.3445525},
	abstract = {Smart contract systems could change the nature of last-mile delivery for the better through enhanced precision, coordination and accountability. However, technological complexity poses a challenge for end-users participating in the design process, making it hard to explore their experiences and incorporate their perspectives. We describe a case study where technological prototypes create smart contract experiences for professional couriers and receptionists, allowing them to speculate about emerging possibilities, whilst remaining grounded in their current practices. Participants enacted a series of deliveries, choreographed by smart contracts, and their responses were explored in post-experience, one-to-one interviews. Working with professionals to explore the potential impact of smart contract technologies, revealed the systemic webs of value underlying their existing work practices. This has implications for design of such technologies, in which increased automation, efficiency and accountability must be delicately balanced with the benefits of sustaining personal values, relationships and agency.},
	booktitle = {Proceedings of the 2021 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Tallyn, Ella and Revans, Joe and Morgan, Evan and Fisken, Keith and Murray-Rust, Dave},
	year = {2021},
	note = {event-place: Yokohama, Japan},
	keywords = {Smart contracts, distributed ledger technology, bicycle couriers, delivery, last-mile logistics, location data, logistics infrastructure},
}

@inproceedings{hull_blockchain_2017,
	address = {New York, NY, USA},
	series = {{DEBS} '17},
	title = {Blockchain: {Distributed} {Event}-{Based} {Processing} in a {Data}-{Centric} {World}: {Extended} {Abstract}},
	isbn = {978-1-4503-5065-5},
	url = {https://doi.org/10.1145/3093742.3097982},
	doi = {10.1145/3093742.3097982},
	abstract = {Usage of Blockchain is expanding from the initial focus on crypto-currencies towards applications to support a broad range of collaborative activies amongst businesses, organizations, and individuals. There are two broad levels of Blockchain: the foundation level relates to encryption, consensus algorithms, and support for a single (logical) data store that is shared by all participants; and the "smart contract" level that enables developers and business-level users to specify the data, logic, and behavior that collaborations should follow. The smart contracts are programs that are fundamentally event driven, data-centric, and support the activity of a distributed set of stakeholders situated across multiple organizations. This raises an array of research challenges in areas including language and solution design, interoperation across smart contracts, and verification.},
	booktitle = {Proceedings of the 11th {ACM} {International} {Conference} on {Distributed} and {Event}-{Based} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Hull, Richard},
	year = {2017},
	note = {event-place: Barcelona, Spain},
	keywords = {Blockchain, Smart Contract, Business Collaboration, Business Process Management},
	pages = {2--4},
}

@inproceedings{yin_implementation_2020,
	address = {New York, NY, USA},
	series = {{CCCIS} 2020},
	title = {The {Implementation} of {Simple} {Smart} {Contract} {Language} and {Its} {Compiler} {Based} on {Ethereum} {Platform}},
	isbn = {978-1-4503-7737-9},
	url = {https://doi.org/10.1145/3418994.3419010},
	doi = {10.1145/3418994.3419010},
	abstract = {Compiling technology is an important technology in computer science. It is of great practical significance to create a language and implement its compiler. At the same time, with the rise of blockchain technology in recent years, smart contracts reappear in people's vision, and the combination of the two has great potential. The typical smart Contract languages, such as Solidity and LLL, have complex syntax and are not easy for beginners to learn and use. This paper introduces the process of making a simple smart contract language that is easy for beginners to learn. The whole process includes from language design to intermediate code execution. The compiler uses Python as the programming language, and the target running platform is Ethereum virtual machine. At the end of this paper, a demonstration example is shown.},
	booktitle = {Proceedings of the 2020 {International} {Conference} on {Computer} {Communication} and {Information} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Yin, Hanwen and Pan, Yun and Jiang, Han},
	year = {2020},
	note = {event-place: Ho Chi Minh City, Viet Nam},
	keywords = {Smart Contract, Compiler, Ethereum Virtual Machine, Programming Language},
	pages = {77--82},
}

@inproceedings{mariano_demystifying_2021,
	address = {New York, NY, USA},
	series = {{ASE} '20},
	title = {Demystifying {Loops} in {Smart} {Contracts}},
	isbn = {978-1-4503-6768-4},
	url = {https://doi.org/10.1145/3324884.3416626},
	doi = {10.1145/3324884.3416626},
	abstract = {This paper aims to shed light on how loops are used in smart contracts. Towards this goal, we study various syntactic and semantic characteristics of loops used in over 20,000 Solidity contracts deployed on the Ethereum blockchain, with the goal of informing future research on program analysis for smart contracts. Based on our findings, we propose a small domain-specific language (DSL) that can be used to summarize common looping patterns in Solidity. To evaluate what percentage of smart contract loops can be expressed in our proposed DSL, we also design and implement a program synthesis toolchain called Solis that can synthesize loop summaries in our DSL. Our evaluation shows that at least 56\% of the analyzed loops can be summarized in our DSL, and 81\% of these summaries are exactly equivalent to the original loop.},
	booktitle = {Proceedings of the 35th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Mariano, Benjamin and Chen, Yanju and Feng, Yu and Lahiri, Shuvendu K. and Dillig, Isil},
	year = {2021},
	note = {event-place: Virtual Event, Australia},
	pages = {262--274},
}

@inproceedings{fan_smart_2022,
	address = {New York, NY, USA},
	series = {{CIKM} '22},
	title = {Smart {Contract} {Scams} {Detection} with {Topological} {Data} {Analysis} on {Account} {Interaction}},
	isbn = {978-1-4503-9236-5},
	url = {https://doi.org/10.1145/3511808.3557454},
	doi = {10.1145/3511808.3557454},
	abstract = {The skyrocketing market value of cryptocurrencies has prompted more investors to pour funds into cryptocurrencies to seek asset hedging. However, the anonymity of blockchain makes cryptocurrency naturally a tool of choice for criminals to commit smart contract scams. Consequently, smart contract scam detection is particularly critical for investors to avoid economic loss. Previous methods mainly leverage specific code logic of smart contracts and/or design rules based on abnormal transaction behaviors for scam detection. Although these methods gain success at detecting particular scams, they perform worse when applied to scams with highly similar codes. Besides, well-designed decision rules rely on expert knowledge and tedious data collection steps, which causes poor flexibility. To combat these challenges, we consider the problem of smart contract scam detection via mining topological features of account interaction information that dynamically evolves. We adopt interactive features extracted from dynamic interaction information of accounts and propose a framework named TTG-SCSD to utilize the features and Topological Data Analysis for smart contract scams detection. The TTG-SCSD constructs discrete dynamic interaction graphs for each contract and designs interactive features that characterize account behaviors. The features are modeled combined with a topology quantification mechanism to capture contract intentions in transactions. Experimental results on real-world transaction datasets from Ethereum show that TTG-SCSD obtains better generalizability and improves the performance of the bare versions of the comparison methods.},
	booktitle = {Proceedings of the 31st {ACM} {International} {Conference} on {Information} \&amp; {Knowledge} {Management}},
	publisher = {Association for Computing Machinery},
	author = {Fan, Shuhui and Fu, Shaojing and Luo, Yuchuan and Xu, Haoran and Zhang, Xuyun and Xu, Ming},
	year = {2022},
	note = {event-place: Atlanta, GA, USA},
	keywords = {ethereum, data mining, smart contract scam, topological data analysis},
	pages = {468--477},
}

@inproceedings{s_evaluating_2018,
	address = {New York, NY, USA},
	series = {{WETSEB} '18},
	title = {Evaluating {Complexity} and {Digitizability} of {Regulations} and {Contracts} for a {Blockchain} {Application} {Design}},
	isbn = {978-1-4503-5726-5},
	url = {https://doi.org/10.1145/3194113.3194117},
	doi = {10.1145/3194113.3194117},
	abstract = {Blockchain technology becomes the key solution to provide trust and security without any need for a central supervisory authority to validate the transactions. By now, it plays a key role in the digital transformation of several processes and industries with varying application use cases. To promote the wide adoption of blockchain technology we need mechanisms to identify the digitizability level of the given regulations to smart contracts and mechanisms to specify which blockchain technology is best suitable for the given regulations. In this work, we propose a modeling approach that supports the automated analysis of human-readable regulation representations by suggesting how much percentage of regulation is digitizable and the suitable blockchain environment to design the application. We identify smart contract components that correspond to real-world entities and its pertaining clauses and its digitizability property. With selected examples, we explore this capability and discuss our future research directions on smart contract generation according to the recommended environment.},
	booktitle = {Proceedings of the 1st {International} {Workshop} on {Emerging} {Trends} in {Software} {Engineering} for {Blockchain}},
	publisher = {Association for Computing Machinery},
	author = {S, Pradeepkumar D and Singi, Kapil and Kaulgud, Vikrant and Podder, Sanjay},
	year = {2018},
	note = {event-place: Gothenburg, Sweden},
	keywords = {blockchain, smart contracts, digitizability complexity, regulations},
	pages = {25--29},
}

@inproceedings{andre_smartor_2018,
	address = {New York, NY, USA},
	series = {{ACSAC} '18},
	title = {{SmarTor}: {Smarter} {Tor} with {Smart} {Contracts}: {Improving} {Resilience} of {Topology} {Distribution} in the {Tor} {Network}},
	isbn = {978-1-4503-6569-7},
	url = {https://doi.org/10.1145/3274694.3274722},
	doi = {10.1145/3274694.3274722},
	abstract = {In the Tor anonymity network, the distribution of topology information relies on the correct behavior of five out of the nine trusted directory authority servers. This centralization is concerning since a powerful adversary might compromise these servers and conceal information about honest nodes, leading to the full de-anonymization of all Tor users. Our work aims at distributing the work of these trusted authorities, such increasing resilience against attacks on core infrastructure components of the Tor network. In particular, we leverage several emerging technologies, such as blockchains, smart contracts, and trusted execution environments to design and prototype a system called SmarTor. This system replaces the directory authorities with a smart contract and a distributed network of untrusted entities responsible for bandwidth measurements. We prototyped SmarTor using Ethereum smart contracts and Intel SGX secure hardware. In our evaluation, we show that SmarTor produces significantly more reliable and precise measurements compared to the current measurement system. Overall, our solution improves the decentralization of the Tor network, reduces trust assumptions and increases resilience against powerful adversaries like law enforcement and intelligence services.},
	booktitle = {Proceedings of the 34th {Annual} {Computer} {Security} {Applications} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Andre, Greubel and Alexandra, Dmitrienko and Samuel, Kounev},
	year = {2018},
	note = {event-place: San Juan, PR, USA},
	keywords = {Blockchain, Ethereum, Smart Contract, Security, Intel SGX, Privacy, Secure Hardware, Tor Network, Trused Execution Environment},
	pages = {677--691},
}

@inproceedings{lin_solsee_2022,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2022},
	title = {{SolSEE}: {A} {Source}-{Level} {Symbolic} {Execution} {Engine} for {Solidity}},
	isbn = {978-1-4503-9413-0},
	url = {https://doi.org/10.1145/3540250.3558923},
	doi = {10.1145/3540250.3558923},
	abstract = {Most of the existing smart contract symbolic execution tools perform analysis on bytecode, which loses high-level semantic information presented in source code. This makes interactive analysis tasks—such as visualization and debugging—extremely challenging, and significantly limits the tool usability. In this paper, we present SolSEE, a source-level symbolic execution engine for Solidity smart contracts. We describe the design of SolSEE, highlight its key features, and demonstrate its usages through a Web-based user interface. SolSEE demonstrates advantages over other existing source-level analysis tools in the advanced Solidity language features it supports and analysis flexibility. A demonstration video is available at: https://sites.google.com/view/solsee/.},
	booktitle = {Proceedings of the 30th {ACM} {Joint} {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Lin, Shang-Wei and Tolmach, Palina and Liu, Ye and Li, Yi},
	year = {2022},
	note = {event-place: Singapore, Singapore},
	keywords = {Smart contract, symbolic execution},
	pages = {1687--1691},
}

@inproceedings{van_der_laan_muscle_2019,
	address = {New York, NY, USA},
	series = {{SAC} '19},
	title = {{MUSCLE}: {Authenticated} {External} {Data} {Retrieval} from {Multiple} {Sources} for {Smart} {Contracts}},
	isbn = {978-1-4503-5933-7},
	url = {https://doi.org/10.1145/3297280.3297320},
	doi = {10.1145/3297280.3297320},
	abstract = {Smart contracts are applications that are deployed and executed on a blockchain's decentralised infrastructure. Many smart contract applications rely on data that resides outside the blockchain. However, while traditional web applications can communicate with trustworthy data sources directly through the Internet, this is not possible for smart contracts because their execution must be deterministic. Bringing external data into the blockchain has been a topic of research since the first introduction of Ethereum. A system that can provide this data to smart contracts is called an oracle. The primary requirement in designing oracles is that the authenticity of the data must be publicly verifiable, which can be achieved through signatures. However, transmitting data to the blockchain and performing the verification is costly, especially if applications require data from multiple sources. In that case, current approaches would need to retrieve the data from each source separately. In this paper, we present the concept of MUlti-Source oraCLE (MUSCLE) for retrieving data from multiple sources, which we believe to be the first to focus on the multi-source scenario. We implement five variants of MUSCLE, each using a different signature or aggregate signature scheme and compare their performance with two oracles that are based on TLS-N, which represents the current state of the art. Our results show that the ECDSA-based MUSCLE features the lowest total gas expenditure, while the BGLS-based oracle provides lower transaction and storage costs.},
	booktitle = {Proceedings of the 34th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {van der Laan, Bjorn and Ersoy, Oğuzhan and Erkin, Zekeriya},
	year = {2019},
	note = {event-place: Limassol, Cyprus},
	keywords = {blockchain, smart contracts, ethereum},
	pages = {382--391},
}

@inproceedings{santiago_gifflar_2021,
	address = {USA},
	series = {{CASCON} '21},
	title = {Gifflar: {A} {Framework} to {Generate} {Smart} {Contracts} on the {Fly}},
	abstract = {Blockchain is a disruptive technology that offers a secure decentralized network, allowing for direct transactions between distributed entities, without the need for a trusted third party. Smart contracts are executable codes hosted on the blockchain which enables the implementation of several decentralized applications, in different domains. Due to the complexity of the contract's construction, it is necessary to seek ways to facilitate and make this innovative development process robust. This paper presents Gifflar, a framework for generating smart contract code on the fly, in such a way that it allows a system to write, compile and implement blockchain contracts with a decentralized application still running. The framework is structured in components that implement design patterns to better define the responsibility of each one of the parts and exports a simple interaction module for modeling contracts in JSON and automatic code writing using the TypeScript language. As far as we know, this framework is one of the first to allow contract code generation dynamically at run time. Thus, the work contributes to the state of the art by addressing a new paradigm, where systems can act as smart contract developers.},
	booktitle = {Proceedings of the 31st {Annual} {International} {Conference} on {Computer} {Science} and {Software} {Engineering}},
	publisher = {IBM Corp.},
	author = {Santiago, Levy and Abijaude, Jauberth Weyll and Greve, Fabíola},
	year = {2021},
	note = {event-place: Toronto, Canada},
	keywords = {blockchain, code generation, framework, smart contract},
	pages = {214--219},
}

@inproceedings{santiago_framework_2021,
	address = {New York, NY, USA},
	series = {{SBES} '21},
	title = {A {Framework} to {Generate} {Smart} {Contracts} {On} the {Fly}},
	isbn = {978-1-4503-9061-3},
	url = {https://doi.org/10.1145/3474624.3477068},
	doi = {10.1145/3474624.3477068},
	abstract = {Blockchain is a disruptive technology that offers a secure decentralized network, and allows for direct transactions between distributed entities, without the need for a trusted third party. Smart contracts are executable codes hosted on the blockchain and enable the implementation of several decentralized applications, in different domains. However, due to the complexity of contract construction, it is necessary to seek ways to facilitate and make this innovative development process robust. This paper presents Gifflar, a framework for generating smart contract code on the fly, in such a way that it allows a system to write, compile and implement blockchain contracts with a decentralized application still running. Gifflar is structured in components that implement design patterns to better define the responsibility of each one of the parts and exports a simple interaction module for contract modeling in JSON and automatic code writing using the TypeScript language. As far as we know, this framework is one of the first to generate contracts dynamically at run time. Thus, the work contributes to the state of the art by addressing a new paradigm, where systems can act as smart contract developers.},
	booktitle = {Proceedings of the {XXXV} {Brazilian} {Symposium} on {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Santiago, Levy and Abijaude, Jauberth and Greve, Fabíola},
	year = {2021},
	note = {event-place: Joinville, Brazil},
	keywords = {Blockchain, Code Generation, Framework, Smart Contract},
	pages = {410--415},
}

@inproceedings{li_securing_2020,
	address = {New York, NY, USA},
	series = {{PLDI} 2020},
	title = {Securing {Smart} {Contract} with {Runtime} {Validation}},
	isbn = {978-1-4503-7613-6},
	url = {https://doi.org/10.1145/3385412.3385982},
	doi = {10.1145/3385412.3385982},
	abstract = {We present Solythesis, a source to source Solidity compiler which takes a smart contract code and a user specified invariant as the input and produces an instrumented contract that rejects all transactions that violate the invariant. The design of Solythesis is driven by our observation that the consensus protocol and the storage layer are the primary and the secondary performance bottlenecks of Ethereum, respectively. Solythesis operates with our novel delta update and delta check techniques to minimize the overhead caused by the instrumented storage access statements. Our experimental results validate our hypothesis that the overhead of runtime validation, which is often too expensive for other domains, is in fact negligible for smart contracts. The CPU overhead of Solythesis is only 0.1\% on average for our 23 benchmark contracts.},
	booktitle = {Proceedings of the 41st {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {Association for Computing Machinery},
	author = {Li, Ao and Choi, Jemin Andrew and Long, Fan},
	year = {2020},
	note = {event-place: London, UK},
	keywords = {smart contract, compiler, runtime validation},
	pages = {438--453},
}

@inproceedings{lai_static_2020,
	address = {New York, NY, USA},
	series = {{ICCSP} 2020},
	title = {Static {Analysis} of {Integer} {Overflow} of {Smart} {Contracts} in {Ethereum}},
	isbn = {978-1-4503-7744-7},
	url = {https://doi.org/10.1145/3377644.3377650},
	doi = {10.1145/3377644.3377650},
	abstract = {In recent years, vulnerabilities of smart contracts have frequently break out. In particular, integer overflow of smart contracts, a high-risk vulnerability, has caused huge financial losses. However, most tools currently fail to detect integer overflow in smart contracts. In this paper, we summarize 11 types of integer overflow features for Solidity smart contracts in Ethereum and abstractly define 83 corresponding XPath patterns. And we design an extensible static analysis tool to detect common integer overflow vulnerabilities of Solidity smart contracts in Ethereum through the defined XPath patterns. To evaluate our tool, we tested 7,000 verified Solidity smart contracts and found that there were 430 smart contracts with vulnerabilities of integer overflow. Experimental results show that there are still high-risk vulnerabilities of integer overflow in verified smart contracts.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Cryptography}, {Security} and {Privacy}},
	publisher = {Association for Computing Machinery},
	author = {Lai, Enmei and Luo, Wenjun},
	year = {2020},
	note = {event-place: Nanjing, China},
	keywords = {smart contract, vulnerability detection, integer overflow, XPath},
	pages = {110--115},
}

@inproceedings{bao_trusted_2022,
	address = {New York, NY, USA},
	series = {{ASSE}' 22},
	title = {Trusted {Blockchain} of {Ring} {Signature} in {TEE} {Environment}},
	isbn = {978-1-4503-8745-3},
	url = {https://doi.org/10.1145/3523181.3523183},
	doi = {10.1145/3523181.3523183},
	abstract = {Traditional blockchain system has two problems: poor privacy protection and scalability. The public chain discloses all information, which can be seen by every node. The code of smart contract is clear-text, and the data is also clear-text. Every node in the public chain is untrustworthy, so it is necessary to design a complex consistency protocol, which often leads to poor performance (low TPS), waste of power, or lower overall credibility. TEE can construct a trusted execution environment Enclave (safe house), which is similar to a black box, the outside cannot access the inside, and it can allow the outside to authenticate the inside reliably through remote authentication. This paper focuses on how to integrate Intel SGX and ring signature algorithm into traditional blockchain to realize privacy calculation and transaction. To protect the anonymity of traders and to process trusted privacy calculation under the chain. Through the cooperation between on the chain and off the chain, "calculation" and "settlement" are completely decoupled, thus solving the performance bottleneck and privacy problems of traditional smart contracts.},
	booktitle = {2022 3rd {Asia} {Service} {Sciences} and {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Bao, LuWei and Lu, GeHao and Fu, LiYu},
	year = {2022},
	note = {event-place: Macau, Macao},
	pages = {8--13},
}

@inproceedings{taherkordi_pervasive_2018,
	address = {New York, NY, USA},
	series = {{ICBTA} 2018},
	title = {Pervasive {Smart} {Contracts} for {Blockchains} in {IoT} {Systems}},
	isbn = {978-1-4503-6646-5},
	url = {https://doi.org/10.1145/3301403.3301405},
	doi = {10.1145/3301403.3301405},
	abstract = {Thanks to its decentralized structure and immutability, blockchain technology has the potential to address relevant security and privacy challenges in the Internet of Things (IoT). In particular, by hosting and executing smart contracts, blockchain allows secure, flexible, and traceable message communication between IoT devices. The unique characteristics of IoT systems, such as heterogeneity and pervasiveness, however, pose challenges in designing smart contracts for such systems. In this paper, we study these challenges and propose a design approach for smart contracts used in IoT systems. The main goal of our design model is to enhance the development of IoT smart contracts based on the inherent pervasive attributes of IoT systems. In particular, the design model allows the smart contracts to encapsulate functionalities such as contractlevel communication between IoT devices, access to data-sources within contracts, and interoperability of heterogeneous IoT smart contracts. The essence of our approach is structuring the design of IoT smart contracts as self-contained software services, inspired by the microservice architecture model. The flexibility, scalability and modularity of this model make it an efficient approach for developing pervasive IoT smart contracts.},
	booktitle = {Proceedings of the 2018 {International} {Conference} on {Blockchain} {Technology} and {Application}},
	publisher = {Association for Computing Machinery},
	author = {Taherkordi, Amir and Herrmann, Peter},
	year = {2018},
	note = {event-place: Xi'an, China},
	keywords = {Smart Contracts, Internet of Things, Blockchains, Microservices},
	pages = {6--11},
}

@inproceedings{vandenbogaerde_graph-based_2019-1,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2019},
	title = {A {Graph}-{Based} {Framework} for {Analysing} the {Design} of {Smart} {Contracts}},
	isbn = {978-1-4503-5572-8},
	url = {https://doi.org/10.1145/3338906.3342495},
	doi = {10.1145/3338906.3342495},
	abstract = {Used as a platform for executing smart contracts, Blockchain technology has yielded new programming languages. We propose a graph-based framework for computing software design metrics for the Solidity programming language, and use this framework in a preliminary study on 505 smart contracts mined from GitHub. The results show that most of the smart contracts are rather straightforward from an objected-oriented point of view and that new design metrics specific to smart contracts should be developed.},
	booktitle = {Proceedings of the 2019 27th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Vandenbogaerde, Bram},
	year = {2019},
	note = {event-place: Tallinn, Estonia},
	keywords = {Smart Contracts, Metrics, Mining Software Repositories},
	pages = {1220--1222},
}

@article{sergey_safer_2019,
	title = {Safer {Smart} {Contract} {Programming} with {Scilla}},
	volume = {3},
	url = {https://doi.org/10.1145/3360611},
	doi = {10.1145/3360611},
	abstract = {The rise of programmable open distributed consensus platforms based on the blockchain technology has aroused a lot of interest in replicated stateful computations, aka smart contracts. As blockchains are used predominantly in financial applications, smart contracts frequently manage millions of dollars worth of virtual coins. Since smart contracts cannot be updated once deployed, the ability to reason about their correctness becomes a critical task. Yet, the de facto implementation standard, pioneered by the Ethereum platform, dictates smart contracts to be deployed in a low-level language, which renders independent audit and formal verification of deployed code infeasible in practice. We report an ongoing experiment held with an industrial blockchain vendor on designing, evaluating, and deploying Scilla, a new programming language for safe smart contracts. Scilla is positioned as an intermediate-level language, suitable to serve as a compilation target and also as an independent programming framework. Taking System F as a foundational calculus, Scilla offers strong safety guarantees by means of type soundness. It provides a clean separation between pure computational, state-manipulating, and communication aspects of smart contracts, avoiding many known pitfalls due to execution in a byzantine environment. We describe the motivation, design principles, and semantics of Scilla, and we report on Scilla use cases provided by the developer community. Finally, we present a framework for lightweight verification of Scilla programs, and showcase it with two domain-specific analyses on a suite of real-world use cases.},
	number = {OOPSLA},
	journal = {Proc. ACM Program. Lang.},
	author = {Sergey, Ilya and Nagaraj, Vaivaswatha and Johannsen, Jacob and Kumar, Amrit and Trunov, Anton and Hao, Ken Chan Guan},
	month = oct,
	year = {2019},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {Blockchain, Smart Contracts, Domain-Specific Languages, Static Analysis},
}

@inproceedings{rocha_preliminary_2018,
	address = {New York, NY, USA},
	series = {{WETSEB} '18},
	title = {Preliminary {Steps} towards {Modeling} {Blockchain} {Oriented} {Software}},
	isbn = {978-1-4503-5726-5},
	url = {https://doi.org/10.1145/3194113.3194123},
	doi = {10.1145/3194113.3194123},
	abstract = {Even though blockchain is mostly popular for its cryptocurrency, smart contracts have become a very prominent blockchain application. Smart contracts are like classes that can be called by client applications outside the blockchain. Therefore it is possible to develop blockchain-oriented software (BOS) that implements part of the business logic in the blockchain by using smart contracts. Currently, there is no design standard to model BOS. Since modeling is an important part of designing a software, developers may struggle to plan their BOS. In this paper, we show three complementary modeling approaches based on well-known software engineering models and apply them to a BOS example. Our goal is to start the discussion on specialized blockchain modeling notations.},
	booktitle = {Proceedings of the 1st {International} {Workshop} on {Emerging} {Trends} in {Software} {Engineering} for {Blockchain}},
	publisher = {Association for Computing Machinery},
	author = {Rocha, Henrique and Ducasse, Stéphane},
	year = {2018},
	note = {event-place: Gothenburg, Sweden},
	keywords = {blockchain, smart contracts, BPMN, ER model, modeling, UML},
	pages = {52--57},
}

@inproceedings{su_effectively_2023,
	address = {New York, NY, USA},
	series = {{ASE} '22},
	title = {Effectively {Generating} {Vulnerable} {Transaction} {Sequences} in {Smart} {Contracts} with {Reinforcement} {Learning}-{Guided} {Fuzzing}},
	isbn = {978-1-4503-9475-8},
	url = {https://doi.org/10.1145/3551349.3560429},
	doi = {10.1145/3551349.3560429},
	abstract = {As computer programs run on top of blockchain, smart contracts have proliferated a myriad of decentralized applications while bringing security vulnerabilities, which may cause huge financial losses. Thus, it is crucial and urgent to detect the vulnerabilities of smart contracts. However, existing fuzzers for smart contracts are still inefficient to detect sophisticated vulnerabilities that require specific vulnerable transaction sequences to trigger. To address this challenge, we propose a novel vulnerability-guided fuzzer based on reinforcement learning, namely RLF, for generating vulnerable transaction sequences to detect such sophisticated vulnerabilities in smart contracts. In particular, we firstly model the process of fuzzing smart contracts as a Markov decision process to construct our reinforcement learning framework. We then creatively design an appropriate reward with consideration of both vulnerability and code coverage so that it can effectively guide our fuzzer to generate specific transaction sequences to reveal vulnerabilities, especially for the vulnerabilities related to multiple functions. We conduct extensive experiments to evaluate RLF’s performance. The experimental results demonstrate that our RLF outperforms state-of-the-art vulnerability-detection tools (e.g., detecting 8\%-69\% more vulnerabilities within 30 minutes).},
	booktitle = {Proceedings of the 37th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Su, Jianzhong and Dai, Hong-Ning and Zhao, Lingjun and Zheng, Zibin and Luo, Xiapu},
	year = {2023},
	note = {event-place: Rochester, MI, USA},
	keywords = {Reinforcement learning, Smart contract, Fuzzing},
}

@inproceedings{kera_lithopia_2019,
	address = {New York, NY, USA},
	series = {{CHI} {EA} '19},
	title = {Lithopia: {Prototyping} {Blockchain} {Futures}},
	isbn = {978-1-4503-5971-9},
	url = {https://doi.org/10.1145/3290607.3312896},
	doi = {10.1145/3290607.3312896},
	abstract = {Lithopia is a prototype of a blockchain-managed fictional village that uses satellite and drone data to trigger smart contracts on the open source blockchain platform, Hyperledger. The project is testing the possibility of anticipatory governance of emerging blockchain and distributed ledger technologies (DLTs) by involving stakeholders in the design process over templates. The goal is to question the promises of blockchain governance happening over automation and smart contracts and to offer an alternative to the misuses of emerging technologies in the so-called predictive and anticipatory design. The prototype consists of a functional Node-RED dashboard used as an interface for the Hyperledger smart contracts and a design fiction movie about the lives of the Lithopians.},
	booktitle = {Extended {Abstracts} of the 2019 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Kera, Denisa Reshef and Šourek, Petr and Kraiński, Mateusz and Reshef, Yair and Rodríguez, Juan Manuel Corchado and Knobloch, Iva Magdalena},
	year = {2019},
	note = {event-place: Glasgow, Scotland Uk},
	keywords = {blockchain, smart contracts, hyperledger, anticipatory design, design fiction, distributed ledger technologies, node-red, stakeholder engagement},
	pages = {1--6},
}

@inproceedings{wang_vultron_2019,
	series = {{ICSE}-{NIER} '19},
	title = {Vultron: {Catching} {Vulnerable} {Smart} {Contracts} {Once} and for {All}},
	url = {https://doi.org/10.1109/ICSE-NIER.2019.00009},
	doi = {10.1109/ICSE-NIER.2019.00009},
	abstract = {Despite the high stakes involved, smart contracts are often developed in an undisciplined way thus far. The existence of vulnerabilities compromises the security and reliability of smart contracts, and endangers the trust of participants in their ongoing businesses. Existing vulnerability detection techniques are often designed case-by-case, making them difficult to generalize. In this paper, we design general principles for detecting vulnerable smart contracts. Our key insight is that almost all the existing transaction-related vulnerabilities are due to the mismatch between the actual transferred amount and the amount reflected on the contract's internal bookkeeping. Based on this, we propose a precise and generally applicable technique, VULTRON, which can detect irregular transactions due to various types of adversarial exploits. We also report preliminary results applying our technique to real-world case studies.},
	booktitle = {Proceedings of the 41st {International} {Conference} on {Software} {Engineering}: {New} {Ideas} and {Emerging} {Results}},
	publisher = {IEEE Press},
	author = {Wang, Haijun and Li, Yi and Lin, Shang-Wei and Ma, Lei and Liu, Yang},
	year = {2019},
	note = {event-place: Montreal, Quebec, Canada},
	pages = {1--4},
}

@inproceedings{tiansong_design_2020-1,
	address = {New York, NY, USA},
	series = {{ICIIP} '19},
	title = {Design and {Implementation} of {Second}-{Hand} {Goods} {Renting} {System} {Based} {On} {Ethereum} {Smart} {Contract}},
	isbn = {978-1-4503-6191-0},
	url = {https://doi.org/10.1145/3378065.3378131},
	doi = {10.1145/3378065.3378131},
	abstract = {Ethereum blockchain is a revolutionary decentralized database technology on the Internet, with the characteristics of data tamperability, disintermediation, autonomy, traceability, point-to-point transaction, programmable and so on. Its emergence has an important impact on the development of many traditional industries. This paper analyzes the shortcomings of the traditional second-hand goods rental system and uses the blockchain technology to design the second-hand goods renting system based on ethereum smart contract. It introduces the background of blockchain and Ethereum smart contract, gives the overall framework of system design, and specifically describes the three parts of the system: blockchain module, smart contract module and the front end of DAPP, and the problems of combining blockchain and rental system are analyzed to provide a reference for better applications in the future.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Intelligent} {Information} {Processing}},
	publisher = {Association for Computing Machinery},
	author = {Tiansong, Li and Yu, Liu},
	year = {2020},
	note = {event-place: China, China},
	keywords = {Blockchain, Ethereum, Smart contract, Rental system, Second-hand goods},
	pages = {346--351},
}

@inproceedings{feist_slither_2019,
	series = {{WETSEB} '19},
	title = {Slither: {A} {Static} {Analysis} {Framework} for {Smart} {Contracts}},
	url = {https://doi.org/10.1109/WETSEB.2019.00008},
	doi = {10.1109/WETSEB.2019.00008},
	abstract = {This paper describes Slither, a static analysis framework designed to provide rich information about Ethereum smart contracts. It works by converting Solidity smart contracts into an intermediate representation called SlithIR. SlithIR uses Static Single Assignment (SSA) form and a reduced instruction set to ease implementation of analyses while preserving semantic information that would be lost in transforming Solidity to bytecode. Slither allows for the application of commonly used program analysis techniques like dataflow and taint tracking. Our framework has four main use cases: (1) automated detection of vulnerabilities, (2) automated detection of code optimization opportunities, (3) improvement of the user's understanding of the contracts, and (4) assistance with code review.In this paper, we present an overview of Slither, detail the design of its intermediate representation, and evaluate its capabilities on real-world contracts. We show that Slither's bug detection is fast, accurate, and outperforms other static analysis tools at finding issues in Ethereum smart contracts in terms of speed, robustness, and balance of detection and false positives. We compared tools using a large dataset of smart contracts and manually reviewed results for 1000 of the most used contracts.},
	booktitle = {Proceedings of the 2nd {International} {Workshop} on {Emerging} {Trends} in {Software} {Engineering} for {Blockchain}},
	publisher = {IEEE Press},
	author = {Feist, Josselin and Greico, Gustavo and Groce, Alex},
	year = {2019},
	note = {event-place: Montreal, Quebec, Canada},
	pages = {8--15},
}

@inproceedings{nissen_geocoin_2018-1,
	address = {New York, NY, USA},
	series = {{CHI} '18},
	title = {{GeoCoin}: {Supporting} {Ideation} and {Collaborative} {Design} with {Smart} {Contracts}},
	isbn = {978-1-4503-5620-6},
	url = {https://doi.org/10.1145/3173574.3173737},
	doi = {10.1145/3173574.3173737},
	abstract = {Design and HCI researchers are increasingly working with complex digital infrastructures, such as cryptocurrencies, distributed ledgers and smart contracts. These technologies will have a profound impact on digital systems and their audiences. However, given their emergent nature and technical complexity, involving non-specialists in the design of applications that employ these technologies is challenging. In this paper, we discuss these challenges and present GeoCoin, a location-based platform for embodied learning and speculative ideating with smart contracts. In collaborative workshops with GeoCoin, participants engaged with location-based smart contracts, using the platform to explore digital 'debit' and 'credit' zones in the city. These exercises led to the design of diverse distributed-ledger applications, for time-limited financial unions, participatory budgeting, and humanitarian aid. These results contribute to the HCI community by demonstrating how an experiential prototype can support understanding of the complexities behind new digital infrastructures and facilitate participant engagement in ideation and design processes.},
	booktitle = {Proceedings of the 2018 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Nissen, Bettina and Pschetz, Larissa and Murray-Rust, Dave and Mehrpouya, Hadi and Oosthuizen, Shaune and Speed, Chris},
	year = {2018},
	note = {event-place: Montreal QC, Canada},
	keywords = {smart contracts, distributed ledgers, design and ideation, geofencing, smart city},
	pages = {1--10},
}

@inproceedings{lu_bpu_2020,
	series = {{DAC} '20},
	title = {{BPU}: {A} {Blockchain} {Processing} {Unit} for {Accelerated} {Smart} {Contract} {Execution}},
	isbn = {978-1-4503-6725-7},
	abstract = {Modern blockchains use smart contracts to implement automatic and decentralized programs, which are the foundations of Decentralized Applications (DApp). The poor performance on general purpose computers has become the bottleneck that limits the blockchain and smart contracts from being widely used. In this paper, we present BPU, a high-performance modularized blockchain processing unit. BPU aims at bringing performance and flexibility to the blockchain and DApp processing. Our design achieves significant speedup compared against the software implementation on an Intel CPU.},
	booktitle = {Proceedings of the 57th {ACM}/{EDAC}/{IEEE} {Design} {Automation} {Conference}},
	publisher = {IEEE Press},
	author = {Lu, Tao and Peng, Lu},
	year = {2020},
	note = {event-place: Virtual Event, USA},
	keywords = {blockchain, smart contract, accelerator, transaction processing},
}

@inproceedings{jia_delottery_2020,
	address = {New York, NY, USA},
	series = {{ICBTA} 2019},
	title = {{DeLottery}: {A} {Novel} {Decentralized} {Lottery} {System} {Based} on {Blockchain} {Technology}},
	isbn = {978-1-4503-7743-0},
	url = {https://doi.org/10.1145/3376044.3376049},
	doi = {10.1145/3376044.3376049},
	abstract = {In this paper, we design DeLottery, a decentralized lottery and gambling system based on block chain technology and smart contracts. Lottery is a classical form of entertainment and charity for centuries. Facing the bottleneck of the combination between lottery and information technology, we use smart contracts and blockchain in decentralized, intelligent, and secure systems for lottery industries. Moreover, we are inspired by the algorithm of RANDAO, an outstanding way of random number generation in blockchain scenario. The components and the functions of the novel system are described in details. We implement DeLottery in a blockchain network and show functioning procedure and security of the proposed lottery system.},
	booktitle = {Proceedings of the 2019 2nd {International} {Conference} on {Blockchain} {Technology} and {Applications}},
	publisher = {Association for Computing Machinery},
	author = {Jia, Zhifeng and Chen, Rui and Li, Jie},
	year = {2020},
	note = {event-place: Xi'an, China},
	keywords = {blockchain, smart contract, decentralized, lottery system},
	pages = {20--25},
}

@inproceedings{thyagarajan_opensquare_2021,
	address = {New York, NY, USA},
	series = {{CCS} '21},
	title = {{OpenSquare}: {Decentralized} {Repeated} {Modular} {Squaring} {Service}},
	isbn = {978-1-4503-8454-4},
	url = {https://doi.org/10.1145/3460120.3484809},
	doi = {10.1145/3460120.3484809},
	abstract = {Repeated Modular Squaring is a versatile computational operation that has led to practical constructions of timed-cryptographic primitives like time-lock puzzles (TLP) and verifiable delay functions (VDF) that have a fast growing list of applications. While there is a huge interest for timed-cryptographic primitives in the blockchains area, we find two real-world concerns that need immediate attention towards their large-scale practical adoption: Firstly, the requirement to constantly perform computations seems unrealistic for most of the users. Secondly, choosing the parameters for the bound (T) seems complicated due to the lack of heuristics and experience. We present OpenSquare, a decentralized repeated modular squaring service, that overcomes the above concerns. OpenSquare lets clients outsource their repeated modular squaring computation via smart contracts to any computationally powerful servers that offer computational services for rewards in an unlinkable manner.OpenSquare naturally gives us publicly computable heuristics about a pre-specified number (T) and the corresponding reward amounts of repeated squarings necessary for a time period. Moreover, OpenSquare rewards multiple servers for a single request, in a sybil resistant manner to incentivise maximum server participation and is therefore resistant to censorship and single-points-of failures. We give game-theoretic analysis to support the mechanism design of OpenSquare: (1) incentivises servers to stay available with their services, (2) minimizes the cost of outsourcing for the client, and (3) ensures the client receives the valid computational result with high probability. To demonstrate practicality, we also implement OpenSquare's smart contract in Solidity and report the gas costs for all of its functions. Our results show that the on-chain computational costs for both the clients and the servers are quite low, and therefore feasible for practical deployments and usage.},
	booktitle = {Proceedings of the 2021 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Thyagarajan, Sri Aravinda Krishnan and Gong, Tiantian and Bhat, Adithya and Kate, Aniket and Schröder, Dominique},
	year = {2021},
	note = {event-place: Virtual Event, Republic of Korea},
	keywords = {smart contracts, repeated modular squaring},
	pages = {3447--3464},
}

@inproceedings{zheng_park_2022,
	address = {New York, NY, USA},
	series = {{ISSTA} 2022},
	title = {Park: {Accelerating} {Smart} {Contract} {Vulnerability} {Detection} via {Parallel}-{Fork} {Symbolic} {Execution}},
	isbn = {978-1-4503-9379-9},
	url = {https://doi.org/10.1145/3533767.3534395},
	doi = {10.1145/3533767.3534395},
	abstract = {Symbolic detection has been widely used to detect vulnerabilities in smart contracts. Unfortunately, as reported, existing symbolic tools cost too much time, since they need to execute all paths to detect vulnerabilities. Thus, their accuracy is limited by time. To tackle this problem, in this paper, we propose Park, the first general framework of parallel-fork symbolic execution for smart contracts. The main idea is to use multiple processes during symbolic execution, leveraging multiple CPU cores to enhance efficiency. Firstly, we propose a fork-operation based dynamic forking algorithm to achieve parallel symbolic contract execution. Secondly, to address the SMT performance loss problem in parallelization, we propose an adaptive processes restriction and adjustment algorithm. Thirdly, we design a shared-memory based global variable reconstruction method to collect and rebuild the global variables from different processes. We implement Park as a plug-in and apply it to two popular symbolic execution tools for smart contracts: Oyente and Mythril. The experimental results with third-party datasets show that Park-Oyente and Park-Mythril can provide up to 6.84x and 7.06x speedup compared to original tools, respectively.},
	booktitle = {Proceedings of the 31st {ACM} {SIGSOFT} {International} {Symposium} on {Software} {Testing} and {Analysis}},
	publisher = {Association for Computing Machinery},
	author = {Zheng, Peilin and Zheng, Zibin and Luo, Xiapu},
	year = {2022},
	note = {event-place: Virtual, South Korea},
	keywords = {Blockchain, Smart Contract, Symbolic Execution},
	pages = {740--751},
}

@inproceedings{zhao_bmcprotector_2018,
	address = {New York, NY, USA},
	series = {{ICBTA} 2018},
	title = {{BMCProtector}: {A} {Blockchain} and {Smart} {Contract} {Based} {Application} for {Music} {Copyright} {Protection}},
	isbn = {978-1-4503-6646-5},
	url = {https://doi.org/10.1145/3301403.3301404},
	doi = {10.1145/3301403.3301404},
	abstract = {In this paper, we explore the design and construct a prototype implementation of an Ethereum application, BMCProtector, which is based on Blockchain and Smart Contract technology, to protect music copyright and ensure rights holders income rights. With the blockchain, musicians can easily authorize and manage their music copyright on a public ledger. Without intermediaries being involved during the propagation process, rights holders can receive a greater share of royalty payments from the music industry automatically and instantly. We deal with piracy issues using encryption and watermarking methods. We also introduce a versioning mechanism to update the data in the smart contract for correcting mistakes made by the publisher. BMCProtector provides a solution to protect music copyright more effectively.},
	booktitle = {Proceedings of the 2018 {International} {Conference} on {Blockchain} {Technology} and {Application}},
	publisher = {Association for Computing Machinery},
	author = {Zhao, Sijia and O'Mahony, Donal},
	year = {2018},
	note = {event-place: Xi'an, China},
	keywords = {Blockchain, Smart Contract, Music Copyright, Versioning System},
	pages = {1--5},
}

@inproceedings{xu_pattern_2018,
	address = {New York, NY, USA},
	series = {{EuroPLoP} '18},
	title = {A {Pattern} {Collection} for {Blockchain}-{Based} {Applications}},
	isbn = {978-1-4503-6387-7},
	url = {https://doi.org/10.1145/3282308.3282312},
	doi = {10.1145/3282308.3282312},
	abstract = {Blockchain is an emerging technology that enables new forms of decentralized software architectures, where distributed components can reach agreements on shared system states without trusting a central integration point. Blockchain provides a shared infrastructure to execute programs, called smart contracts, and to store data. Since blockchain technologies are at an early stage, there is a lack of a systematic and holistic view on designing software systems that use blockchain. We view blockchain as part of a bigger system, which requires patterns for using blockchain in the design of their software architecture. In this paper, we collect a list of patterns for blockchain-based applications. The pattern collection is categorized into four types, including interaction with external world patterns, data management patterns, security patterns and contract structural patterns. Some patterns are designed considering the nature of blockchain and how it can be specifically introduced within real-world applications. Others are variants of existing design patterns applied in the context of blockchain-based applications and smart contracts.},
	booktitle = {Proceedings of the 23rd {European} {Conference} on {Pattern} {Languages} of {Programs}},
	publisher = {Association for Computing Machinery},
	author = {Xu, Xiwei and Pautasso, Cesare and Zhu, Liming and Lu, Qinghua and Weber, Ingo},
	year = {2018},
	note = {event-place: Irsee, Germany},
	keywords = {Blockchain, Smart contract, Patterns},
}

@inproceedings{bi_smart_2022,
	address = {New York, NY, USA},
	series = {{ICBCT}'22},
	title = {Smart {Contract}-{Based} {Refrigerated} {Container} {Traceability} {System}},
	isbn = {978-1-4503-9576-2},
	url = {https://doi.org/10.1145/3532640.3532653},
	doi = {10.1145/3532640.3532653},
	abstract = {A large number of refrigerated container are moved everyday domestically and internationally.The information of refrigerated container is usually stored centrally. It is prone to being tampered by the responsible party, making it difficult to call to account. Due to its characteristics of decentralization, transparency and immutability, blockchain technology can be used to alleviate this problem. In this paper, we propose a blockchain-based refrigerated container traceability system that can trace the information of refrigerated container. We also design a smart contract to realize the information upload and query of refrigerated containers. The experimental results show that the blockchain traceability system and smart contract proposed can effectively monitor and trace refrigerated containers. It guarantees the integrity and reliability of traceability information.},
	booktitle = {The 2022 4th {International} {Conference} on {Blockchain} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Bi, Shuhui and Liu, Zhiping},
	year = {2022},
	note = {event-place: Shanghai, China},
	keywords = {Blockchain, Smart contract, Traceability, Refrigerated container},
	pages = {95--101},
}

@inproceedings{li_smart_2021-1,
	address = {New York, NY, USA},
	series = {{ICBCT} '21},
	title = {Smart {Contract} {Design} for a {Bidding}-{Based} {Supply} {Chain} {System} {Built} on an {Alliance} {Blockchain}},
	isbn = {978-1-4503-8962-4},
	url = {https://doi.org/10.1145/3460537.3460551},
	doi = {10.1145/3460537.3460551},
	abstract = {With the development of marketing, the bidding transactions among enterprises become more and more frequent. The traditional supply chain system cannot meet the needs of enterprise operation, due to the problems like inefficient information sharing, low collaboration, and huge consumption of human resources. To deal with the above problems, the emergence of blockchain technology provides a promising solution. In this paper, we employ an alliance blockchain architecture to realize a bidding-based supply chain system. Specially, we design a smart contract with reasonable contract interaction rules for the whole process a bidding transaction, with two specific functions, i.e., risk early warning and intelligent bid evaluating. In addition, a real alliance blockchain is implemented based on the Hyperledger platform, to validate the feasibility of our designed smart contract.},
	booktitle = {2021 {The} 3rd {International} {Conference} on {Blockchain} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Li, Xuewei and Chen, Han and Xie, Zhiyuan and Xie, Ying and Yang, Antao},
	year = {2021},
	note = {event-place: Shanghai, China},
	keywords = {Smart contract, Alliance blockchian, Bidding, Supply chain},
	pages = {1--8},
}

@inproceedings{tallyn_geopact_2020,
	address = {New York, NY, USA},
	series = {{DIS} '20},
	title = {{GeoPact}: {Engaging} {Publics} in {Location}-{Aware} {Smart} {Contracts} through {Technological} {Assemblies}},
	isbn = {978-1-4503-6974-9},
	url = {https://doi.org/10.1145/3357236.3395583},
	doi = {10.1145/3357236.3395583},
	abstract = {This paper presents GeoPact, an assembly of technological objects that materialises location-aware smart contracts using internet of things and digital ledger technologies. Such contracts may facilitate the creation of distributed systems and services for transport and logistics that are locally constructed and adaptable, thus supporting specific community needs and sustainable objectives. However the technological infrastructures that underpin these systems are complex, making it difficult to engage publics in design processes. GeoPact grounds infrastructure in relatable physical activities, that are linked with holistic views of the system, and creates new experiences for public engagement. In these activities participants were invited to roleplay as couriers, and to progress through delivery scenarios which were governed by smart contracts. Participants and spectators were then encouraged to discuss their reactions, concerns and ideas. This paper illustrates the GeoPact assembly and reflects on our engagement activities.},
	booktitle = {Proceedings of the 2020 {ACM} {Designing} {Interactive} {Systems} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Tallyn, Ella and Revans, Joe and Morgan, Evan and Murray-Rust, Dave},
	year = {2020},
	note = {event-place: Eindhoven, Netherlands},
	keywords = {blockchain, smart contracts, logistics, location data, dlt, infrastructure, iot, public engagement, transport},
	pages = {799--811},
}

@inproceedings{yu_blockchain-based_2022,
	address = {New York, NY, USA},
	series = {{ICBTA} 2021},
	title = {Blockchain-{Based} {Supply} {Chain} {Financial} {Services} {Using} {Smart} {Contract}},
	isbn = {978-1-4503-8746-0},
	url = {https://doi.org/10.1145/3510487.3510497},
	doi = {10.1145/3510487.3510497},
	abstract = {Supply chain finance (SCF), a proposal to address financing problems of small and medium enterprises (SMEs), aims to make working capital optimized by utilizing credit and transaction information through cooperation between upstream and downstream in the supply chain. But some demerits such as information asymmetry and the lack of trust in financing scenarios could still be witnessed in supply chain finance. Blockchain technology, with the characteristics of asymmetric encryption, decentralization, nonrepudiation, and conducting transactions without the supervision of a trusted third party, has revolved multiple stages of development. Smart contracts are regarded as an important derivative technology of blockchain, which are automatically executed by the code between multiple parties through the blockchain without relying on a trusted institution. In this paper, we propose a blockchain-based supply chain financial system combining smart contracts and main methods of supply chain financing to solve the disadvantages of SCF. We select three represented financing modes to design financing platforms with the introduction of smart contracts, and present our schemes in the form of specific pseudo code. All financing processes of supply chain are conducted on the basis of ethereum blockchain. This allows SMEs which have difficulty in capital turnover in the short term, or have insufficient credit to get financial loans more easily compared with traditional financing approaches due to merits of blockchain, and also this could facilitate supply chain to improve financing efficiency for SMEs.},
	booktitle = {2021 4th {International} {Conference} on {Blockchain} {Technology} and {Applications}},
	publisher = {Association for Computing Machinery},
	author = {Yu, Xiaocong},
	year = {2022},
	note = {event-place: Xi'an, China},
	keywords = {Blockchain, Smart contracts, SMEs, Supply chain finance},
	pages = {63--69},
}

@inproceedings{gu_cloud_2018,
	address = {New York, NY, USA},
	series = {{ICCNS} 2018},
	title = {A {Cloud} {Storage} {Resource} {Transaction} {Mechanism} {Based} on {Smart} {Contract}},
	isbn = {978-1-4503-6567-3},
	url = {https://doi.org/10.1145/3290480.3290499},
	doi = {10.1145/3290480.3290499},
	abstract = {Since the security and fault tolerance is the two important metrics of the data storage, it brings both opportunities and challenges for distributed data storage and transaction. The traditional transaction system of storage resources, which generally runs in a centralized mode, results in high cost, vendor lock-in, single point failure risk, DDoS attack and information security. Therefore, this paper proposes a distributed transaction method for cloud storage based on smart contract. First, to guarantee the fault tolerance and decrease the storing cost for erasure coding, a VCG-based auction mechanism is proposed for storage transaction, and we deploy and implement the proposed mechanism by designing a corresponding smart contract. Especially, we address the problem - how to implement a VCG-like mechanism in a blockchain environment. Based on private chain of Ethereum, we make the simulations for proposed storage transaction method. The results showed that proposed transaction model can realize competitive trading of storage resources, and ensure the safe and economic operation of resource trading.},
	booktitle = {Proceedings of the 8th {International} {Conference} on {Communication} and {Network} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Gu, Yonggen and Hou, Dingding and Wu, Xiaohong},
	year = {2018},
	note = {event-place: Qingdao, China},
	keywords = {Smart Contract, Security, Cloud Storage, Erasure Coding, VCG mechanism},
	pages = {134--138},
}

@inproceedings{avizheh_privacy-enhanced_2021,
	address = {New York, NY, USA},
	series = {{CCSW} '21},
	title = {Privacy-{Enhanced} {OptiSwap}},
	isbn = {978-1-4503-8653-1},
	url = {https://doi.org/10.1145/3474123.3486756},
	doi = {10.1145/3474123.3486756},
	abstract = {Fair Exchange is a fundamental problem in the exchange of digital items with direct application to electronic commerce. In a fair exchange protocol, two parties want to exchange their corresponding items such that either both receive the other's item, or neither of them receives anything. It has been shown that fair exchange without a trusted third party (TTP) is not possible. Optimistic fair exchange protocols limit the role of TTP to the case that one of the parties misbehaves. OptiSwap (Eckey et al., 2020) is a fair exchange protocol for the exchange of confidential digital items with digital coins. OptiSwap uses a smart contract as the TTP and allows the buyer to use an interactive dispute resolution protocol with the seller (mediated through smart contract) to generate a proof of misbehaviour for a misbehaving seller. We show that OptiSwap's dispute resolution protocol leaks information about the item to the smart contract (public) which can completely reveal the item to the public, and this provides an opportunity for a malicious buyer to pose a credible threat to the fairness guarantee of the system. We propose and design privacy-enhanced OptiSwap that prevents the leakage of information and guarantees security and fairness of the exchange without significantly affecting the efficiency of the protocol. We prove security of the new protocol in an extension of the universal composability for non-monolithic adversaries, and implement and evaluate its efficiency against the original OptiSwap. We discuss our results and suggest directions for future research.},
	booktitle = {Proceedings of the 2021 on {Cloud} {Computing} {Security} {Workshop}},
	publisher = {Association for Computing Machinery},
	author = {Avizheh, Sepideh and Haffey, Preston and Safavi-Naini, Reihaneh},
	year = {2021},
	note = {event-place: Virtual Event, Republic of Korea},
	keywords = {smart contract, privacy, fair exchange, probing attack},
	pages = {39--57},
}

@inproceedings{cai_research_2021,
	address = {New York, NY, USA},
	series = {{ICISS} '21},
	title = {Research and {Design} of {Blockchain} {System} for {Logistic} {Tracing}},
	isbn = {978-1-4503-8913-6},
	url = {https://doi.org/10.1145/3459955.3460596},
	doi = {10.1145/3459955.3460596},
	abstract = {The blockchain is a decentralized network, which can prevent information to be tampered and improves the security and transparency of data. Traditional centralized database to store logistics data is vulnerable to attacks and limits sharing of information. Information isolation and unreliable data make it hard to trace the process of logistics delivery. In this paper, we propose a blockchain based system to improve the performance of logistics tracing service. We design the overall structure of the blockchain system and build a prototype using Hyperledger Fabric. Smart contract is implemented to store the logistic records into the blockchain ledgers and create tracing lists for logistic orders. Performance evaluation shows that the system achieves the logistics tracing ability with good performance. This paper assumes that the IoT devices used in the logistics process are reliable and will not be attacked. In the further work, a smart contract-based access control model can be developed to overcome the vulnerability caused by IoT devices.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Information} {Science} and {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Cai, Ziyin and Yang, Meng and Cui, Hongyan and Li, Xiaoqiu and Xu, Meng},
	year = {2021},
	note = {event-place: Edinburgh, United Kingdom},
	keywords = {blockchain, Hyperledger, logistics delivery, tracing},
	pages = {28--34},
}

@inproceedings{oei_psamathe_2020,
	address = {New York, NY, USA},
	series = {{SPLASH} {Companion} 2020},
	title = {Psamathe: {A} {DSL} for {Safe} {Blockchain} {Assets}},
	isbn = {978-1-4503-8179-6},
	url = {https://doi.org/10.1145/3426430.3428131},
	doi = {10.1145/3426430.3428131},
	abstract = {Blockchains host smart contracts for voting, tokens, and other purposes. Vulnerabilities in contracts are common, often leading to the loss of money. Psamathe is a new language we are designing around a new flow abstraction, reducing asset bugs and making contracts more concise than in existing languages. We present an overview of Psamathe, and discuss two example contracts in Psamathe and Solidity.},
	booktitle = {Companion {Proceedings} of the 2020 {ACM} {SIGPLAN} {International} {Conference} on {Systems}, {Programming}, {Languages}, and {Applications}: {Software} for {Humanity}},
	publisher = {Association for Computing Machinery},
	author = {Oei, Reed},
	year = {2020},
	note = {event-place: Virtual, USA},
	keywords = {smart contracts, domain specific languages},
	pages = {16--18},
}

@inproceedings{liu_fail-safe_2020,
	address = {New York, NY, USA},
	series = {{ASIA} {CCS} '20},
	title = {Fail-{Safe} {Watchtowers} and {Short}-{Lived} {Assertions} for {Payment} {Channels}},
	isbn = {978-1-4503-6750-9},
	url = {https://doi.org/10.1145/3320269.3384716},
	doi = {10.1145/3320269.3384716},
	abstract = {The recent development of payment channels and their extensions (e.g., state channels) provides a promising scalability solution for blockchains which allows untrusting parties to transact off-chain and resolve potential disputes via on-chain smart contracts. To protect participants who have no constant access to the blockchain, a watching service named as watchtower is proposed – a third-party entity obligated to monitor channel states (on behalf of the participants) and correct them on-chain if necessary. Unfortunately, currently proposed watchtower schemes suffer from multiple security and efficiency drawbacks.In this paper, we explore the design space behind watchtowers. We propose a novel watching service named as fail-safe watchtowers. In contrast to prior proposed watching services, our fail-safe watchtower does not watch on-chain smart contracts constantly. Instead, it only sends a single on-chain message periodically confirming or denying the final states of channels being closed. Our watchtowers can easily handle a large number of channels, are privacy-preserving, and fail-safe tolerating multiple attack vectors. Furthermore, we show that watchtowers (in general) may be an option economically unjustified for multiple payment scenarios and we introduce a simple, yet powerful concept of short-lived assertions which can mitigate misbehaving parties in these scenarios.},
	booktitle = {Proceedings of the 15th {ACM} {Asia} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Liu, Bowen and Szalachowski, Pawel and Sun, Siwei},
	year = {2020},
	note = {event-place: Taipei, Taiwan},
	keywords = {blockchain, smart contract, payment channel, short-lived assertions, watchtower},
	pages = {506--518},
}

@article{loukil_data_2021,
	title = {Data {Privacy} {Based} on {IoT} {Device} {Behavior} {Control} {Using} {Blockchain}},
	volume = {21},
	issn = {1533-5399},
	url = {https://doi.org/10.1145/3434776},
	doi = {10.1145/3434776},
	abstract = {The Internet of Things (IoT) is expected to improve the individuals’ quality of life. However, ensuring security and privacy in the IoT context is a non-trivial task due to the low capability of these connected devices. Generally, the IoT device management is based on a centralized entity that validates communication and connection rights. Therefore, this centralized entity can be considered as a single point of failure. Yet, in the case of distributed approaches, it is difficult to delegate the right validation to IoT devices themselves in untrustworthy IoT environments. Fortunately, the blockchain may provide decentralization of overcoming the trust problem while designing a privacy-preserving system. To this end, we propose a novel privacy-preserving IoT device management framework based on the blockchain technology. In the proposed system, the IoT devices are controlled by several smart contracts that validate the connection rights according to the privacy permission settings predefined by the data owners and the stored record array of detected misbehavior of each IoT device. In fact, smart contracts can immediately detect the devices that have vulnerabilities and have been hacked or pose a threat to the IoT network. Therefore, the data owner’s privacy is preserved by enforcing the control over the own devices. For validation purposes, we deploy the proposed solution on a private Ethereum blockchain and give the performance evaluation.},
	number = {1},
	journal = {ACM Trans. Internet Technol.},
	author = {Loukil, Faiza and Ghedira-Guegan, Chirine and Boukadi, Khouloud and Benharkat, Aïcha-Nabila and Benkhelifa, Elhadj},
	month = jan,
	year = {2021},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {blockchain, smart contract, Internet of Things, Behavior control},
}

@book{noauthor_wetseb_2018,
	address = {New York, NY, USA},
	title = {{WETSEB} '18: {Proceedings} of the 1st {International} {Workshop} on {Emerging} {Trends} in {Software} {Engineering} for {Blockchain}},
	isbn = {978-1-4503-5726-5},
	abstract = {Welcome to WETSEB 2018, the 1st International Workshop on Emerging Trends in Software Engineering for Blockchain.The Workshop on Emerging Trends in Software Engineering for Blockchain inherits from the past eight editions of WETSoM (Workshop on Emerging Trends on Software Metrics) the challenges of gathering together researchers interested in emerging topics and trends in software engineering. This year the attention of organizers mainly focuses on a newly emerging field of research in a software technology whose powerful wide-spreading is disruptively invading academy, industry, finance, and media: the Blockchain software technology.Motivations for this workshop are the outstanding increased interest in software communities, in the academy, in the industry, in the finance and the media of the new emerging software technology of the Blockchain. Some observers are even talking of the dawn of a new era, with the potential of reshaping the current financial services technical infrastructure. This workshop aims at bringing the interest of researchers, practitioners, and people from industry to the current issues and new directions and challenges for blockchain-oriented software engineering, and at investigating the need for novel specialized software engineering practices for the Blockchain software sector.This year WETSEB features ten accepted papers, presenting a spectrum of reflections on blockchain application design, the complexity of languages for smart contracts, the use of blockchain for smart contracts, and visions on modeling blockchain-oriented software.},
	publisher = {Association for Computing Machinery},
	year = {2018},
}

@inproceedings{xue_cross-contract_2021,
	address = {New York, NY, USA},
	series = {{ASE} '20},
	title = {Cross-{Contract} {Static} {Analysis} for {Detecting} {Practical} {Reentrancy} {Vulnerabilities} in {Smart} {Contracts}},
	isbn = {978-1-4503-6768-4},
	url = {https://doi.org/10.1145/3324884.3416553},
	doi = {10.1145/3324884.3416553},
	abstract = {Reentrancy bugs, one of the most severe vulnerabilities in smart contracts, have caused huge financial loss in recent years. Researchers have proposed many approaches to detecting them. However, empirical studies have shown that these approaches suffer from undesirable false positives and false negatives, when the code under detection involves the interaction between multiple smart contracts.In this paper, we propose an accurate and efficient cross-contract reentrancy detection approach in practice. Rather than design rule-of-thumb heuristics, we conduct a large empirical study of 11714 real-world contracts from Etherscan against three well-known general-purpose security tools for reentrancy detection. We manually summarized the reentrancy scenarios where the state-of-the-art approaches cannot address. Based on the empirical evidence, we present Clairvoyance, a cross-function and cross-contract static analysis to detect reentrancy vulnerabilities in real world with significantly higher accuracy. To reduce false negatives, we enable, for the first time, a cross-contract call chain analysis by tracking possibly tainted paths. To reduce false positives, we systematically summarized five major path protective techniques (PPTs) to support fast yet precise path feasibility checking. We implemented our approach and compared Clairvoyance with five state-of-the-art tools on 17770 real-worlds contracts. The results show that Clairvoyance yields the best detection accuracy among all the five tools and also finds 101 unknown reentrancy vulnerabilities.},
	booktitle = {Proceedings of the 35th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Xue, Yinxing and Ma, Mingliang and Lin, Yun and Sui, Yulei and Ye, Jiaming and Peng, Tianyong},
	year = {2021},
	note = {event-place: Virtual Event, Australia},
	keywords = {smart contracts, cross-contract analysis, reentrancy vulnerabilities, static taint analysis},
	pages = {1029--1040},
}

@inproceedings{hammoudeh_continuous_2019,
	address = {New York, NY, USA},
	series = {{ICFNDS} '19},
	title = {Continuous {Monitoring} in {Mission}-{Critical} {Applications} {Using} the {Internet} of {Things} and {Blockchain}},
	isbn = {978-1-4503-7163-6},
	url = {https://doi.org/10.1145/3341325.3342018},
	doi = {10.1145/3341325.3342018},
	abstract = {This paper is set to demonstrate the methodology and benefits of applying blockchain to the Internet of Things (IoT). It outlines the design of a mission-critical monitoring system using the IoT and blockchain technologies. Blockchain is used to ensure the integrity of data gathered by IoT devices. Smart contracts are used to verify and enforce the conditions of monitored assets during their lifecycle. This system provides continuous, real-time and secure monitoring. A highly configurable interface is designed to allow users set thresholds and alerts.},
	booktitle = {Proceedings of the 3rd {International} {Conference} on {Future} {Networks} and {Distributed} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Hammoudeh, Mohammad and Ghafir, Ibrahim and Bounceur, Ahcène and Rawlinson, Thomas},
	year = {2019},
	note = {event-place: Paris, France},
	keywords = {blockchain, internet of things, mission-critical applications},
}

@inproceedings{benitez_short_2020,
	address = {New York, NY, USA},
	series = {{PLAS}'20},
	title = {Short {Paper}: {Blockcheck} the {Typechain}},
	isbn = {978-1-4503-8092-8},
	url = {https://doi.org/10.1145/3411506.3417600},
	doi = {10.1145/3411506.3417600},
	abstract = {Recent efforts have sought to design new smart contract programming languages that make writing blockchain programs safer. But programs on the blockchain are beholden only to the safety properties enforced by the blockchain itself: even the strictest language-only properties can be rendered moot on a language-oblivious blockchain due to inter-contract interactions. Consequently, while safer languages are a necessity, fully realizing their benefits necessitates a language-aware redesign of the blockchain itself.To this end, we propose that the blockchain be viewed as a typechain: a chain of typed programs — not arbitrary blocks — that are included iff they typecheck against the existing chain. Reaching consensus, or blockchecking, validates typechecking in a byzantine fault-tolerant manner. Safety properties traditionally enforced by a runtime are instead enforced by a type system with the aim of statically capturing smart contract correctness.To provide a robust level of safety, we contend that a typechain must minimally guarantee (1) asset linearity and liveness, (2) physical resource availability, including CPU and memory, (3) exceptionless execution, or no early termination, (4) protocol conformance, or adherence to some state machine, and (5) inter-contract safety, including reentrancy safety. Despite their exacting nature, typechains are extensible, allowing for rich libraries that extend the set of verified properties. We expand on typechain properties and present examples of real-world bugs they prevent.},
	booktitle = {Proceedings of the 15th {Workshop} on {Programming} {Languages} and {Analysis} for {Security}},
	publisher = {Association for Computing Machinery},
	author = {Benitez, Sergio and Cogan, Jonathan and Russo, Alejandro},
	year = {2020},
	note = {event-place: Virtual Event, USA},
	keywords = {blockchain, smart contract, security, programming language, compiler, digital currency, safety, type system, typechain},
	pages = {35--39},
}

@inproceedings{ross_policy_2020,
	address = {New York, NY, USA},
	series = {{SIGMIS}-{CPR}'20},
	title = {Policy {Formation} {Without} {Authority}: {Towards} {Resilient} {Financial} {Infrastructure} for {Emerging} {Economies}},
	isbn = {978-1-4503-7130-8},
	url = {https://doi.org/10.1145/3378539.3393849},
	doi = {10.1145/3378539.3393849},
	abstract = {We document the design and development of a modular blockchain IT artefact, affording stakeholders in emerging economies the ability to deploy and collectively govern resilient financial infrastructure. The artefact comprises a smart contract system implementing an iterative policy framework through which stakeholders engage in collective deliberation on the compilation, redistribution and inflation of a native asset class. Stakeholders submit and elect 'schemes' implementing policy measures, such as taxation, through voting sessions weighted by 'reputation scoring'. We aim to contribute towards the emerging discourse on the utility of blockchain technology in emerging economies.},
	booktitle = {Proceedings of the 2020 on {Computers} and {People} {Research} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Ross, Omri and Jensen, Johannes Rude},
	year = {2020},
	note = {event-place: Nuremberg, Germany},
	keywords = {blockchain technology, decentralized autonomous organization, digital infrastructure, public policy},
	pages = {36--37},
}

@inproceedings{eskandari_sok_2021,
	address = {New York, NY, USA},
	series = {{AFT} '21},
	title = {{SoK}: {Oracles} from the {Ground} {Truth} to {Market} {Manipulation}},
	isbn = {978-1-4503-9082-8},
	url = {https://doi.org/10.1145/3479722.3480994},
	doi = {10.1145/3479722.3480994},
	abstract = {One fundamental limitation of blockchain-based smart contracts is that they execute in a closed environment. Thus, they only have access to data and functionality that is already on the blockchain, or is fed into the blockchain. Any interactions with the real world need to be mediated by a bridge service, which is called an oracle. As decentralized applications mature, oracles are playing an increasingly prominent role. With their evolution comes more attacks, necessitating greater attention to their trust model. In this systemization of knowledge paper (SoK), we dissect the design alternatives for oracles, showcase attacks, and discuss attack mitigation strategies.},
	booktitle = {Proceedings of the 3rd {ACM} {Conference} on {Advances} in {Financial} {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Eskandari, Shayan and Salehi, Mehdi and Gu, Wanyun Catherine and Clark, Jeremy},
	year = {2021},
	note = {event-place: Arlington, Virginia},
	pages = {127--141},
}

@inproceedings{ren_making_2021,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2021},
	title = {Making {Smart} {Contract} {Development} {More} {Secure} and {Easier}},
	isbn = {978-1-4503-8562-6},
	url = {https://doi.org/10.1145/3468264.3473929},
	doi = {10.1145/3468264.3473929},
	abstract = {With the rapid development of distributed applications, smart contracts have attracted more and more developers' attentions. However, developers or domain experts have different levels of familiarity with specific programming languages, like Solidity, and those vulnerabilities hidden in the code would be exploited and result in huge property losses. Existing auxiliary tools lack security considerations. Most of them only provide word completion based on fuzzy search and detection services for limited types of vulnerabilities, which results in the manpower waste during coding and potential vulnerability threats after deployment. In this work, we propose an integrated framework to enhance security in the two stages of recommendation and validation, assisting developers to implement more secure contracts more quickly. First, we reinforce original smart contracts with general patch patterns and secure programming standards for training, and design a real-time code suggestion algorithm to predict secure words for selection. Then, we integrate multiple widely-used testing tools to provide validation services. For evaluation, we collected 47,398 real-world contracts, and the result shows that it outperforms existing platforms and tools, improving the average word suggestion accuracy by 30\%-60\% and helping detect about 25\%-61\% more vulnerabilities. In most cases, our framework can correctly predict next words with the probability up to 82\%-97\% within top ten candidates. Compared with professional vulnerability mining tools, it can find more vulnerabilities and provide targeted modification suggestions without frivolous configurations. Currently, this framework has been used as the official development tool of WeBank and integrated as the recommended platform by FISCO-BCOS community.},
	booktitle = {Proceedings of the 29th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Ren, Meng and Ma, Fuchen and Yin, Zijing and Fu, Ying and Li, Huizhong and Chang, Wanli and Jiang, Yu},
	year = {2021},
	note = {event-place: Athens, Greece},
	keywords = {Domain-specific Reinforcement, Integrated Testing, Smart Contract Development},
	pages = {1360--1370},
}

@inproceedings{yi_empirical_2022,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2022},
	title = {An {Empirical} {Study} of {Blockchain} {System} {Vulnerabilities}: {Modules}, {Types}, and {Patterns}},
	isbn = {978-1-4503-9413-0},
	url = {https://doi.org/10.1145/3540250.3549105},
	doi = {10.1145/3540250.3549105},
	abstract = {Blockchain, as a distributed ledger technology, becomes increasingly popular, especially for enabling valuable cryptocurrencies and smart contracts. However, the blockchain software systems inevitably have many bugs. Although bugs in smart contracts have been extensively investigated, security bugs of the underlying blockchain systems are much less explored. In this paper, we conduct an empirical study on blockchain’s system vulnerabilities from four representative blockchains, Bitcoin, Ethereum, Monero, and Stellar. Specifically, we first design a systematic filtering process to effectively identify 1,037 vulnerabilities and their 2,317 patches from 34,245 issues/PRs (pull requests) and 85,164 commits on GitHub. We thus build the first blockchain vulnerability dataset, which is available at https://github.com/VPRLab/BlkVulnDataset. We then perform unique analyses of this dataset at three levels, including (i) file-level vulnerable module categorization by identifying and correlating module paths across projects, (ii) text-level vulnerability type clustering by natural language processing and similarity-based sentence clustering, and (iii) code-level vulnerability pattern analysis by generating and clustering code change signatures that capture both syntactic and semantic information of patch code fragments. Our analyses reveal three key findings: (i) some blockchain modules are more susceptible than the others; notably, each of the modules related to consensus, wallet, and networking has over 200 issues; (ii) about 70\% of blockchain vulnerabilities are of traditional types, but we also identify four new types specific to blockchains; and (iii) we obtain 21 blockchain-specific vulnerability patterns that capture unique blockchain attributes and statuses, and demonstrate that they can be used to detect similar vulnerabilities in other popular blockchains, such as Dogecoin, Bitcoin SV, and Zcash.},
	booktitle = {Proceedings of the 30th {ACM} {Joint} {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Yi, Xiao and Wu, Daoyuan and Jiang, Lingxiao and Fang, Yuzhou and Zhang, Kehuan and Zhang, Wei},
	year = {2022},
	note = {event-place: Singapore, Singapore},
	keywords = {Blockchain Security, Data Mining, System Vulnerability},
	pages = {709--721},
}

@inproceedings{ma_design_2020,
	address = {New York, NY, USA},
	series = {{ICIT} 2019},
	title = {Design and {Development} of {Smart} {Home} {Sensing} {Supported} by {Blockchain} {Technology}},
	isbn = {978-1-4503-7663-1},
	url = {https://doi.org/10.1145/3377170.3377281},
	doi = {10.1145/3377170.3377281},
	abstract = {This paper presents the design and implementation of a smart home system in the context of Internet of Things (IoT) with Ethereum private Blockchain, Raspberry Pi, Blynk platform, DHT11 temperature and humidity sensors. By Raspberry Pi, it collects real-time room humidity and temperature information by DHT11. The data is then uploaded to the Blynk App, which is stored on the smart contract deployed with the Ethereum private Blockchain. When the real-time humidity or temperature value exceeds a predefined threshold value, warnings are given by turning on LEDs. The system functions as a proof-of-concept prototype, showing the feasibility of applying blockchain in smart homes with IoT functionalities.},
	booktitle = {Proceedings of the 2019 7th {International} {Conference} on {Information} {Technology}: {IoT} and {Smart} {City}},
	publisher = {Association for Computing Machinery},
	author = {Ma, Maode and He, Zhaozheng and Xu, Quanqing and Li, Xue Jun},
	year = {2020},
	note = {event-place: Shanghai, China},
	keywords = {Blockchain, Internet of Things, Bitcoin, machine-to-machine communication, Raspberry Pi},
	pages = {525--530},
}

@inproceedings{dinh_blockbench_2017,
	address = {New York, NY, USA},
	series = {{SIGMOD} '17},
	title = {{BLOCKBENCH}: {A} {Framework} for {Analyzing} {Private} {Blockchains}},
	isbn = {978-1-4503-4197-4},
	url = {https://doi.org/10.1145/3035918.3064033},
	doi = {10.1145/3035918.3064033},
	abstract = {Blockchain technologies are taking the world by storm. Public blockchains, such as Bitcoin and Ethereum, enable secure peer-to-peer applications like crypto-currency or smart contracts. Their security and performance are well studied. This paper concerns recent private blockchain systems designed with stronger security (trust) assumption and performance requirement. These systems target and aim to disrupt applications which have so far been implemented on top of database systems, for example banking, finance and trading applications. Multiple platforms for private blockchains are being actively developed and fine tuned. However, there is a clear lack of a systematic framework with which different systems can be analyzed and compared against each other. Such a framework can be used to assess blockchains' viability as another distributed data processing platform, while helping developers to identify bottlenecks and accordingly improve their platforms.In this paper, we first describe BLOCKBENCH, the first evaluation framework for analyzing private blockchains. It serves as a fair means of comparison for different platforms and enables deeper understanding of different system design choices. Any private blockchain can be integrated to BLOCKBENCH via simple APIs and benchmarked against workloads that are based on real and synthetic smart contracts. BLOCKBENCH measures overall and component-wise performance in terms of throughput, latency, scalability and fault-tolerance. Next, we use BLOCKBENCH to conduct comprehensive evaluation of three major private blockchains: Ethereum, Parity and Hyperledger Fabric. The results demonstrate that these systems are still far from displacing current database systems in traditional data processing workloads. Furthermore, there are gaps in performance among the three systems which are attributed to the design choices at different layers of the blockchain's software stack. We have released BLOCKBENCH for public use.},
	booktitle = {Proceedings of the 2017 {ACM} {International} {Conference} on {Management} of {Data}},
	publisher = {Association for Computing Machinery},
	author = {Dinh, Tien Tuan Anh and Wang, Ji and Chen, Gang and Liu, Rui and Ooi, Beng Chin and Tan, Kian-Lee},
	year = {2017},
	note = {event-place: Chicago, Illinois, USA},
	keywords = {smart contracts, security, consensus, blockchains, performance benchmark, transactions},
	pages = {1085--1100},
}

@inproceedings{manevich_service_2018,
	address = {New York, NY, USA},
	series = {{DEBS} '18},
	title = {Service {Discovery} for {Hyperledger} {Fabric}},
	isbn = {978-1-4503-5782-1},
	url = {https://doi.org/10.1145/3210284.3219766},
	doi = {10.1145/3210284.3219766},
	abstract = {Hyperledger Fabric (HLF) is a modular and extensible permissioned blockchain platform released to open-source and hosted by the Linux Foundation. The platform's design exhibits principles required by enterprise grade business applications like supply-chains, financial transactions, asset management, food safety, and many more. For that end HLF introduces several innovations, two of which are smart contracts in general purpose languages (chaincode in HLF), and flexible endorsement policies, which govern whether a transaction is considered valid.Typical blockchain applications are comprised of two tiers: the first tier focuses on the modelling of the data schema and embedding of business rules into the blockchain by means of smart contracts (chaincode) and endorsment policies; and the second tier uses the SDK (Software Development Kit) provided by HLF to implement client side application logic.However there is a gap between the two tiers that hinders the rapid adoption of changes in the chaincode and endorsement policies within the client SDK. Currently, the chaincode location and endorsement policies are statically configured into the client SDK. This limits the reliability and availability of the client in the event of changes in the platform, and makes the platform more difficult to use. In this work we address and bridge the gap by describing the design and implementation of Service Discovery.Service Discovery provides APIs which allow dynamic discovery of the configuration required for the client SDK to interact with the platform, alleviating the client from the burden of maintaining it. This enables the client to rapidly adapt to changes in the platform, thus significantly improving the reliability of the application layer. It also makes the HLF platform more consumable, simplifying the job of creating blockchain applications.},
	booktitle = {Proceedings of the 12th {ACM} {International} {Conference} on {Distributed} and {Event}-{Based} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Manevich, Yacov and Barger, Artem and Tock, Yoav},
	year = {2018},
	note = {event-place: Hamilton, New Zealand},
	keywords = {Blockchain, Distributed Ledger, Service Discovery},
	pages = {226--229},
}

@inproceedings{bhumichitr_acachain_2020,
	address = {New York, NY, USA},
	series = {{IAIT2020}},
	title = {{AcaChain}: {Academic} {Credential} {Attestation} {System} {Using} {Blockchain}},
	isbn = {978-1-4503-7759-1},
	url = {https://doi.org/10.1145/3406601.3406614},
	doi = {10.1145/3406601.3406614},
	abstract = {Blockchain has been a part of people's interest in the development of various areas such as digital currencies (e.g., Bitcoin), securities, healthcare, record-keeping and much more. Some of the key features of blockchain technology are immutability, decentralization, distributed ledger, consensus, and smart contract. In this paper, we explore how blockchain technology could possibly be utilized for the academic credential attestation in the education domain. This paper aims to re-engineer the academic credential attestation process to reduce both time and resource consumption and human involvement. It also aims to design a unique way for academic data collection to prevent fraud academic credentials. A blockchain-based system for academic credential attestation has been implemented.},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Advances} in {Information} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Bhumichitr, Kiratijuta and Channarukul, Songsak},
	year = {2020},
	note = {event-place: Bangkok, Thailand},
	keywords = {Blockchain, Hyperledger Fabric, Academic Credential Attestation},
}

@inproceedings{xie_simulation-based_2020,
	series = {{WSC} '19},
	title = {Simulation-{Based} {Blockchain} {Design} to {Secure} {Biopharmaceutical} {Supply} {Chain}},
	isbn = {978-1-72813-283-9},
	abstract = {Bio-drugs grow rapidly and become one of the key drivers of personalized medicine and advancement of life sciences. Driven by the unique challenges in biopharmaceutical supply chain management and also built on two-layer QuarkChain, we introduce a blockchain enabled interoperability framework and it has the reputation based Proof-of-Authority (PoA) smart contract. Given the real-time monitoring data streams of distributed systems, blockchain can improve the transparency and integrity of delivery processes. We introduce stochastic simulation to guide the blockchain design so that we can protect drug products from theft, temperature diversion, and counterfeiting, while improving the supply chain reliability, efficiency, and responsiveness. The preliminary empirical study demonstrates that our approach has promising performance.},
	booktitle = {Proceedings of the {Winter} {Simulation} {Conference}},
	publisher = {IEEE Press},
	author = {Xie, Wei and Wang, Bo and Ye, Zehao and Wu, Wencen and You, Jie and Zhou, Qi},
	year = {2020},
	note = {event-place: National Harbor, Maryland},
	pages = {797--808},
}

@article{krol_proof--prestige_2021,
	title = {Proof-of-{Prestige}: {A} {Useful} {Work} {Reward} {System} for {Unverifiable} {Tasks}},
	volume = {21},
	issn = {1533-5399},
	url = {https://doi.org/10.1145/3419483},
	doi = {10.1145/3419483},
	abstract = {As cryptographic tokens and altcoins are increasingly being built to serve as utility tokens, the notion of useful work consensus protocols is becoming ever more important. With useful work consensus protocols, users get rewards after they have carried out some specific tasks useful for the network. While in some cases the proof of some utility or service can be provided, the majority of tasks are impossible to verify reliably. To deal with such cases, we design “Proof-of-Prestige” (PoP)—a reward system that can run directly on Proof-of-Stake (PoS) blockchains or as a smart contract on top of Proof-of-Work (PoW) blockchains. PoP introduces “prestige,” which is a volatile resource that, in contrast to coins, regenerates over time. Prestige can be gained by performing useful work, spent when benefiting from services, and directly translates to users minting power. Our scheme allows us to reliably reward decentralized workers while keeping the system free for the end-users. PoP is resistant against Sybil and collusion attacks and can be used with a vast range of unverifiable tasks. We build a simulator to assess the cryptoeconomic behavior of the system and deploy a full prototype of a content dissemination platform rewarding its participants. We implement the blockchain component on both Ethereum (PoW) and Cosmos (PoS), provide a mobile application, and connect it with our scheme with a negligible memory footprint. Finally, we adapt a fair exchange protocol allowing us to atomically exchange files for rewards also in scenarios where not all the parties have Internet connectivity. Our evaluation shows that even for large Ethereum traces, PoP introduces sub-millisecond computational overhead for miners in Cosmos and less than 0.013\$ smart contract invocation cost for users in Ethereum.},
	number = {2},
	journal = {ACM Trans. Internet Technol.},
	author = {Król, Micha{\textbackslash}l and Sonnino, Alberto and Al-Bassam, Mustafa and Tasiopoulos, Argyrios G. and Rivière, Etienne and Psaras, Ioannis},
	month = jun,
	year = {2021},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {Blockchain, network security, security and privacy},
}

@inproceedings{suchaad_blockchain_2018,
	address = {New York, NY, USA},
	series = {{MLMI} '18},
	title = {Blockchain {Use} in {Home} {Automation} for {Children} {Incentives} in {Parental} {Control}},
	isbn = {978-1-4503-6556-7},
	url = {https://doi.org/10.1145/3278312.3278326},
	doi = {10.1145/3278312.3278326},
	abstract = {Application of IoT (Internet of Things) is expanding rapidly as internet connects things in our homes and our personal devices and even our body, provides ease, entertainment and comfort to our daily lives. However, as everything personal is connected, security and privacy becomes a major challenge. Blockchain-based IoT can provide a completely trusted and transparent environment with its tamper-resistant data structure, timestamp, data encryption and distributed consensus. Since cryptocurrency is the first application of blockchains, most blockchain mechanisms like Ethereum provides token-based peer-to-peer payment system that allows payment using a custom currency which enables IoT devices to pay or receive token without a third-party inclusion. In this paper we proposed to apply blockchain mechanism to education/discipline of children at home by through token-based parental control in which parent can encourage good behaviors and discourage bad behaviors of children via tokens transferred via blockchain network. Current parental control is implemented in operating systems of smartphones that only prohibits the abuse of smartphone games or inappropriate web sites. However, this token-based parental control pay tokens to children with good behaviors that allow them to play or watch the proper contents as their rewards. Devices at home like television and computer are connected to the blockchain and accessible only when the user have a sufficient amount of tokens. Children are given incentives in term of token by their parents if they do their homework properly or help their parents. Besides that, smart contract feature in Ethereum allows application to be programmed in a blockchain enables monitoring the activities of children through blockchain. This paper introduces the design of the token-based parental control by using smart contract schemes of Ethereum blockchain with a simple smart home setup as a proof of concept.},
	booktitle = {Proceedings of the 2018 {International} {Conference} on {Machine} {Learning} and {Machine} {Intelligence}},
	publisher = {Association for Computing Machinery},
	author = {Suchaad, Saravid A/L and Mashiko, Koichiro and Ismail, Nordinah Binti and Abidin, Mohamad Hafizat Zainal},
	year = {2018},
	note = {event-place: Ha Noi, Viet Nam},
	keywords = {blockchain, IoT, parental control, smart home},
	pages = {50--53},
}

@inproceedings{yang_blockchain_2021,
	address = {New York, NY, USA},
	series = {e-{Energy} '21},
	title = {Blockchain for {Transactive} {Energy} {Management} of {Distributed} {Energy} {Resources} in {Smart} {Grid}},
	isbn = {978-1-4503-8333-2},
	url = {https://doi.org/10.1145/3447555.3464848},
	doi = {10.1145/3447555.3464848},
	abstract = {This work presents the design and implementation of a blockchain system that enables the trustable transactive energy management for distributed energy resources (DERs). We model the interactions among DERs, including energy trading and flexible appliance scheduling, as a cost minimization problem. Considering the dispersed nature and diverse ownership of DERs, we develop a distributed algorithm to solve the optimization problem using the alternating direction method of multipliers (ADMM) method. Furthermore, we develop a blockchain system, on which we implement the proposed algorithm with the smart contract, to guarantee the transparency and correctness of the energy management. We prototype the blockchain in a small-scale test network and evaluate it through experiments using real-world data. The experimental results validate the feasibility and effectiveness of our design.},
	booktitle = {Proceedings of the {Twelfth} {ACM} {International} {Conference} on {Future} {Energy} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Qing and Wang, Hao and Wu, Xiaoxiao and Wang, Taotao and Zhang, Shengli},
	year = {2021},
	note = {event-place: Virtual Event, Italy},
	keywords = {Blockchain, Distributed energy resource (DER), Distributed optimization, Energy trading, Smart grid, Transactive energy},
	pages = {211--215},
}

@inproceedings{wang_hybrid-voting_2020,
	address = {New York, NY, USA},
	series = {{WWW} '20},
	title = {Hybrid-{Voting}: {A} {Hybrid} {Structured} {Electronic} {Voting} {System}},
	isbn = {978-1-4503-7024-0},
	url = {https://doi.org/10.1145/3366424.3382708},
	doi = {10.1145/3366424.3382708},
	abstract = {Recent development of electronic voting (e-voting) systems has been focusing on blockchain-based design\&nbsp;[4]. Despite blockchain’s advantages in public verifiability, existing blockchain-based voting systems are impractical due to the high block time and transaction costs of the underlying blockchain. To achieve verifiability and efficiency simultaneously, we propose Hybrid-Voting, a hybrid structured e-voting system that combines an untrusted centralized server with smart contracts on Ethereum blockchain. In addition, voter anonymity and privacy are guaranteed by using short linkable ring signature and ElGamal encryption. Our evaluation shows that Hybrid-Voting can support 10k voters by using one commodity computer, and the cost per voter is less than one US dollar, much lower than the cost per voter in today’s elections\&nbsp;[1].},
	booktitle = {Companion {Proceedings} of the {Web} {Conference} 2020},
	publisher = {Association for Computing Machinery},
	author = {Wang, Ping-Lun and Yang, Shao-Hong and Hsiao, Hsu-Chun},
	year = {2020},
	note = {event-place: Taipei, Taiwan},
	keywords = {blockchain, e-voting, ring signature},
	pages = {83--84},
}

@inproceedings{zhang_deconstructing_2018,
	address = {New York, NY, USA},
	series = {{DEBS} '18},
	title = {Deconstructing {Blockchains}: {Concepts}, {Systems}, and {Insights}},
	isbn = {978-1-4503-5782-1},
	url = {https://doi.org/10.1145/3210284.3219502},
	doi = {10.1145/3210284.3219502},
	abstract = {Popularly known for powering cryptocurrencies such as Bitcoin and Ethereum, blockchains is seen as a disruptive technology capable of impacting a wide variety of domains, ranging from finance to governance, by offering superior security, reliability, and transparency in a decentralized manner. In this tutorial presentation, we first study the original Bitcoin design, as well as Ethereum and Hyperledger, and reflect on their design from an academic perspective. We provide an overview of potential applications and associated research challenges, as well as a survey of ongoing research projects. We mention opportunities blockchain creates for event-based systems. Finally, we conclude with a walkthrough showing the process of developing a decentralized application (undefinedSApp), using a popular Smart Contract language (Solidity) for the blockchain platform of Ethereum.},
	booktitle = {Proceedings of the 12th {ACM} {International} {Conference} on {Distributed} and {Event}-{Based} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Kaiwen and Vitenberg, Roman and Jacobsen, Hans-Arno},
	year = {2018},
	note = {event-place: Hamilton, New Zealand},
	keywords = {Blockchain, Ethereum, Smart Contracts, Bitcoin, Hyperledger, Distributed Ledger Technology},
	pages = {187--190},
}

@inproceedings{krishnaswamy_quantum_2020,
	address = {New York, NY, USA},
	series = {Mobihoc '20},
	title = {Quantum {Blockchain} {Networks}},
	isbn = {978-1-4503-8015-7},
	url = {https://doi.org/10.1145/3397166.3412802},
	doi = {10.1145/3397166.3412802},
	abstract = {This paper explores and suggests possibilities for the design of quantum blockchain systems that are inspired by quantum processing techniques. Quantum states are defined that can be processed either by a physical quantum computer or virtually by emulation on a classical computer where such states can be entangled across different nodes in the system. The collapse of quantum state variables are explored utilizing non-deterministic smart contract processing. A quantum blockchain network is realized with different nodes in the system interacting with each other though a communication network. Different networking use-cases are explored such as to determine which user is given access to a network at a given time, or to select the best access node for a given user.},
	booktitle = {Proceedings of the {Twenty}-{First} {International} {Symposium} on {Theory}, {Algorithmic} {Foundations}, and {Protocol} {Design} for {Mobile} {Networks} and {Mobile} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Krishnaswamy, Dilip},
	year = {2020},
	note = {event-place: Virtual Event, USA},
	keywords = {5G, blockchain systems, network access, quantum computing},
	pages = {327--332},
}

@inproceedings{josias_gbetoho_saho_developing_2021,
	address = {New York, NY, USA},
	series = {{ISEEIE} 2021},
	title = {Developing a {Digital} {Healthcare} {Book} {Based} on the {Blockchain} {Technology}},
	isbn = {978-1-4503-8983-9},
	url = {https://doi.org/10.1145/3459104.3459203},
	doi = {10.1145/3459104.3459203},
	abstract = {Each Government is must ensure adequate health and social welfare for people. The healthcare book is a document historicizing medical information related to a person. It helps doctors to make consistent diagnoses. The major concern of doctors is to ensure the inalterability of information provided by the healthcare book. Based on the major benefits that Blockchain technology offers, we use it to design a digital healthcare book system by writing smart contract with Ethereum blockchain. It guarantees data integrity and provides secure information to doctors on various medical exams, patients’ pathologies and others. It is a low-cost and safe system in cases of emergency. In addition, an Ethereum based implementation is used to verify the feasibility of our proposed system.},
	booktitle = {2021 {International} {Symposium} on {Electrical}, {Electronics} and {Information} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Josias Gbètoho Saho, Nelson and C. Ezin, Eugène},
	year = {2021},
	note = {event-place: Seoul, Republic of Korea},
	pages = {617--622},
}

@inproceedings{r_prototype_2023,
	address = {New York, NY, USA},
	series = {{SenSys} '22},
	title = {A {Prototype} {Design} for {Gamified} {Blood} {Donation} {App} {Using} {Blockchain} {Technology}, {IPFS} and {NFTs}},
	isbn = {978-1-4503-9886-2},
	url = {https://doi.org/10.1145/3560905.3568177},
	doi = {10.1145/3560905.3568177},
	abstract = {Donating blood is a common practice that has a positive effect on the lives of several individuals. Daily, the number of people in urgent need of blood continues to rise substantially. It is often challenging to find a suitable donor in case of emergency. The situation is worse if it is a rare blood group. This paper introduces a blockchain-based decentralised application (DApp) to match recipients with blood donors during an emergency. Personal information such as name, location, blood group, and donation history is stored securely in the blockchain distributed ledger through IPFS. The donors' lack of awareness and motivation are the primary reasons for people not coming forward for blood donations. We propose to gamify the blood donation process by issuing NFT badges as a reward for donors. This paper explains the design of smart contracts for storing donor and recipient data on the ledger and issuing NFTs to donors. The article also briefly discusses the process of designing the DApp.},
	booktitle = {Proceedings of the 20th {ACM} {Conference} on {Embedded} {Networked} {Sensor} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {R, Gaushik M and R, Jivtesh M and P, Adarsh and B, Sai Shibu N and Rao, Sethuraman N},
	year = {2023},
	note = {event-place: Boston, Massachusetts},
	keywords = {blockchain, smart contracts, blood donation, gamification, NFTs},
	pages = {1202--1207},
}

@inproceedings{pschetz_autonomous_2019,
	address = {New York, NY, USA},
	series = {{CHI} '19},
	title = {Autonomous {Distributed} {Energy} {Systems}: {Problematising} the {Invisible} through {Design}, {Drama} and {Deliberation}},
	isbn = {978-1-4503-5970-2},
	url = {https://doi.org/10.1145/3290605.3300617},
	doi = {10.1145/3290605.3300617},
	abstract = {Technologies such as blockchains, smart contracts and programmable batteries facilitate emerging models of energy distribution, trade and consumption, and generate a considerable number of opportunities for energy markets. However, these developments complicate relationships between stakeholders, disrupting traditional notions of value, control and ownership. Discussing these issues with the public is particularly challenging as energy consumption habits often obscure the competing values and interests that shape stakeholders' relationships. To make such difficult discussions more approachable and examine the missing relational aspect of autonomous energy systems, we combined the design of speculative hairdryers with performance and deliberation. This integrated method of inquiry makes visible the competing values and interests, eliciting people's wishes to negotiate these terms. We argue that the complexity of mediated energy distribution and its convoluted stakeholder relationships requires more sophisticated methods of inquiry to engage people in debates concerning distributed energy systems.},
	booktitle = {Proceedings of the 2019 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Pschetz, Larissa and Pothong, Kruakae and Speed, Chris},
	year = {2019},
	note = {event-place: Glasgow, Scotland Uk},
	keywords = {blockchain, critical design, deliberation, distributed energy, improvisation, performance, speculative design, theatre},
	pages = {1--14},
}

@inproceedings{bentov_tesseract_2019,
	address = {New York, NY, USA},
	series = {{CCS} '19},
	title = {Tesseract: {Real}-{Time} {Cryptocurrency} {Exchange} {Using} {Trusted} {Hardware}},
	isbn = {978-1-4503-6747-9},
	url = {https://doi.org/10.1145/3319535.3363221},
	doi = {10.1145/3319535.3363221},
	abstract = {We propose Tesseract, a secure real-time cryptocurrency exchange service. Existing centralized exchange designs are vulnerable to theft of funds, while decentralized exchanges cannot offer real-time cross-chain trades. All currently deployed exchanges are also vulnerable to frontrunning attacks. Tesseract overcomes these flaws and achieves a best-of-both-worlds design by using a trusted execution environment. The task of committing the recent trade data to independent cryptocurrency systems presents an all-or-nothing fairness problem, to which we present ideal theoretical solutions, as well as practical solutions. Tesseract supports not only real-time cross-chain cryptocurrency trades, but also secure tokenization of assets pegged to cryptocurrencies. For instance, Tesseract-tokenized bitcoins can circulate on the Ethereum blockchain for use in smart contracts. We provide a demo implementation of Tesseract that supports Bitcoin, Ethereum, and similar cryptocurrencies.},
	booktitle = {Proceedings of the 2019 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Bentov, Iddo and Ji, Yan and Zhang, Fan and Breidenbach, Lorenz and Daian, Philip and Juels, Ari},
	year = {2019},
	note = {event-place: London, United Kingdom},
	keywords = {trusted hardware, cryptocurrency exchanges, frontrunning},
	pages = {1521--1538},
}

@article{murray-rust_blockchain_2023,
	title = {Blockchain and {Beyond}: {Understanding} {Blockchains} {Through} {Prototypes} and {Public} {Engagement}},
	volume = {29},
	issn = {1073-0516},
	url = {https://doi.org/10.1145/3503462},
	doi = {10.1145/3503462},
	abstract = {This article presents an annotated portfolio of projects that seek to understand and communicate the social and societal implications of blockchains, DLTs and smart contracts. These complex technologies rely on human and technical factors to deliver cryptocurrencies, shared computation and trustless protocols but have a secondary benefit in providing a moment to re-think many aspects of society, and imagine alternative possibilities. The projects use design and HCI methods to relate blockchains to a range of topics, including global supply chains, delivery infrastructure, smart grids, volunteering and charitable giving, through engaging public, exploring ideas and speculating on possible futures. Based on an extensive annotated portfolio we draw out learning for the design of blockchain systems, broadening participation and surfacing questions around imaginaries, social implications and engagement with new technology. This paints a comprehensive picture of how HCI and design can shape understandings of the future of complex technologies.},
	number = {5},
	journal = {ACM Trans. Comput.-Hum. Interact.},
	author = {Murray-Rust, Dave and Elsden, Chris and Nissen, Bettina and Tallyn, Ella and Pschetz, Larissa and Speed, Chris},
	month = jan,
	year = {2023},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {smart contracts, distributed energy, Blockchains, distributed ledger technology, public engagement, conditional giving, HCI, research through design},
}

@inproceedings{cardenas_robot-human_2018,
	address = {New York, NY, USA},
	series = {{HRI} '18},
	title = {Robot-{Human} {Agreements} and {Financial} {Transactions} {Enabled} by a {Blockchain} and {Smart} {Contracts}},
	isbn = {978-1-4503-5615-2},
	url = {https://doi.org/10.1145/3173386.3177818},
	doi = {10.1145/3173386.3177818},
	abstract = {This paper explores the design of a robot and interaction model that enables a robot to engage in human-like financial transactions, and to enter into agreements with a human counterpart. More explicitly, (1) we bestow the agent with a cryptocurrency wallet and (2) define bilateral and multilateral agreements that can be automated as smart contracts in a distributed ledger. As a use case of a robot with such features, we describe roBU - a traveling robot, that can enter into financial agreements in exchange for assistance in traveling the world. With this effort, we expect to validate the idea of near-future scenarios where autonomous or semi-autonomous agents are endowed with, a type of, social autonomy and the ability to engage in financial transactions. We believe the latter can improve task completion and enable further exploration of robot-human relationships, dependencies and trust.},
	booktitle = {Companion of the 2018 {ACM}/{IEEE} {International} {Conference} on {Human}-{Robot} {Interaction}},
	publisher = {Association for Computing Machinery},
	author = {Cardenas, Irvin Steve and Kim, Jong Hoon},
	year = {2018},
	note = {event-place: Chicago, IL, USA},
	keywords = {blockchain, smart contracts, ethics, human robot interaction, machine agency, trustless systems},
	pages = {337--338},
}

@inproceedings{elsden_recipes_2019,
	address = {New York, NY, USA},
	series = {{CHI} '19},
	title = {Recipes for {Programmable} {Money}},
	isbn = {978-1-4503-5970-2},
	url = {https://doi.org/10.1145/3290605.3300481},
	doi = {10.1145/3290605.3300481},
	abstract = {This paper presents a qualitative study of the recent integration of a UK-based, digital-first mobile banking app - Monzo - with the web automation service IFTTT (If This Then That). Through analysis of 113 unique IFTTT 'recipes' shared by Monzo users on public community forums, we illustrate the potentially diverse functions of these recipes, and how they are achieved through different kinds of automation. Beyond achieving more convenient and efficient financial management, we note many playful and expressive applications of conditionality and automation that far extend traditional functions of banking applications and infrastructure. We use these findings to map opportunities, challenges and areas of future research in the development of 'programmable money' and related financial technologies. Specifically, we present design implications for the extension of native digital banking applications; novel uses of banking data; the applicability of blockchains and smart contracts; and future forms of financial autonomy.},
	booktitle = {Proceedings of the 2019 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Elsden, Chris and Feltwell, Tom and Lawson, Shaun and Vines, John},
	year = {2019},
	note = {event-place: Glasgow, Scotland Uk},
	keywords = {automation, fintech, ifttt, money},
	pages = {1--13},
}

@inproceedings{yu_design_2022,
	address = {New York, NY, USA},
	series = {{BDE} '22},
	title = {Design and {Implementation} of a {Blockchain}-{Based} {Road} {Damage} {Approval} {System}},
	isbn = {978-1-4503-9563-2},
	url = {https://doi.org/10.1145/3538950.3538963},
	doi = {10.1145/3538950.3538963},
	abstract = {In the traditional centralised e-government approval system, the databases of different government departments are independent of each other, with varying degrees of construction, and the fragmentation of information is relatively serious, making the approval of government data inefficient and difficult to share. The emergence of blockchain provides a new idea to solve the difficulties of sharing and managing government data. Based on the characteristics of blockchain such as non-tamperability and traceability, the article adopts FISCO BCOS, a federated chain whose participating members' identities are audited by the system, as the underlying architecture, and conducts research around the road damage approval process, designing, implementing and verifying a blockchain technology-based road damage approval model, as well as designing the corresponding smart contract, so as to complete efficient government approval and secure data sharing. The article concludes with qualitative and quantitative testing of the approval system, demonstrating that the system designed is usable, easy to use and secure.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Big} {Data} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Yu, Shoujian and Zhang, Ting and Huang, Xiaoxiao and Xia, Xiaoling},
	year = {2022},
	note = {event-place: Beijing, China},
	keywords = {blockchain, smart contracts, approval, Petri net},
	pages = {94--103},
}

@inproceedings{durugy_staging_2020,
	address = {New York, NY, USA},
	series = {{ICNSER2020}},
	title = {Staging {Blockchain} {Technology} {In} {The} {Customer}'s {Journey} {Through} {Service} {Design}: {A} {Bike}-{Sharing} {Case} {Study} {To} {Improve} {Quality} {And} {Trust} {Perception}},
	isbn = {978-1-4503-7549-8},
	url = {https://doi.org/10.1145/3411016.3411161},
	doi = {10.1145/3411016.3411161},
	abstract = {Thanks to the growing trend of the sharing economy and the increased need for innovative mobility solutions, the bike sharing sector has gained considerable importance. However, the privacy of the participants is at risk as their user and travel profiles are not only collected and used by bike sharing service providers. In addition, for the bike share provider, problems have arisen due to increased vandalism and theft of the vehicles on offer. Therefore, this experimental study shows why Blockchain could solve this problem by eliminating dependency on third parties and allowing an economical and user-friendly mode of transport between participants directly. As part of this research, we have "staged" the blockchain through service design in the context of bike sharing. Blockchain will only demonstrate its value when integrated into real service experiences. Our main conclusion is that "blockchain staging" is more important than the technological dimension of smart contracts.},
	booktitle = {Proceedings of the 2nd {International} {Conference} on {Industrial} {Control} {Network} {And} {System} {Engineering} {Research}},
	publisher = {Association for Computing Machinery},
	author = {Durugy, Evelyn and Darouichi, Oussama and Fragniere, Emmanuel},
	year = {2020},
	note = {event-place: Kuala Lumpur, Malaysia},
	keywords = {Blockchain technology, Human-centric approaches, Service design, Sharing economy},
	pages = {70--76},
}

@inproceedings{kumar_approach_2022,
	address = {New York, NY, USA},
	series = {{ISEC} 2022},
	title = {An {Approach} to {Open}-{Source} {Software} {License} {Management} {Using} {Blockchain}-{Based} {Smart}-{Contracts}},
	isbn = {978-1-4503-9618-9},
	url = {https://doi.org/10.1145/3511430.3511448},
	doi = {10.1145/3511430.3511448},
	abstract = {Open source software is increasingly being used by various organizations. Open source licenses such as GPL, MIT, Apache, Mozilla, BSD, etc have varying terms and conditions for usage, modification, and distribution. Given the availability of source code for open source software, it is difficult to scrutinize adherence of licenses and more often than not it is left to the good faith of organizations and individuals. Violation of licensing terms knowingly or unknowingly can lead to copyright, ethical, compliance and security issues. In this paper, we propose a blockchain based approach in managing open source software licenses by enforcing certain practices to improve awareness and increase transparency, thus minimizing the possibility of violations. We present a solution design that relies on the use of 4 modules: InterPlanetary File System (IPFS), Smart contracts, Transaction manager (Meta-Mask) and a Permissioned Blockchain to enforce the conformance of licenses.},
	booktitle = {15th {Innovations} in {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Kumar, Abhay and Gupta, Abhinav and Sanagavarapu, Lalit Mohan and Reddy, Y Raghu},
	year = {2022},
	note = {event-place: Gandhinagar, India},
	keywords = {Blockchain, Smart Contracts, Copyright Violation, InterPlanetary File System, Open-Source Software, Software License Management},
}

@article{tallyn_exploring_2018,
	title = {Exploring {Machine} {Autonomy} and {Provenance} {Data} in {Coffee} {Consumption}: {A} {Field} {Study} of {Bitbarista}},
	volume = {2},
	url = {https://doi.org/10.1145/3274439},
	doi = {10.1145/3274439},
	abstract = {Technologies such as distributed ledgers and smart contracts are enabling the emergence of new autonomous systems, and providing enhanced systems to track the provenance of goods. A growing body of work in HCI is exploring the novel challenges of these systems, but there has been little attention paid to their impact on everyday activities. This paper presents a study carried out in 3 office environments for a 1-month period, which explored the impact of an autonomous coffee machine on the everyday activity of coffee consumption. The Bitbarista mediates coffee consumption through autonomous processes, presenting provenance data at the time of purchase while attempting to reduce intermediaries in the coffee trade. Through the report of interactions with and around the Bitbarista, we explore its implications for everyday life, and wider social structures and values. We conclude by offering recommendations for the design of community shared autonomous systems.},
	number = {CSCW},
	journal = {Proc. ACM Hum.-Comput. Interact.},
	author = {Tallyn, Ella and Pschetz, Larissa and Gianni, Rory and Speed, Chris and Elsden, Chris},
	month = nov,
	year = {2018},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {blockchain, distributed ledger technologies, distributed autonomous systems, heteromation, provenance, supply chains},
}

@inproceedings{peng_research_2022,
	address = {New York, NY, USA},
	series = {{AISS} '21},
	title = {Research on the {Application} of {Blockchain} in {Educational} {Resources}},
	isbn = {978-1-4503-8586-2},
	url = {https://doi.org/10.1145/3503047.3503092},
	doi = {10.1145/3503047.3503092},
	abstract = {In recent years, the development of digital educational resources has advanced by leaps and bounds, but the problem of copyright protection of educational resources has become increasingly prominent. Based on the phenomenon that it is difficult to solve the problems of copyright traceability, platform monopoly and transaction protection by existing digital resource protection methods, using the characteristics that it is difficult to tamper with the blockchain achieves the purpose of copyright traceability, using the decentralization feature realizes the resource antitrust function, and using the smart contract creates a secure trading environment. It is based on Spring Boot framework, Fabric distributed ledger, asymmetric encryption technology, IPFS and other technologies putting forward the design scheme of education platform based on blockchain technology. From the technical level, let the creators of educational resources be willing to share, dare to share educational resources, and let more learners obtain the knowledge they want.},
	booktitle = {Proceedings of the 3rd {International} {Conference} on {Advanced} {Information} {Science} and {System}},
	publisher = {Association for Computing Machinery},
	author = {Peng, Jiao and Yang, Shulin and Li, Xiang and Zhou, Meiqi and Huang, Yongliang},
	year = {2022},
	note = {event-place: Sanya, China},
	keywords = {Blockchain, Hyperledger Fabric, Educational Resources},
}

@inproceedings{liu_research_2021,
	address = {New York, NY, USA},
	series = {{ICAIIS} 2021},
	title = {Research on {University} {Book} {Sharing} {Cloud} {Platform} {Based} on {Blockchain}},
	isbn = {978-1-4503-9020-0},
	url = {https://doi.org/10.1145/3469213.3470706},
	doi = {10.1145/3469213.3470706},
	abstract = {Through the deep integration of high-tech blockchain, cloud computing and book management technology, a book sharing service platform is designed in this paper by giving full play to the characteristics of blockchain (such as decentralization and non-tampering) and the characteristics of cloud computing (such as virtualization, expandability and configurability). Firstly, it expounded the technical characteristics and combination method of blockchain and cloud computing; Secondly, it designed the logical structure of the platform; Thirdly, it proposed an improved DPoS consensus mechanism algorithm and the specific content of smart contract design. This platform has many advantages, such as breaking down geographical barriers, connecting the book borrowing services among universities, realizing the cross-regional and cross-platform sharing of paper books, solving the problems of repeated construction and poor sharing of university library materials, saving the cumulative construction of university library management cost and improving the service efficiency of books.},
	booktitle = {2021 2nd {International} {Conference} on {Artificial} {Intelligence} and {Information} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Liu, Xiaogang},
	year = {2021},
	note = {event-place: Chongqing, China},
	keywords = {Blockchain, book, cloud computing, platform, share},
}

@inproceedings{podda_overview_2020,
	address = {New York, NY, USA},
	series = {{ICSEW}'20},
	title = {An {Overview} of {Blockchain}-{Based} {Systems} and {Smart} {Contracts} for {Digital} {Coupons}},
	isbn = {978-1-4503-7963-2},
	url = {https://doi.org/10.1145/3387940.3391500},
	doi = {10.1145/3387940.3391500},
	abstract = {Among the accessory applications of the blockchain, the idea of using it as an immutable register for tracking and certifying documents is recently gaining interest in research and industry. The problems of traceability, non-counterfeiting and unique usage of digital coupons fall within this area; many couponing platforms are hence exploring the possibility of addressing the above limitations with blockchain technologies. In view of the foregoing, in this work we analyse and compare several blockchain-based couponing systems. To do so, we first propose a general schema of digital coupon and define the desirable properties of a couponing system. Then, we select a sample of these systems and we examine them, describing their design choices and summarizing their relevant properties. Finally, we inspect their code and study how the notion of couponing system is interpreted in their smart contracts. We also highlight their distinctive features and relevant implementation solutions. We conclude by discussing what emerged from our analysis and proposing some possible future investigations.},
	booktitle = {Proceedings of the {IEEE}/{ACM} 42nd {International} {Conference} on {Software} {Engineering} {Workshops}},
	publisher = {Association for Computing Machinery},
	author = {Podda, Alessandro Sebastian and Pompianu, Livio},
	year = {2020},
	note = {event-place: Seoul, Republic of Korea},
	keywords = {neural networks, datasets, gaze detection, text tagging},
	pages = {770--778},
}

@inproceedings{froehlich_supporting_2022,
	address = {New York, NY, USA},
	series = {{NordiCHI} '22},
	title = {Supporting {Interface} {Experimentation} for {Blockchain} {Applications}},
	isbn = {978-1-4503-9448-2},
	url = {https://doi.org/10.1145/3547522.3547676},
	doi = {10.1145/3547522.3547676},
	abstract = {There is an increasingly diverse range of smart-contract blockchains on which decentralized applications (dApps) are built. However, HCI research has so far failed to address them, focusing primarily on Bitcoin and Ethereum. This is problematic as these new blockchains come with an increasingly diverse set of properties that influence the usability of dApps for end-users. For blockchain interface design guidelines to be valuable for practitioners, they need to acknowledge the heterogeneity of blockchains. However, evaluating novel interface concepts across different blockchains is resource-intensive as each blockchain has to be integrated manually, slowing down research. To address this challenge, we propose a system to support interface experimentation for blockchain applications. The system allows researchers and developers to connect interfaces to a unified API simulating different blockchains and facilitates the configuration, distribution, and evaluation of online experiments. A preliminary evaluation showed promising results.},
	booktitle = {Adjunct {Proceedings} of the 2022 {Nordic} {Human}-{Computer} {Interaction} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Froehlich, Michael and Moser, Benjamin and Alt, Florian and Schmidt, Albrecht},
	year = {2022},
	note = {event-place: Aarhus, Denmark},
	keywords = {blockchain, cryptocurrency, dapps, experimentation, hci, interface design, support tools, web3},
}

@inproceedings{jian-zhi_research_2020,
	address = {New York, NY, USA},
	series = {{ICIIP} '19},
	title = {Research and {Implementation} of {Data} {Storage} {Management} {System} {Based} on {Blockchain} {Technology}},
	isbn = {978-1-4503-6191-0},
	url = {https://doi.org/10.1145/3378065.3378128},
	doi = {10.1145/3378065.3378128},
	abstract = {This thesis develops blockchain data storage management system based on the relevant basic theory of blockchain. The system is based on an open source project of Hyperledger. Through the integration of various projects, this paper introduces a blockchain data transmission management system to provide users with a series of services related to data sharing and management across units. The system uses blockchain technology to solve the problems of encryption, disaster tolerance, sharing, and multi-unit coordination. This system uses smart contracts to ensure the security of the data used, without the involvement of third-party authorities or central proxy services, and without the need to set up a separate server. The system mainly reflects the characteristics of system decentralization, trust, secure transmission, collective maintenance, and trusted data management. The system uses the Java language, the Linux development environment, based on the fabric project, the league chain as the technology foundation, and the hierarchical structure design idea.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Intelligent} {Information} {Processing}},
	publisher = {Association for Computing Machinery},
	author = {Jian-zhi, Deng and Hao, Wu and Xuan, Guo},
	year = {2020},
	note = {event-place: China, China},
	keywords = {Blockchain, smart contract, consensus, league chain},
	pages = {325--333},
}

@article{nguyen_blockchain-based_2021,
	title = {A {Blockchain}-{Based} {Iterative} {Double} {Auction} {Protocol} {Using} {Multiparty} {State} {Channels}},
	volume = {21},
	issn = {1533-5399},
	url = {https://doi.org/10.1145/3389249},
	doi = {10.1145/3389249},
	abstract = {Although the iterative double auction has been widely used in many different applications, one of the major problems in its current implementations is that they rely on a trusted third party to handle the auction process. This imposes the risk of single point of failures, monopoly, and bribery. In this article, we aim to tackle this problem by proposing a novel decentralized and trustless framework for iterative double auction based on blockchain. Our design adopts the smart contract and state channel technologies to enable a double auction process among parties that do not need to trust each other, while minimizing the blockchain transactions. In specific, we propose an extension to the original concept of state channels that can support multiparty computation. Then, we provide a formal development of the proposed framework and prove the security of our design against adversaries. Finally, we develop a proof-of-concept implementation of our framework using Elixir and Solidity, on which we conduct various experiments to demonstrate its feasibility and practicality.},
	number = {2},
	journal = {ACM Trans. Internet Technol.},
	author = {Nguyen, Truc D. T. and Thai, My T.},
	month = mar,
	year = {2021},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {blockchain, Iterative double auction, state channel, trustless},
}

@inproceedings{jacobsen_blockchain_2018,
	address = {New York, NY, USA},
	series = {Middleware '18},
	title = {Blockchain {Landscape} and {AI} {Renaissance}: {The} {Bright} {Path} {Forward}},
	isbn = {978-1-4503-6073-9},
	url = {https://doi.org/10.1145/3279945.3279947},
	doi = {10.1145/3279945.3279947},
	abstract = {Known for powering cryptocurrencies such as Bitcoin and Ethereum, blockchain is seen as a disruptive technology capable of revolutionizing a wide variety of domains, ranging from finance to governance, by offering superior security, reliability, and transparency founded upon a decentralized and democratic computational model. In this tutorial, we first present the original Bitcoin design, along with Ethereum and Hyperledger, and reflect on their design choices through the academic lens. We further provide an overview of potential applications and associated research challenges, as well as a survey of ongoing research directions related to byzantine fault-tolerance consensus protocols. We highlight the new opportunities blockchain creates for building the next generation of secure middleware platforms and explore the possible interplay between AI and blockchains, or more specifically, how blockchain technology can enable the notion of "decentralized intelligence." We conclude with a walkthrough demonstrating the process of developing a decentralized application using a popular Smart Contract language (Solidity) over the Ethereum platform},
	booktitle = {Proceedings of the 19th {International} {Middleware} {Conference} {Tutorials}},
	publisher = {Association for Computing Machinery},
	author = {Jacobsen, Hans-Arno and Sadoghi, Mohammad and Tabatabaei, Mohammad Hossein and Vitenberg, Roman and Zhang, Kaiwen},
	year = {2018},
	note = {event-place: Rennes, France},
	keywords = {Blockchain, Ethereum, Consensus, Bitcoin, Hyperledger},
}

@inproceedings{douladiris_blockchain_2021,
	address = {New York, NY, USA},
	series = {{PCI} '20},
	title = {A {Blockchain} {Framework} for {Reverse} {Logistics} of {Used} {Medical} {Equipment}},
	isbn = {978-1-4503-8897-9},
	url = {https://doi.org/10.1145/3437120.3437295},
	doi = {10.1145/3437120.3437295},
	abstract = {Reverse logistics (RL) activities of medical equipment play a crucial role in properly managing durable medical devices at the end of their life. However, refurbishing medical equipment is not a straightforward process, as there exist many challenges associated to their proper re-positioning into the market. In this paper the use of blockchain technology is proposed as a viable solution for establishing sound refurbishing channels for medical equipment while considering relevant regulatory, security and operational prerequisites. In particular, we propose a highly robust traceability mechanism for medical equipment refurbishing activities based on blockchain and smart contracts. Our approach offers multiple and disparate stakeholders (device manufacturers, hospitals, refurbishers, retailers etc.) to share critical RL information in a timely, verifiable and secure fashion. The system provides forensics-by-design functionalities and safeguards the chain-of-custody for all the refurbishing processes taking place. A proof-of-concept implementation is provided as well as a discussion of the various benefits of the proposed RL system.},
	booktitle = {Proceedings of the 24th {Pan}-{Hellenic} {Conference} on {Informatics}},
	publisher = {Association for Computing Machinery},
	author = {Douladiris, Kostas and Dasaklis, Thomas and Casino, Fran and Douligeris, Christos},
	year = {2021},
	note = {event-place: Athens, Greece},
	keywords = {blockchain, smart contracts, traceability, medical equipment, refurbishing, reverse logistics},
	pages = {148--151},
}

@inproceedings{yan_confidentiality_2020,
	address = {New York, NY, USA},
	series = {{SIGMOD} '20},
	title = {Confidentiality {Support} over {Financial} {Grade} {Consortium} {Blockchain}},
	isbn = {978-1-4503-6735-6},
	url = {https://doi.org/10.1145/3318464.3386127},
	doi = {10.1145/3318464.3386127},
	abstract = {Confidentiality is an indispensable requirement in financial applications of blockchain technology, and supporting it along with high performance and friendly programmability is technically challenging. In this paper, we present a system design called CONFIDE to support on-chain confidentiality by leveraging Trust Execution Environment (TEE). CONFIDE's secure data transmission protocol and data encryption protocol, together with a highly efficient virtual machine run in TEE, guarantee the confidentiality in the life cycle of a transaction from end to end. CONFIDE proposes a secure data model along with an application-driven secure protocol to guarantee data confidentiality and integrity. Its smart contract language extension offers users the flexibility to define complex confidentiality models. CONFIDE is implemented as a plugin module to Antfin Blockchain's proprietary platform, and can be plugged into other blockchain platforms as well with its universal interface design. Nowadays, CONFIDE is supporting millions of commercial transactions daily on consortium blockchain running financial applications including supply chain finance, ABS, commodity provenance, and cold-chain logistics.},
	booktitle = {Proceedings of the 2020 {ACM} {SIGMOD} {International} {Conference} on {Management} of {Data}},
	publisher = {Association for Computing Machinery},
	author = {Yan, Ying and Wei, Changzheng and Guo, Xuepeng and Lu, Xuming and Zheng, Xiaofu and Liu, Qi and Zhou, Chenhui and Song, Xuyang and Zhao, Boran and Zhang, Hui and Jiang, Guofei},
	year = {2020},
	note = {event-place: Portland, OR, USA},
	keywords = {blockchain, confidentiality, trusted execution environment},
	pages = {2227--2240},
}

@inproceedings{goel_resource_2018,
	address = {New York, NY, USA},
	series = {Middleware '18},
	title = {Resource {Fairness} and {Prioritization} of {Transactions} in {Permissioned} {Blockchain} {Systems} ({Industry} {Track})},
	isbn = {978-1-4503-6016-6},
	url = {https://doi.org/10.1145/3284028.3284035},
	doi = {10.1145/3284028.3284035},
	abstract = {In this paper, we consider the problem of fair scheduling of transactions of multiple types that are submitted to a permissioned blockchain system. Permissioned blockchains are being increasingly used for enterprise applications and by design are heterogeneous in nature, with different peer organizations performing different business functions. Transactions execute different smart contract operations that may have widely varying business importance. In such a setting, we argue that the typically adopted First-In-First-Out ordering mechanism for transactions in a blockchain system, which is a performance-limited resource, is inefficient and unfair. We propose a weighted fair queueing strategy for ordering transactions that can support differentiated quality of service for submitted transactions on the blockchain. The main challenge we address in this paper is to support fair allocation and differentiation in a decentralized manner, as there is no single authority that can facilitate this as in traditional systems. We demonstrate such a fair scheduling strategy and support multiple transaction types with different priorities on Hyperledger Fabric.},
	booktitle = {Proceedings of the 19th {International} {Middleware} {Conference} {Industry}},
	publisher = {Association for Computing Machinery},
	author = {Goel, Seep and Singh, Abhishek and Garg, Rachit and Verma, Mudit and Jayachandran, Praveen},
	year = {2018},
	note = {event-place: Rennes, France},
	keywords = {Hyperledger Fabric, Permissioned Blockchain Systems, Prioritization, Resource Fairness, Weighted Fair Queueing},
	pages = {46--53},
}

@inproceedings{bandara_patterns_2020,
	address = {New York, NY, USA},
	series = {{EuroPLoP} '20},
	title = {Patterns for {Blockchain} {Data} {Migration}},
	isbn = {978-1-4503-7769-0},
	url = {https://doi.org/10.1145/3424771.3424796},
	doi = {10.1145/3424771.3424796},
	abstract = {With the rapid evolution of technological, economic, and regulatory landscapes, contemporary blockchain platforms are all but certain to undergo major changes. Therefore, the applications that rely on them will eventually need to migrate from one blockchain instance to another to remain competitive and secure, as well as to enhance the business process, performance, cost efficiency, privacy, and regulatory compliance. However, the differences in data and smart contract representations, modes of hosting, transaction fees, as well as the need to preserve consistency, immutability, and data provenance introduce unique challenges over database migration. We first present a set of blockchain migration scenarios and data fidelity levels using an illustrative example. We then present a set of migration patterns to address those scenarios and the above data management challenges. Finally, we demonstrate how the effort, cost, and risk of migration could be minimized by choosing a suitable set of data migration patterns, data fidelity level, and proactive system design. Practical considerations and research challenges are also highlighted.},
	booktitle = {Proceedings of the {European} {Conference} on {Pattern} {Languages} of {Programs} 2020},
	publisher = {Association for Computing Machinery},
	author = {Bandara, HMN Dilum and Xu, Xiwei and Weber, Ingo},
	year = {2020},
	note = {event-place: Virtual Event, Germany},
	keywords = {blockchain, smart contract, transactions, data migration, patterns},
}

@inproceedings{adkins_encrypted_2020,
	address = {New York, NY, USA},
	series = {{AFT} '20},
	title = {Encrypted {Blockchain} {Databases}},
	isbn = {978-1-4503-8139-0},
	url = {https://doi.org/10.1145/3419614.3423266},
	doi = {10.1145/3419614.3423266},
	abstract = {Blockchain databases are storage systems that combine properties of blockchains and databases like decentralization, tamperproofness, low query latency and support for complex queries. Blockchain databases are an emerging and important class of blockchain technology that is critical to the development of non-trivial smart contracts, distributed applications and decentralized marketplaces.In this work, we consider the problem of designing end-to-end encrypted blockchain databases to support the development of decentralized applications that need to store and query sensitive data. In particular, we show how to design what we call blockchain encrypted multi-maps (EMM) which can be used to instantiate various kinds of NoSQL blockchain databases like key-value stores or document databases. We propose three blockchain EMM constructions, each of which achieves different tradeoffs between query, add and delete efficiency. All of our constructions are legacy-friendly in the sense that they can be implemented on top of any existing blockchain. This is particularly challenging since blockchains do not support data deletion.We implemented our schemes on the Algorand blockchain and evaluated their concrete efficiency empirically. Our experiments show that they are practical.},
	booktitle = {Proceedings of the 2nd {ACM} {Conference} on {Advances} in {Financial} {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Adkins, Daniel and Agarwal, Archita and Kamara, Seny and Moataz, Tarik},
	year = {2020},
	note = {event-place: New York, NY, USA},
	keywords = {dynamic data on blockchains, encrypted blockchains, searchable encryption},
	pages = {241--254},
}

@inproceedings{zhang_xscope_2023,
	address = {New York, NY, USA},
	series = {{ASE} '22},
	title = {Xscope: {Hunting} for {Cross}-{Chain} {Bridge} {Attacks}},
	isbn = {978-1-4503-9475-8},
	url = {https://doi.org/10.1145/3551349.3559520},
	doi = {10.1145/3551349.3559520},
	abstract = {Cross-Chain bridges have become the most popular solution to support asset interoperability between heterogeneous blockchains. However, while providing efficient and flexible cross-chain asset transfer, the complex workflow involving both on-chain smart contracts and off-chain programs causes emerging security issues. In the past year, there have been more than ten severe attacks against cross-chain bridges, causing billions of loss. With few studies focusing on the security of cross-chain bridges, the community still lacks the knowledge and tools to mitigate this significant threat. To bridge the gap, we conduct the first study on the security of cross-chain bridges. We document three new classes of security bugs and propose a set of security properties and patterns to characterize them. Based on those patterns, we design Xscope, an automatic tool to find security violations in cross-chain bridges and detect real-world attacks. We evaluate Xscope on four popular cross-chain bridges. It successfully detects all known attacks and finds suspicious attacks unreported before. A video of Xscope is available at https://youtu.be/vMRO\_qOqtXY.},
	booktitle = {Proceedings of the 37th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Jiashuo and Gao, Jianbo and Li, Yue and Chen, Ziming and Guan, Zhi and Chen, Zhong},
	year = {2023},
	note = {event-place: Rochester, MI, USA},
	keywords = {Blockchain, Cross-Chain Bridge, Security Analysis},
}

@inproceedings{andersen_democratizing_2017,
	address = {New York, NY, USA},
	series = {{BuildSys} '17},
	title = {Democratizing {Authority} in the {Built} {Environment}},
	isbn = {978-1-4503-5544-5},
	url = {https://doi.org/10.1145/3137133.3137151},
	doi = {10.1145/3137133.3137151},
	abstract = {Operating systems and applications in the built environment have relied upon central authorization and management mechanisms which restrict their scalability, especially with respect to administrative overhead. We propose a new set of primitives encompassing syndication, security, and service execution that unifies the management of applications and services across the built environment, while enabling participants to individually delegate privilege across multiple administrative domains with no loss of security or manageability. We show how to leverage a decentralized authorization syndication platform to extend the design of building operating systems beyond the single administrative domain of a building. The authorization system leveraged is based on blockchain smart contracts to permit decentralized and democratized delegation of authorization without central trust. Upon this, a publish/subscribe syndication tier and a containerized service execution environment are constructed. Combined, these mechanisms solve problems of delegation, federation, device protection and service execution that arise throughout the built environment. We leverage a high-fidelity city-scale emulation to verify the scalability of the authorization tier, and briefly describe a prototypical democratized operating system for the built environment using this foundation.},
	booktitle = {Proceedings of the 4th {ACM} {International} {Conference} on {Systems} for {Energy}-{Efficient} {Built} {Environments}},
	publisher = {Association for Computing Machinery},
	author = {Andersen, Michael P and Kolb, John and Chen, Kaifei and Culler, David E. and Katz, Randy},
	year = {2017},
	note = {event-place: Delft, Netherlands},
	keywords = {microservices, built environment, federation, syndication},
}

@inproceedings{alexopoulos_trident_2020,
	address = {New York, NY, USA},
	series = {{SAC} '20},
	title = {{TRIDEnT}: {Towards} a {Decentralized} {Threat} {Indicator} {Marketplace}},
	isbn = {978-1-4503-6866-7},
	url = {https://doi.org/10.1145/3341105.3374020},
	doi = {10.1145/3341105.3374020},
	abstract = {Sophisticated mass attacks, especially when exploiting zero-day vulnerabilities, have the potential to cause destructive damage to organizations and critical infrastructure. To timely detect and contain such attacks, collaboration among the defenders is critical. By correlating real-time detection information (threat indicators) from multiple sources, defenders can detect attacks and take the appropriate measures in time. However, although the technical tools to facilitate collaboration exist, real-world adoption of such collaborative security mechanisms is still underwhelming. This is largely due to a lack of trust and participation incentives for companies and organizations. This paper proposes TRIDEnT, a novel collaborative platform that aims to enable parties to exchange network threat indicators, thus increasing their overall detection capabilities. TRIDEnT allows parties that may be in a competitive relationship, to selectively advertise, sell and acquire threat indicators in the form of (near) real-time peer-to-peer streams. To demonstrate the feasibility of our approach, we instantiate our design in a decentralized manner using Ethereum smart contracts and provide a fully functional prototype.},
	booktitle = {Proceedings of the 35th {Annual} {ACM} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Alexopoulos, Nikolaos and Vasilomanolakis, Emmanouil and Roux, Stephane Le and Rowe, Steven and Mühlhäuser, Max},
	year = {2020},
	note = {event-place: Brno, Czech Republic},
	keywords = {Ethereum, smart contracts, trust, collaborative security, threat indicator sharing},
	pages = {332--341},
}

@inproceedings{eklund_factors_2020,
	address = {New York, NY, USA},
	series = {{MEDES} '19},
	title = {Factors {That} {Impact} {Blockchain} {Scalability}},
	isbn = {978-1-4503-6238-2},
	url = {https://doi.org/10.1145/3297662.3365818},
	doi = {10.1145/3297662.3365818},
	abstract = {Blockchain systems (more precisely Distributed Ledger Technologies (DLTs)) represent a different digital ecosystem compared with traditional computer systems. One major difference are the performance and scalability factors which will be discussed and analytically investigated in this paper. In doing so, we provide guidance for defining a research agenda focusing on the investigation of the crucial role of scalability for blockchain systems. System performance – measured in terms of (1) consensus response time (blockchain network latency or time to convergence/agreement); (2) number of transactions per second or throughput, and (3) computing (and power) resources consumed – can be understood by considering the design dimensions of a blockchain system, namely: (i) the type of blockchain system needed from a requirements perspective which in turn determines; (ii) the complexity of the consensus protocol used; (iii) the topography of the traffic flow on the network; (iv) the performance and complexity of the domain-specific language that implements smart contracts; and (v) by the anticipated growth in size and complexity of the distributed ledger itself.},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Management} of {Digital} {EcoSystems}},
	publisher = {Association for Computing Machinery},
	author = {Eklund, Peter W. and Beck, Roman},
	year = {2020},
	note = {event-place: Limassol, Cyprus},
	keywords = {blockchain, distributed ledger, distributed network scalability, survey of system performance},
	pages = {126--133},
}

@inproceedings{li_towards_2017,
	address = {New York, NY, USA},
	series = {{BCC} '17},
	title = {Towards {Scalable} and {Private} {Industrial} {Blockchains}},
	isbn = {978-1-4503-4974-1},
	url = {https://doi.org/10.1145/3055518.3055531},
	doi = {10.1145/3055518.3055531},
	abstract = {The blockchain emerges as an innovative tool that has the potential to positively impact the way we design a number of online applications today. In many ways, the blockchain technology is, however, still not mature enough to cater for industrial standards. Namely, existing Byzantine tolerant permission-based blockchain deployments can only scale to a limited number of nodes. These systems typically require that all transactions (and their order of execution) are publicly available to all nodes in the system, which comes at odds with common data sharing practices in the industry, and prevents a centralized regulator from overseeing the full blockchain system. In this paper, we propose a novel blockchain architecture devised specifically to meet industrial standards. Our proposal leverages the notion of satellite chains that can privately run different consensus protocols in parallel - thereby considerably boosting the scalability premises of the system. Our solution also accounts for a hands-off regulator that oversees the entire network, enforces specific policies by means of smart contracts, etc. We implemented our solution and integrated it with Hyperledger Fabric v0.6.},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Blockchain}, {Cryptocurrencies} and {Contracts}},
	publisher = {Association for Computing Machinery},
	author = {Li, Wenting and Sforzin, Alessandro and Fedorov, Sergey and Karame, Ghassan O.},
	year = {2017},
	note = {event-place: Abu Dhabi, United Arab Emirates},
	keywords = {privacy, hyperledger, scalability, private blockchain},
	pages = {9--14},
}

@inproceedings{udokwu_designing_2021,
	address = {New York, NY, USA},
	series = {{ASSE} '21},
	title = {Designing a {Collaborative} {Construction}-{Project} {Platform} on {Blockchain} {Technology} for {Transparency}, {Traceability}, and {Information} {Symmetry}},
	isbn = {978-1-4503-8908-2},
	url = {https://doi.org/10.1145/3456126.3456134},
	doi = {10.1145/3456126.3456134},
	abstract = {The construction industry is a \$6 trillion industry worldwide with a prediction to grow towards \$10,3 trillion by 2023 and constitutes an essential part of the global economy. Nevertheless, the management of the construction effort is still very manual. The construction process from design, to sourcing of material, contract management, and so on, is a convoluted and intransparent process filled with risks the collaborating parties are exposed to. A need exists for management platforms that streamline and automate collaborative construction processes, establish transparency, traceability, and information symmetry between business parties. This paper presents the Construction Project Management (CoPM) platform that is based on blockchain- and smart-contract technologies for enabling peer-to-peer collaboration between construction parties that enhances the flow of information for reducing cost- and time expenditures while improving the quality of service. The CoPM system is based on diligent up-front requirement studies from which we derive a coherent system architecture and set of cooperation protocols. Thereby, the CoPM system overcomes the currently existing fractured value propositions for construction-management systems.CCS Concepts •Software and its engineering•Software creation and management•Designing software},
	booktitle = {2021 2nd {Asia} {Service} {Sciences} and {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Udokwu, Chibuzor and Norta, Alexander and Wenna, Christoph},
	year = {2021},
	note = {event-place: Macau, Macao},
	keywords = {blockchain, smart contract, business processes, collaboration, Construction, data logistics, inter-organisational, project management},
	pages = {1--9},
}

@inproceedings{klenik_porting_2022,
	address = {New York, NY, USA},
	series = {{SAC} '22},
	title = {Porting a {Benchmark} with a {Classic} {Workload} to {Blockchain}: {TPC}-{C} on {Hyperledger} {Fabric}},
	isbn = {978-1-4503-8713-2},
	url = {https://doi.org/10.1145/3477314.3507006},
	doi = {10.1145/3477314.3507006},
	abstract = {Many cross-organization cooperation applications of blockchain-based distributed ledger technologies (DLT) do not aim at innovation at the cooperation pattern level: essentially the same "business" is conducted by the parties, but this time without a central party to be trusted with bookkeeping. The migration to DLT is expected to have a negative performance impact, but some DLTs, such as Hyperledger Fabric, are accepted to be much better suited performance-wise to such use cases than others. However, with the somewhat surprising, but ongoing absence of application-level performance benchmarks for DLTs, cross-DLT comparison for "classic" workloads and the evaluation of the performance impact of "blockchainification" is still ill-supported. We present the design and Hyperledger Caliper-based open implementation of a full port of the classic TPC-C benchmark to Hyperledger Fabric, complete with a structured approach for transforming the original database schema to a smart contract data model. Initial measurements about the workload characteristics that will affect the design of large-scale performance evaluations are also included.},
	booktitle = {Proceedings of the 37th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Klenik, Attila and Kocsis, Imre},
	year = {2022},
	note = {event-place: Virtual Event},
	keywords = {blockchain, hyperledger fabric, benchmarking, DLT, TPC-C},
	pages = {290--298},
}

@inproceedings{chunbo_application_2021,
	address = {New York, NY, USA},
	series = {{EITCE} '20},
	title = {The {Application} of {Blockchain} in {Intelligent} {Power} {Data} {Exchange}},
	isbn = {978-1-4503-8781-1},
	url = {https://doi.org/10.1145/3443467.3443725},
	doi = {10.1145/3443467.3443725},
	abstract = {The State Grid ETL(SG-ETL) tool, based on Extract, Transform and Load(ETL) technology, has important application value in intelligent power data exchange. As an important part of the transmission component in the power grid system, it realizes the data exchange between power systems, but in the process of data exchange, problems are gradually exposed such as unguaranteed data quality and uncontrolled business process. In this respect, this thesis studies the blockchain technology and analyzes its feasibility in the application of intelligent power data exchange, optimizes the power transaction order management business process from the blockchain perspective as example, proposes the Decentralized Transaction credit model based on Blockchain P2P(DTBP) according to the process, and describes its evaluation algorithm, introduces the idea of "chain on the chain" to plan the scheme of data to chain in the data exchange process, designs the smart contract life cycle, formulates contract rules and interface function conventions, uses the JSPIN tool to design the third convention's Promela mode, verifies the data and analyse the result to solve the data exchange problems finally.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Electronic} {Information} {Technology} and {Computer} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Chunbo, Ju and Gang, Li and Diantao, Sun},
	year = {2021},
	note = {event-place: Xiamen, China},
	keywords = {Blockchain, Smart contract, Data exchange, DTBP trust model, Power transaction},
	pages = {30--35},
}

@inproceedings{yang_blockchain_2019,
	address = {New York, NY, USA},
	series = {{ICCSE}'19},
	title = {A {Blockchain} {Based} {Smart} {Agent} {System} {Architecture}},
	isbn = {978-1-4503-7640-2},
	url = {https://doi.org/10.1145/3371238.3371244},
	doi = {10.1145/3371238.3371244},
	abstract = {With the popularity of artificial intelligence(AI), intelligent agents are potential to positively change people's lives in every aspect. Meanwhile, blockchain technology opens a new era of value exchange with trustless security among strangers. Its decentralized architecture and cryptography based data storage pattern bring light to vast application areas with high security and scalability requirements. In this work, we provide a general solution for intelligence application development on blockchain. Specifically, we propose a novel design of a smart agent inspired by the smart contract concept in the blockchain. Based on the proposed smart agents, a system architecture composed by smart agents is built supported by blockchain, where the agent network and blockchain network is overlapped. Then, a demonstration of the proposed architecture is designed in a case where private data required to be "properly protected" in a distributed manner. The implementation of the designed system is further conducted in the Ethereum development environment, showing the effectiveness and applicability of the proposed architecture in developing a secure distributed application.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Crowd} {Science} and {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Tianzhi and Liu, Yuan and Yang, Xiaodan and Kang, Yilin},
	year = {2019},
	note = {event-place: Jinan, China},
	keywords = {Blockchain, Smart contract, Smart agent},
	pages = {33--39},
}

@inproceedings{ren_is_2021,
	address = {New York, NY, USA},
	series = {{ICICM} '21},
	title = {Is {All}-{Win} {Possible}? {A} {Novel} {Smart} {Contracts}-{Based} {Music} {Recommendation} {System}},
	isbn = {978-1-4503-9019-4},
	url = {https://doi.org/10.1145/3484399.3484402},
	doi = {10.1145/3484399.3484402},
	abstract = {The current streaming music ecosystem provides a mature and prevalent platform for artists to publish music products and for listeners to consume music services. However, as the main power of streaming content producers, artists have little to no control over their musical works after assigning their copyrights and management to third parties, especially for long-tail artists. The booming development of blockchain technology in recent years brings a fresh change to the music industry. The clear copyrights recorded on-chain attract more and more artists to stand in line, although blockchain-based music platforms are still in their early stage of development. As the number of users and artists keeps increasing, some platforms continue to use the recommendation design of the current streaming music ecosystem. The shortage in this system could cause a long-tail phenomenon again. In this work, we proposed a novel music recommendation system by considering the value of three parties on the platform. Through designing two scheme-based recommendations by leveraging the flexible agreement design of smart contracts, we proposed an effective music promotion strategy for the blockchain-based music platform. It has been verified that the new model has attained significant improvement in the loyalty enhancement of platform users.},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Information} {Communication} and {Management}},
	publisher = {Association for Computing Machinery},
	author = {Ren, Jing and Zhang, Yimiao},
	year = {2021},
	note = {event-place: Tokyo, Japan},
	keywords = {Smart contracts, All-Win, Music recommendation, Referral rewards, Two-sided Value},
	pages = {18--23},
}

@inproceedings{dienbauer_penalty-aware_2021,
	address = {New York, NY, USA},
	series = {{iiWAS} '20},
	title = {A {Penalty}-{Aware} {Cloud} {Monitoring} {System} {Based} on {Blockchains}},
	isbn = {978-1-4503-8922-8},
	url = {https://doi.org/10.1145/3428757.3429130},
	doi = {10.1145/3428757.3429130},
	abstract = {Today, traded cloud services are described by service level agreements that specify the obligations of providers such as availability or reliability. Violations of service level agreements lead to penalty payments. The recent development of prominent cloud platforms such as the re-design of Amazon's spot marketspace underpins a trend towards dynamic cloud markets where consumers migrate their services continuously to different marketspaces and providers to reach a cost-optimum. This leads to a heterogeneous IT infrastructure and consequently aggravates the monitoring of the delivered service quality. Hence, there is a need for a transparent penalty management system, which ensures that consumers automatically get penalty payments from providers in case of service violations.In the paper at hand, we present a cloud monitoring system that is able to execute penalty payments autonomously. In this regard, we revert to smart contracts hosted on blockchains. They continuously monitor cloud services and trigger penalty payments to consumers in case of service violations. We implemented the presented approach with the IBM Hyperledger Fabric framework and created a use case with Amazon's cloud services as well as Azures cloud services to illustrate the universal design of the introduced approach.},
	booktitle = {Proceedings of the 22nd {International} {Conference} on {Information} {Integration} and {Web}-{Based} {Applications} \&amp; {Services}},
	publisher = {Association for Computing Machinery},
	author = {Dienbauer, Christian and Pittl, Benedikt and Mach, Werner and Schikuta, Erich},
	year = {2021},
	note = {event-place: Chiang Mai, Thailand},
	keywords = {Smart Contracts, Cloud Computing, Cloud Monitoring},
	pages = {154--162},
}

@article{wu_flexchain_2022,
	title = {{FlexChain}: {An} {Elastic} {Disaggregated} {Blockchain}},
	volume = {16},
	issn = {2150-8097},
	url = {https://doi.org/10.14778/3561261.3561264},
	doi = {10.14778/3561261.3561264},
	abstract = {While permissioned blockchains enable a family of data center applications, existing systems suffer from imbalanced loads across compute and memory, exacerbating the underutilization of cloud resources. This paper presents FlexChain, a novel permissioned blockchain system that addresses this challenge by physically disaggregating CPUs, DRAM, and storage devices to process different blockchain workloads efficiently. Disaggregation allows blockchain service providers to upgrade and expand hardware resources independently to support a wide range of smart contracts with diverse CPU and memory demands. Moreover, it ensures efficient resource utilization and hence prevents resource fragmentation in a data center. We have explored the design of XOV blockchain systems in a disaggregated fashion and developed a tiered key-value store that can elastically scale its memory and storage. Our design significantly speeds up the execution stage. We have also leveraged several techniques to parallelize the validation stage in FlexChain to further improve the overall blockchain performance. Our evaluation results show that FlexChain can provide independent compute and memory scalability, while incurring at most 12.8\% disaggregation overhead. FlexChain achieves almost identical throughput as the state-of-the-art distributed approaches with significantly lower memory and CPU consumption for compute-intensive and memory-intensive workloads respectively.},
	number = {1},
	journal = {Proc. VLDB Endow.},
	author = {Wu, Chenyuan and Amiri, Mohammad Javad and Asch, Jared and Nagda, Heena and Zhang, Qizhen and Loo, Boon Thau},
	month = sep,
	year = {2022},
	note = {Publisher: VLDB Endowment},
	pages = {23--36},
}

@inproceedings{karanjai_privacy_2021,
	address = {New York, NY, USA},
	series = {Middleware '21},
	title = {Privacy {Preserving} {Event} {Based} {Transaction} {System} in a {Decentralized} {Environment}},
	isbn = {978-1-4503-8534-3},
	url = {https://doi.org/10.1145/3464298.3493401},
	doi = {10.1145/3464298.3493401},
	abstract = {In this paper, we present the design and implementation of a privacy preserving event based UTXO (Unspent Transaction Output) transaction system. Unlike the existing approaches that often depend on smart contracts where digital assets are first locked in a vault, and then released according to event triggers, the event based transaction system encodes event outcome as part of the UTXO note and safeguards event privacy by shielding it with zero-knowledge proof based protocols such that associations between UTXO notes and events are hidden from the validators. Without relying on any triggering mechanism, the proposed transaction system separates event processing from the transaction processing where confidential event based UTXO notes (event based UTXOs or conditional UTXOs) can be transferred freely with full privacy in an asynchronous manner, only with their asset values conditional to the linked event outcomes. The main advantage of such design is that it enables free trade of event based digital assets and prevents the assets from being locked. We implemented the proposed transaction system by extending the Zerocoin data model and protocols. The system is implemented and evaluated using xJsnark.},
	booktitle = {Proceedings of the 22nd {International} {Middleware} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Karanjai, Rabimba and Xu, Lei and Gao, Zhimin and Chen, Lin and Kaleem, Mudabbir and Shi, Weidong},
	year = {2021},
	note = {event-place: Québec city, Canada},
	keywords = {privacy, distributed ledger, UTXO, zero-knowledge proof},
	pages = {286--297},
}

@inproceedings{li_application_2022,
	address = {New York, NY, USA},
	series = {{EITCE} '21},
	title = {Application and {Research} of {Carbon} {Asset} {Management} {Based} on {Blockchain}},
	isbn = {978-1-4503-8432-2},
	url = {https://doi.org/10.1145/3501409.3501530},
	doi = {10.1145/3501409.3501530},
	abstract = {With the accelerated implementation of my country's carbon emission quota system and the continuous deepening of the national carbon market, more and more companies will participate in carbon asset management. Improving the level of intelligence in carbon asset management, reducing the cost of participating entities in the carbon market, and simplifying the carbon asset management process can effectively stimulate market vitality and innovate carbon market business models. Firstly, introduce the nature and necessity of carbon asset management, point out the basic process of carbon asset management, and analyze the current challenges facing my country's carbon asset management. Secondly, it introduces the technical characteristics and application status of blockchain, combined with the needs of carbon asset management, and proposes the application concept of carbon asset management based on blockchain. Then, it systematically elaborates the application design of blockchain technology in the whole process of carbon asset management, designing carbon asset data deposit certificates based on blockchain technology, carbon market entity identity authentication management, and application of smart contract transactions from the three aspects of architecture, and carbon emission traceability management, And carbon emission traceability management. Finally, a prospect is put forward for the future development of the blockchain carbon asset management application market that supports small, medium and micro enterprises as the main body.},
	booktitle = {Proceedings of the 2021 5th {International} {Conference} on {Electronic} {Information} {Technology} and {Computer} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Li, Guomin and Li, Jiangtao and {Lili-Li}},
	year = {2022},
	note = {event-place: Xiamen, China},
	keywords = {Blockchain, Carbon asset management, carbontrading},
	pages = {672--679},
}

@inproceedings{al-bassam_scpki_2017,
	address = {New York, NY, USA},
	series = {{BCC} '17},
	title = {{SCPKI}: {A} {Smart} {Contract}-{Based} {PKI} and {Identity} {System}},
	isbn = {978-1-4503-4974-1},
	url = {https://doi.org/10.1145/3055518.3055530},
	doi = {10.1145/3055518.3055530},
	abstract = {The Public Key Infrastructure (PKI) in use today on the Internet to secure communications has several drawbacks arising from its centralised and non-transparent design. In the past there has been instances of certificate authorities publishing rogue certificates for targeted attacks, and this has been difficult to immediately detect as certificate authorities are not transparent about the certificates they issue. Furthermore, the centralised selection of trusted certificate authorities by operating system and browser vendors means that it is not practical to untrust certificate authorities that have issued rogue certificates, as this would disrupt the TLS process for many other hosts.SCPKI is an alternative PKI system based on a decentralised and transparent design using a web-of-trust model and a smart contract on the Ethereum blockchain, to make it easily possible for rogue certificates to be detected when they are published. The web-of-trust model is designed such that an entity or authority in the system can verify (or vouch for) fine-grained attributes of another entity's identity (such as company name or domain name), as an alternative to the centralised certificate authority identity verification model.},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Blockchain}, {Cryptocurrencies} and {Contracts}},
	publisher = {Association for Computing Machinery},
	author = {Al-Bassam, Mustafa},
	year = {2017},
	note = {event-place: Abu Dhabi, United Arab Emirates},
	pages = {35--40},
}

@book{noauthor_bcc_2019,
	address = {New York, NY, USA},
	title = {{BCC} '19: {Proceedings} of the {Third} {ACM} {Workshop} on {Blockchains}, {Cryptocurrencies} and {Contracts}},
	isbn = {978-1-4503-6785-1},
	abstract = {It is our pleasure to welcome you to The Third ACM Workshop on Blockchains, Cryptocurrencies, and Contracts (BCC'19), held in conjunction with The 14th ACM Asia Conference on Computer and Communications Security (AsiaCCS'19) during July 7-12, 2019, at Auckland, New Zealand. Blockchain is an emerging technology currently being used for a variety of applications such as cryptocurrencies and other financial transactions, smart properties, credential management, Internet-of-Things, supply chain management and many more. The theme of this workshop is to understand the foundations of blockchain technology and the design of new blockchain applications using smart contracts.The call for papers attracted 8 submissions from around the world. The program committee accepted 2 full papers and 1 work in progress based on their overall quality and novelty. We are grateful to the authors of all the papers for submitting their work to this workshop. We thank the members of the program committee, external reviewers and the web chairs for their valuable service. We hope these proceedings will serve as a valuable reference for researchers and practitioners in the field of blockchain technologies.},
	publisher = {Association for Computing Machinery},
	year = {2019},
}

@inproceedings{guarnizo_smartwitness_2020,
	address = {New York, NY, USA},
	series = {{BSCI} '20},
	title = {{SmartWitness}: {A} {Proactive} {Software} {Transparency} {System} {Using} {Smart} {Contracts}},
	isbn = {978-1-4503-7610-5},
	url = {https://doi.org/10.1145/3384943.3409428},
	doi = {10.1145/3384943.3409428},
	abstract = {Package managers have become essential for software distribution and management. Their goal is to allow users to install programs, drivers, or updates in their systems in a secure, quick, and often, unattended way. However, in recent years, attackers have found severe flaws in software distribution systems and used them as a stealthy launch pad for malicious software. Moreover, it was proved that actors of the software supply-chain are ineffective in detecting and stopping attacks on user devices.In this paper, we present a design for software distribution systems based on distributed ledgers. By replacing traditional code signing certificates with smart contracts, named SmartWitness, we propose a novel system that provides properties of binary transparency, useful and granular package revocation, and dynamic and proactive security assessment improving risk awareness of end users. SmartWitness keeps all actors transparent and accountable, and it enables security providers to participate earlier in the software distribution process, directly influencing package installations on user devices. We show how SmartWitness is integrated into an existing package manager system, and we present results from conducted experiments indicating that the system is practical as for today.},
	booktitle = {Proceedings of the 2nd {ACM} {International} {Symposium} on {Blockchain} and {Secure} {Critical} {Infrastructure}},
	publisher = {Association for Computing Machinery},
	author = {Guarnizo, Juan and Alangot, Bithin and Szalachowski, Pawel},
	year = {2020},
	note = {event-place: Taipei, Taiwan},
	keywords = {blockchain, smart contract, software distribution system},
	pages = {117--129},
}

@article{andersen_democratizing_2018,
	title = {Democratizing {Authority} in the {Built} {Environment}},
	volume = {14},
	issn = {1550-4859},
	url = {https://doi.org/10.1145/3199665},
	doi = {10.1145/3199665},
	abstract = {Operating systems and applications in the built environment have relied upon central authorization and management mechanisms that restrict their scalability, especially with respect to administrative overhead. We propose a new set of primitives encompassing syndication, security, and service execution that unifies the management of applications and services across the built environment, while enabling participants to individually delegate privilege across multiple administrative domains with no loss of security or manageability. We show how to leverage a decentralized authorization syndication platform to extend the design of building operating systems beyond the single administrative domain of a building. The authorization system leveraged is based on blockchain smart contracts to permit decentralized and democratized delegation of authorization without central trust. Upon this, a publish/subscribe syndication tier and a containerized service execution environment are constructed. Combined, these mechanisms solve problems of delegation, federation, device protection and service execution that arise throughout the built environment. We leverage a high-fidelity city-scale emulation to verify the scalability of the authorization tier, and briefly describe a prototypical democratized operating system for the built environment using this foundation.This is an extension of work presented in Ref.\&nbsp;[3].},
	number = {3–4},
	journal = {ACM Trans. Sen. Netw.},
	author = {Andersen, Michael P. and Kolb, John and Chen, Kaifei and Fierro, Gabe and Culler, David E. and Katz, Randy},
	month = dec,
	year = {2018},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {microservices, federation, syndication, Built environment},
}

@inproceedings{su_disca_2022,
	address = {New York, NY, USA},
	series = {{AISS} '21},
	title = {{DISCA}: {Decentralized} {Infrastructure} for {Secure} {Community} {Attribute} {Certifying}},
	isbn = {978-1-4503-8586-2},
	url = {https://doi.org/10.1145/3503047.3503089},
	doi = {10.1145/3503047.3503089},
	abstract = {Inter-domain routing is the cornerstone of the modern Internet, and the security of inter-domain routing is very important to the reliability and security of Internet basic services. However, BGP protocol, as a current standard inter-domain routing protocol, lacks security considerations at the beginning of its design and does not authenticate routing messages. Because the BGP Community attribute is widely used, researchers have found a variety of new routing attacks using the Community attribute. This kind of attack is more covert and flexible, the detection mechanism is difficult to detect its existence, and the current trusted verification scheme can not completely defend against this kind of attack. In order to solve the above problems, this paper proposes a BGP Community attribute authentication scheme based on blockchain. This scheme authenticates the use of BGP Community attributes based on the blockchain smart contract for the first time. Based on the routing source authentication provided by the routing source authentication mechanism, this scheme further puts forward the concept of "the right to know about using". Through the agent authentication mechanism, it can effectively resist a variety of new routing attacks without changing the existing BGP routing protocol.},
	booktitle = {Proceedings of the 3rd {International} {Conference} on {Advanced} {Information} {Science} and {System}},
	publisher = {Association for Computing Machinery},
	author = {Su, Yi and Wang, Baosheng and Xing, Qianqian and Wang, Xiaofeng},
	year = {2022},
	note = {event-place: Sanya, China},
	keywords = {Blockchain, Community, Inter-domain routing security, Routing attack},
}

@inproceedings{six_using_2022,
	address = {New York, NY, USA},
	series = {{SPLC} '22},
	title = {Using {Software} {Product} {Lines} to {Create} {Blockchain} {Products}: {Application} to {Supply} {Chain} {Traceability}},
	isbn = {978-1-4503-9443-7},
	url = {https://doi.org/10.1145/3546932.3547001},
	doi = {10.1145/3546932.3547001},
	abstract = {In recent years, blockchain has been growing rapidly from a niche technology to a promising solution for many sectors, due to its unique properties that empower the design of innovative applications. Nevertheless, the development of blockchain applications is still a challenge. Due to the technological novelty, only a few developers are familiar with blockchain technologies and smart contracts. Others might face a steep learning curve or difficulties to reuse existing code to build blockchain applications. This study proposes a novel approach to tackle these issues, through software product line engineering. To support the approach, a web platform to configure and generate a blockchain application for on-chain traceability is introduced. First, a feature model has been designed to model core features of the chosen domain, based on the existing literature. Then, a configurator has been implemented to support the feature selection phase. Finally, a generator is able to ingest such configurations to generate on-the-shelf blockchain products. The generalizability of the contribution is validated by reproducing on-chain traceability applications proposed in the literature by using the platform. This work provides the first evidence that the implementation of blockchain applications using software product lines enhances the quality of produced applications and reduces the time to market.},
	booktitle = {Proceedings of the 26th {ACM} {International} {Systems} and {Software} {Product} {Line} {Conference} - {Volume} {A}},
	publisher = {Association for Computing Machinery},
	author = {Six, Nicolas and Herbaut, Nicolas and Lopez-Herrejon, Roberto Erick and Salinesi, Camille},
	year = {2022},
	note = {event-place: Graz, Austria},
	keywords = {blockchain, code generation, software product line},
	pages = {97--107},
}

@inproceedings{mishra_pdv_2021,
	address = {New York, NY, USA},
	series = {{BIOTC} '21},
	title = {{PDV}: {Permissioned} {Blockchain} {Based} {Personal} {Data} {Vault} {Using} {Predictive} {Prefetching}},
	isbn = {978-1-4503-8951-8},
	url = {https://doi.org/10.1145/3475992.3476001},
	doi = {10.1145/3475992.3476001},
	abstract = {We predict that in the not-so-distant future, most if not all documents will no longer be available in paper format. We envision a world in which one can store the entirety of their digital documents not unlike a filing cabinet storing paper documents but with the additional security, safety, and integrity. The vision is encapsulated in our Personal Data Vault (PDV). The PDV is a framework for storing, saving, protecting, and sharing a person’s life-time digital documents in a verifiable secure manner that can ascertain a document’s authenticity and integrity and afford its owner to share it securely. In PDV, each document is encrypted, compressed, and securely stored in the cloud, and indexes are entered in disturbed ledger of a Permissioned Blockchain (Hyperledger Iroha), which significantly prevents data leakage, and the ledger is immutable and tamper-proof to maintain integrity. All access rights are written in the form of an access-list in Smart Contracts, which are later used for verification. We used the concept of predictive prefetching in combination with the Markov tree to design a model that successfully predicts the next (or sequence of next) requests that may occur and pre-executes (execute before the request has occurred)},
	booktitle = {Proceedings of the 2021 3rd {Blockchain} and {Internet} of {Things} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Mishra, Neha and Levkowitz, Haim},
	year = {2021},
	note = {event-place: Ho Chi Minh City, Vietnam},
	keywords = {Access-list, Hyperledger Iroha, Predictive Prefetching, Smart-Contract},
	pages = {59--69},
}

@book{noauthor_bcc_2018,
	address = {New York, NY, USA},
	title = {{BCC} '18: {Proceedings} of the 2nd {ACM} {Workshop} on {Blockchains}, {Cryptocurrencies}, and {Contracts}},
	isbn = {978-1-4503-5758-6},
	abstract = {It is our pleasure to welcome you to The Second ACM Workshop on Blockchains, Cryptocurrencies, and Contracts (BCC'18), held in conjunction with The 13th ACM Asia Conference on Computer and Communications Security (AsiaCCS'18) during June 4-8, 2018, at Songdo, Incheon, Korea. Blockchain is an emerging technology currently being used for a variety of applications such as cryptocurrencies and other financial transactions, smart properties, credential management, Internet-of-Things, supply chain management and many more. The theme of this workshop is to understand the foundations of blockchain technology and the design of new blockchain applications using smart contracts.The call for papers attracted 21 submissions from around the world. The program committee accepted 5 full papers and 2 works in progress based on their overall quality and novelty. Apart from the research papers, there is one keynote talk by Dr Yuen Tsz Hon. We are grateful to the keynote speaker for accepting our invitations and to the authors of all the papers for submitting their work to this workshop. We thank the members of the program committee and external reviewers for their valuable service in evaluating the submissions. We hope these proceedings will serve as a valuable reference for researchers and practitioners in the field of blockchain technologies.},
	publisher = {Association for Computing Machinery},
	year = {2018},
}

@book{noauthor_bcc_2017,
	address = {New York, NY, USA},
	title = {{BCC} '17: {Proceedings} of the {ACM} {Workshop} on {Blockchain}, {Cryptocurrencies} and {Contracts}},
	isbn = {978-1-4503-4974-1},
	abstract = {It is our pleasure to welcome you to The 1st ACM Workshop on Blockchain, Cryptocurrencies and Contracts (BCC'17) held in conjunction with The 12th ACM Asia Conference on Computer and Communications Security (AsiaCCS'17) during April 2-6, at Abu Dhabi, UAE. Blockchain is an emerging technology currently being used for a variety of applications such as cryptocurrencies and other financial transactions, smart properties, credential management, Internet-of-Things, supply chain management and many more. The theme of this workshop is to understand the foundations of blockchain technology and the design of new blockchain applications using smart contracts.The call for papers attracted 17 submissions from Asia, Europe, and North America. The program committee accepted 5 papers based on their overall quality and novelty. Apart from the research papers, there are two keynote talks by Dr. Juan Garay and Dr. Marko Vukolic. We are grateful to the keynote speakers for accepting our invitations and to the authors of all the papers for submitting their work to this workshop. We thank the members of the program committee and external reviewers for their valuable service in evaluating the submissions. We hope these proceedings will serve as a valuable reference for researchers and practitioners in the field of blockchain technologies.},
	publisher = {Association for Computing Machinery},
	year = {2017},
}

@inproceedings{desai_blockfla_2021,
	address = {New York, NY, USA},
	series = {{CODASPY} '21},
	title = {{BlockFLA}: {Accountable} {Federated} {Learning} via {Hybrid} {Blockchain} {Architecture}},
	isbn = {978-1-4503-8143-7},
	url = {https://doi.org/10.1145/3422337.3447837},
	doi = {10.1145/3422337.3447837},
	abstract = {Federated Learning (FL) is a distributed, and decentralized machine learning protocol. By executing FL, a set of agents can jointly train a model without sharing their datasets with each other, or a third-party. This makes FL particularly suitable for settings where data privacy is desired.At the same time, concealing training data gives attackers an opportunity to inject backdoors into the trained model. It has been shown that an attacker can inject backdoors to the trained model during FL, and then can leverage the backdoor to make the model misclassify later. Several works tried to alleviate this threat by designing robust aggregation functions. However, given more sophisticated attacks are developed over time, which by-pass the existing defenses, we approach this problem from a complementary angle in this work. Particularly, we aim to discourage backdoor attacks by detecting, and punishing the attackers, possibly after the end of training phase.To this end, we develop a hybrid blockchain-based FL framework that uses smart contracts to automatically detect, and punish the attackers via monetary penalties. Our framework is general in the sense that, any aggregation function, and any attacker detection algorithm can be plugged into it. We conduct experiments to demonstrate that our framework preserves the communication-efficient nature of FL, and provide empirical results to illustrate that it can successfully penalize attackers by leveraging our novel attacker detection algorithm.},
	booktitle = {Proceedings of the {Eleventh} {ACM} {Conference} on {Data} and {Application} {Security} and {Privacy}},
	publisher = {Association for Computing Machinery},
	author = {Desai, Harsh Bimal and Ozdayi, Mustafa Safa and Kantarcioglu, Murat},
	year = {2021},
	note = {event-place: Virtual Event, USA},
	keywords = {ethereum, hyperledger, backdoor attacks, federated averaging, federated learning, hybrid blockchain, machine learning},
	pages = {101--112},
}

@inproceedings{hu_reputation-based_2018,
	address = {New York, NY, USA},
	series = {{MobiQuitous} '18},
	title = {Reputation-{Based} {Distributed} {Knowledge} {Sharing} {System} in {Blockchain}},
	isbn = {978-1-4503-6093-7},
	url = {https://doi.org/10.1145/3286978.3286981},
	doi = {10.1145/3286978.3286981},
	abstract = {Extensive online knowledge sharing can be exploited to solve tasks better, faster and cheaper, and it garners considerable interest in institutional cooperation, learning communities, etc., while many technical problems, such as fair exchange in incentive design and security issues are waiting to be solved. Blockchain technique has high accountability and thus has potential to improve the transparency and security of knowledge sharing. In this paper, to address the above problems, first we propose a Reputation Based Knowledge Sharing system in blockchain, called RBKS. The aim of RBKS is to exploit the copyright protection of the knowledge owner using our proposed fine-grained access control system, and to achieve the paid-for content service which allows bystanders who are interested in the shared knowledge to pay a small fee for the access. Second, a reputation evaluation algorithm is introduced as the core of the incentive, and it may possibly be combined with stake in blockchain to form a hybrid stake for the RBKS system. Third, a blockchain and a trusted storage server are employed together for sharing and storing knowledge, and the main procedures are implemented with smart contract in blockchain to ensure secure execution and fairness. Finally, our analysis shows that the RBKS system is feasible and secure.},
	booktitle = {Proceedings of the 15th {EAI} {International} {Conference} on {Mobile} and {Ubiquitous} {Systems}: {Computing}, {Networking} and {Services}},
	publisher = {Association for Computing Machinery},
	author = {Hu, Shuang and Hou, Lin and Chen, Gongliang and Weng, Jian and Li, Jianhua},
	year = {2018},
	note = {event-place: New York, NY, USA},
	keywords = {blockchain, smart contract, access control, Knowledge sharing, reputation},
	pages = {476--481},
}

@inproceedings{androulaki_hyperledger_2018,
	address = {New York, NY, USA},
	series = {{EuroSys} '18},
	title = {Hyperledger {Fabric}: {A} {Distributed} {Operating} {System} for {Permissioned} {Blockchains}},
	isbn = {978-1-4503-5584-1},
	url = {https://doi.org/10.1145/3190508.3190538},
	doi = {10.1145/3190508.3190538},
	abstract = {Fabric is a modular and extensible open-source system for deploying and operating permissioned blockchains and one of the Hyperledger projects hosted by the Linux Foundation (www.hyperledger.org).Fabric is the first truly extensible blockchain system for running distributed applications. It supports modular consensus protocols, which allows the system to be tailored to particular use cases and trust models. Fabric is also the first blockchain system that runs distributed applications written in standard, general-purpose programming languages, without systemic dependency on a native cryptocurrency. This stands in sharp contrast to existing block-chain platforms that require "smart-contracts" to be written in domain-specific languages or rely on a cryptocurrency. Fabric realizes the permissioned model using a portable notion of membership, which may be integrated with industry-standard identity management. To support such flexibility, Fabric introduces an entirely novel blockchain design and revamps the way blockchains cope with non-determinism, resource exhaustion, and performance attacks.This paper describes Fabric, its architecture, the rationale behind various design decisions, its most prominent implementation aspects, as well as its distributed application programming model. We further evaluate Fabric by implementing and benchmarking a Bitcoin-inspired digital currency. We show that Fabric achieves end-to-end throughput of more than 3500 transactions per second in certain popular deployment configurations, with sub-second latency, scaling well to over 100 peers.},
	booktitle = {Proceedings of the {Thirteenth} {EuroSys} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Androulaki, Elli and Barger, Artem and Bortnikov, Vita and Cachin, Christian and Christidis, Konstantinos and De Caro, Angelo and Enyeart, David and Ferris, Christopher and Laventman, Gennady and Manevich, Yacov and Muralidharan, Srinivasan and Murthy, Chet and Nguyen, Binh and Sethi, Manish and Singh, Gari and Smith, Keith and Sorniotti, Alessandro and Stathakopoulou, Chrysoula and Vukolić, Marko and Cocco, Sharon Weed and Yellick, Jason},
	year = {2018},
	note = {event-place: Porto, Portugal},
}

@article{xu_l2chain_2022,
	title = {L2chain: {Towards} {High}-{Performance}, {Confidential} and {Secure} {Layer}-2 {Blockchain} {Solution} for {Decentralized} {Applications}},
	volume = {16},
	issn = {2150-8097},
	url = {https://doi.org/10.14778/3574245.3574278},
	doi = {10.14778/3574245.3574278},
	abstract = {With the rapid development of blockchain, the concept of decentralized applications (DApps), built upon smart contracts, has attracted much attention in academia and industry. However, significant issues w.r.t. system throughput, transaction confidentiality, and the security guarantee of the DApp transaction execution and order correctness hinder the border adoption of blockchain DApps.To address these issues, we propose L2chain, a novel blockchain framework aiming to scale the system through a layer-2 network where DApps process transactions in the layer-2 network and only the system state digest, acting as the state integrity proof, is maintained on-chain. To achieve high performance, we introduce the split-execute-merge (SEM) transaction processing workflow with the help of the RSA accumulator, allowing DApps to lock and update a part of the state digest in parallel. We also design a witness cache mechanism for DApp executors to reduce the transaction processing latency. To fulfill confidentiality, we leverage the trusted execution environment (TEE) for DApps to execute encrypted transactions off-chain. To ensure transaction execution and order correctness, we propose a two-step execution process for DApps to prevent attacks (i.e., rollback attacks) from subverting the state transition. Extensive experiments have demonstrated that L2chain can achieve 1.5X to 42.2X and 7.1X to 8.9X throughput improvements in permissioned and permissionless settings respectively.},
	number = {4},
	journal = {Proc. VLDB Endow.},
	author = {Xu, Zihuan and Chen, Lei},
	month = dec,
	year = {2022},
	note = {Publisher: VLDB Endowment},
	pages = {986--999},
}

@article{xu_slimchain_2021,
	title = {{SlimChain}: {Scaling} {Blockchain} {Transactions} through off-{Chain} {Storage} and {Parallel} {Processing}},
	volume = {14},
	issn = {2150-8097},
	url = {https://doi.org/10.14778/3476249.3476283},
	doi = {10.14778/3476249.3476283},
	abstract = {Blockchain technology has emerged as the cornerstone of many decentralized applications operating among otherwise untrusted peers. However, it is well known that existing blockchain systems do not scale well. Transactions are often executed and committed sequentially in order to maintain the same view of the total order. Furthermore, it is necessary to duplicate both transaction data and their executions in every node in the blockchain network for integrity assurance. Such storage and computation requirements put significant burdens on the blockchain system, not only limiting system scalability but also undermining system security and robustness by making the network more centralized. To tackle these problems, in this paper, we propose SlimChain, a novel blockchain system that scales transactions through off-chain storage and parallel processing. Advocating a stateless design, SlimChain maintains only the short commitments of ledger states on-chain while dedicating transaction executions and data storage to off-chain nodes. To realize SlimChain, we propose new schemes for off-chain smart contract execution, on-chain transaction validation, and state commitment. We also propose optimizations to reduce network transmissions and a new sharding technique to improve system scalability further. Extensive experiments are conducted to validate the performance of the proposed SlimChain system. Compared with the existing systems, SlimChain reduces the on-chain storage requirements by 97\% 99\%, while also improving the peak throughput by 1.4× 15.6×.},
	number = {11},
	journal = {Proc. VLDB Endow.},
	author = {Xu, Cheng and Zhang, Ce and Xu, Jianliang and Pei, Jian},
	month = jul,
	year = {2021},
	note = {Publisher: VLDB Endowment},
	pages = {2314--2326},
}

@inproceedings{marchesi_agile_2018,
	address = {New York, NY, USA},
	series = {{CEE}-{SECR} '18},
	title = {An {Agile} {Software} {Engineering} {Method} to {Design} {Blockchain} {Applications}},
	isbn = {978-1-4503-6176-7},
	url = {https://doi.org/10.1145/3290621.3290627},
	doi = {10.1145/3290621.3290627},
	abstract = {Cryptocurrencies and their foundation technology, the Blockchain, are reshaping finance and economics, allowing a decentralized approach enabling trusted applications with no trusted counterpart. More recently, the Blockchain and the programs running on it, called Smart Contracts, are also finding more and more applications in all fields requiring trust and sound certifications. Some people have come to the point of saying that the "Blockchain revolution" can be compared to that of the Internet and the Web in their early days. As a result, all the software development revolving around the Blockchain technology is growing at a staggering rate. The feeling of many software engineers about such huge interest in Blockchain technologies is that of unruled and hurried software development, a sort of competition on a first-come-first-served basis which does not assure neither software quality, nor that the basic concepts of software engineering are taken into account.This paper tries to cope with this issue, proposing a software development process to gather the requirement, analyze, design, develop, test and deploy Blockchain applications. The process is based on several Agile practices, such as User Stories and iterative and incremental development based on them. However, it makes also use of more formal notations, such as some UML diagrams describing the design of the system, with additions to represent specific concepts found in Blockchain development. The method is described in good detail, and an example is given to show how it works.},
	booktitle = {Proceedings of the 14th {Central} and {Eastern} {European} {Software} {Engineering} {Conference} {Russia}},
	publisher = {Association for Computing Machinery},
	author = {Marchesi, Michele and Marchesi, Lodovica and Tonelli, Roberto},
	year = {2018},
	note = {event-place: Moscow, Russian Federation},
	keywords = {Blockchain, Smart Contracts, UML, Blockchain-oriented software engineering, dApp design},
}

@inproceedings{chen_application_2021,
	address = {New York, NY, USA},
	series = {{EITCE} '20},
	title = {Application of {Homomorphic} {Encryption} in {Blockchain} {Data} {Security}},
	isbn = {978-1-4503-8781-1},
	url = {https://doi.org/10.1145/3443467.3443754},
	doi = {10.1145/3443467.3443754},
	abstract = {With the continuous development of the Internet era, people's demand for network security is increasingly high, information is an essential component of the network, which implies numerous privacy, secrets, but also contains a large number of value, thus generating a multiparty trust issues of data security. Blockchain technology itself is still in the early stages of rapid development, the existing blockchain system in the design and implementation of the use of distributed systems, cryptography, game theory, network protocols and many other disciplines, for learning the principles and practical applications have brought considerable challenges. The blockchain, with its decentralized quality, quickly captures the attention of the public and solves many security problems derived from data security, thus attracting wide attention from people. In recent years, along with the increasing maturity of homomorphic encryption technology and push new, it is more and more people's favour and attention.Homomorphic encryption is an encryption technology that provides the ability to perform various operations on data in an encrypted state without compromising its confidentiality. Its concern is the security of data processing. That is, others can process the encrypted data, but the process does not reveal any of the original content. Also, the user who has the Key decrypts the processed data and gets the result of the processing precisely.The main encryption technique used in blockchain applications is the RSA encryption algorithm, [1] which is used to ensure that the user's private key is not compromised, but no project has been noticed about the homomorphic encryption method for smart contracts. [2] The purpose of this paper is to analyze the principle of homomorphic encryption and discuss its practical application in data security in combination with blockchain technology.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Electronic} {Information} {Technology} and {Computer} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Chen, Jingjing and You, Fucheng},
	year = {2021},
	note = {event-place: Xiamen, China},
	keywords = {Blockchain technology, Data security, Homomorphic encryption},
	pages = {205--209},
}

@inproceedings{ryabov_decentralized_2022,
	address = {New York, NY, USA},
	series = {{SPBPU} {IDE} '21},
	title = {Decentralized {Finance} ({DEFI}) as the {Basis} for the {Transformation} of the {Financial} {Sector} of the {Future}},
	isbn = {978-1-4503-8694-4},
	url = {https://doi.org/10.1145/3527049.3527080},
	doi = {10.1145/3527049.3527080},
	abstract = {The paper discusses the influence exerted by financial systems on the change of the financial sector and its further development. The study is relevant since there is need for building up more trust in blockchain. In the course of the research, the main trends of decentralized financial systems were identified and presented, including the problems related to decentralized financial systems and options for resolving them. The study is aimed at defining the problems and searching for ways to tackle them when regulating decentralized finances (DeFi) in order to ensure effective regulation on the part of the Central Bank and control risks. Rather than eliminating the need for regulation, DeFi, in fact, has to be regulated so as to achieve its main decentralization goal. In addition, DeFi presents a potential possibility for developing a fairly new regulation method: the idea of “integrated regulation”. The paper considers various approaches to regulation, which can be integrated in the DeFi design. It can potentially lead to the decentralization of both finance and its regulation, which eventually expresses RegTech (Regulatory Technology), which is used by financial organizations for being able to meet the requirements of the regulator more easily. The study defines the problems that are encountered in the course of using DeFi and points out the possible ways for dealing with them, including a way for switching to blockchain independently so that the transaction is not charged in ETH for calculation on blockchain; reducing the complexity and costs of use and understanding of DeFi software by most users. A whole lot of risks that decentralized financial protocols are susceptible to is analyzed: vulnerabilities in the code security of smart contracts, their stacking and layout; oracle risk, which is subject to manipulation in the process of data transfer; the financial risk of high volatility, regulatory risk and crisis of the global economy due to the inability to predict in which way the Covid-19 pandemic is going to be resolved.},
	booktitle = {Proceedings of the 3rd {International} {Scientific} {Conference} on {Innovations} in {Digital} {Economy}},
	publisher = {Association for Computing Machinery},
	author = {Ryabov, Oleg and Golubev, Artem and Goncharova, Natalia},
	year = {2022},
	note = {event-place: Saint - Petersburg, Russian Federation},
	keywords = {blockchain, cryptocurrency, currency, decentralized financial system, finance, financial sector},
	pages = {387--394},
}

@article{pacheco_is_2022,
	title = {Is {My} {Transaction} {Done} yet? {An} {Empirical} {Study} of {Transaction} {Processing} {Times} in the {Ethereum} {Blockchain} {Platform}},
	issn = {1049-331X},
	url = {https://doi.org/10.1145/3549542},
	doi = {10.1145/3549542},
	abstract = {Ethereum is one of the most popular platforms for the development of blockchain-powered applications. These applications are known as ÐApps. When engineering ÐApps, developers need to translate requests captured in the front-end of their application into one or more smart contract transactions. Developers need to pay for these transactions and, the more they pay (i.e., the higher the gas price), the faster the transaction is likely to be processed. Developing cost-effective ÐApps is far from trivial, as developers need to optimize the balance between cost (transaction fees) and user experience (transaction processing times). Online services have been developed to provide transaction issuers (e.g., ÐApp developers) with an estimate of how long transactions will take to be processed given a certain gas price. These estimation services are crucial in the Ethereum domain and several popular wallets such as Metamask rely on them. However, despite their key role, their accuracy has not been empirically investigated so far. In this paper, we quantify the transaction processing times in Ethereum, investigate the relationship between processing times and gas prices, and determine the accuracy of state-of-the-practice estimation services. Our results indicate that transactions are processed in a median of 57s and that 90\% of the transactions are processed within 8m. We also show that higher gas prices result in faster transaction processing times with diminishing returns. In particular, we observe no practical difference in processing time between expensive and very expensive transactions. With regards to the accuracy of processing time estimation services, we observe that they are equivalent. However, when stratifying transactions by gas prices, we observe that Etherscan’s Gas Tracker is the most accurate estimation service for very cheap and cheap transaction. EthGasStation’s Gas Price API, in turn, is the most accurate estimation service for regular, expensive, and very expensive transactions. In a post-hoc study, we design a simple linear regression model with only one feature that outperforms the Gas Tracker for very cheap and cheap transactions and that performs as accurately as the EthGasStation model for the remaining categories. Based on our findings, ÐApp developers can make more informed decisions concerning the choice of the gas price of their application-issued transactions.},
	journal = {ACM Trans. Softw. Eng. Methodol.},
	author = {Pacheco, Michael and Oliva, Gustavo A. and Rajbahadur, Gopi Krishnan and Hassan, Ahmed E.},
	month = jul,
	year = {2022},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {Blockchain, Ethereum, Decentralized Applications (DApps), Transaction Processing Time},
	annote = {Just Accepted},
}
