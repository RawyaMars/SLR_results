Scopus
EXPORT DATE: 30 March 2023

@ARTICLE{Zhang2022,
	author = {Zhang, Yujian and Liu, Daifu},
	title = {Toward Vulnerability Detection for Ethereum Smart Contracts Using Graph-Matching Network},
	year = {2022},
	journal = {Future Internet},
	volume = {14},
	number = {11},
	doi = {10.3390/fi14110326},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147411558&doi=10.3390%2ffi14110326&partnerID=40&md5=6170681772b53722d0bebb4332e655c7},
	abstract = {With the blooming of blockchain-based smart contracts in decentralized applications, the security problem of smart contracts has become a critical issue, as vulnerable contracts have resulted in severe financial losses. Existing research works have explored vulnerability detection methods based on fuzzing, symbolic execution, formal verification, and static analysis. In this paper, we propose two static analysis approaches called ASGVulDetector and BASGVulDetector for detecting vulnerabilities in Ethereum smart contacts from source-code and bytecode perspectives, respectively. First, we design a novel intermediate representation called abstract semantic graph (ASG) to capture both syntactic and semantic features from the program. ASG is based on syntax information but enriched by code structures, such as control flow and data flow. Then, we apply two different training models, i.e., graph neural network (GNN) and graph matching network (GMN), to learn the embedding of ASG and measure the similarity of the contract pairs. In this way, vulnerable smart contracts can be identified by calculating the similarity to labeled ones. We conduct extensive experiments to evaluate the superiority of our approaches to state-of-the-art competitors. Specifically, ASGVulDetector improves the best of three source-code-only static analysis tools (i.e., SmartCheck, Slither, and DR-GCN) regarding the F1 score by 12.6% on average, while BASGVulDetector improves that of the three detection tools supporting bytecode (i.e., ContractFuzzer, Oyente, and Securify) regarding the F1 score by 25.6% on average. We also investigate the effectiveness and advantages of the GMN model for detecting vulnerabilities in smart contracts. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Ait Hsain2021785,
	author = {Ait Hsain, Yassine and Laaz, Naziha and Mbarki, Samir},
	title = {Ethereum's smart contracts construction and development using model driven engineering technologies: A review},
	year = {2021},
	journal = {Procedia Computer Science},
	volume = {184},
	pages = {785 – 790},
	doi = {10.1016/j.procs.2021.03.097},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106711522&doi=10.1016%2fj.procs.2021.03.097&partnerID=40&md5=12052d646e73ca9cccc1c97d44e6bb66},
	abstract = {In the Blockchain context, Smart Contracts are computer programs that run on the Ethereum platform. Benefiting from the properties of Blockchain, SCs development represents a major challenge to developers, as the code is deployed to an immutable system, besides the Ethereum platform is still evolving. This paper highlights how we can exploit model-driven engineering for generating long terms and high productivity smart contracts. It reviews researches on Smart Contracts generation in the Ethereum blockchain from a model-driven perspective. Based on the studied approaches, we defined a comparative framework to outline the advantages and disadvantages of each approach. The result can be used as a basis of tool selection for specific development aspects of SCs. © 2021 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Gold Open Access}
}

@CONFERENCE{De Brito Goncalves2020532,
	author = {De Brito Goncalves, Joao Paulo and Lima Gomes, Roberta and Da Silva Villaca, Rodolfo and Municio, Esteban and Marquez-Barja, Johann},
	title = {A Quality of Service Compliance System Empowered by Smart Contracts and Oracles},
	year = {2020},
	journal = {Proceedings - 2020 IEEE International Conference on Blockchain, Blockchain 2020},
	pages = {532 – 538},
	doi = {10.1109/Blockchain50366.2020.00077},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099251207&doi=10.1109%2fBlockchain50366.2020.00077&partnerID=40&md5=2d625ac55a52615484dee16f5178b800},
	abstract = {Service Level Agreements (SLAs) are used in contracts between two parts, which can be, as an example, between service providers or between customers and service providers. SLA clauses represent key aspects in the relationship between them. In order to enforce service reliability and SLA compliance, a continuous monitoring of Quality of Service metrics is required. Since policy breach is usually subject to expensive penalties, using external entities acting as trustful references is a common practice in order to avoid frequent legal disputes, external entities are usually required to verify it. However, coordination between different actors to agree in one transaction is difficult, because it can open up possibilities for multiple fraud attempts. We argue that this can be done more efficiently using Smart Contracts, programs that are executed in a blockchain. Such data is stored in a distributed structure without the need of an external entity to ensure data integrity and reliability. Smart contracts can also makes easy the charging or possibly compensating SLA violations. In this paper we propose a solution empowered by smart contracts in order to simplify, and to automate the process of SLA validation, i.e, verify if the contract is being respected. We perform some experiments and evaluate a proof of concept using data from a real network infrastructure in Brazil.  © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@CONFERENCE{Huitzil2020,
	author = {Huitzil, Ignacio and Fuentemilla, Alvaro and Bobillo, Fernando},
	title = {I can get some satisfaction: Fuzzy ontologies for partial agreements in blockchain smart contracts},
	year = {2020},
	journal = {IEEE International Conference on Fuzzy Systems},
	volume = {2020-July},
	doi = {10.1109/FUZZ48607.2020.9177732},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85090496303&doi=10.1109%2fFUZZ48607.2020.9177732&partnerID=40&md5=8cef2b80f0f407abad04d66820ad5236},
	abstract = {This paper proposes a novel extension of blockchain systems with fuzzy ontologies. The main advantage is to let the users have flexible restrictions, represented using fuzzy sets, and to develop smart contracts where there is a partial agreement among the involved parts. We propose a general architecture based on four fuzzy ontologies and a process to develop and run the smart contracts, based on a reduction to a well-known fuzzy ontology reasoning task (Best Satisfiability Degree). We also investigate different operators to compute Pareto-optimal solutions and implement our approach in the Ethereum blockchain. © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@CONFERENCE{Schneidewind2020621,
	author = {Schneidewind, Clara and Grishchenko, Ilya and Scherer, Markus and Maffei, Matteo},
	title = {EThor: Practical and Provably Sound Static Analysis of Ethereum Smart Contracts},
	year = {2020},
	journal = {Proceedings of the ACM Conference on Computer and Communications Security},
	pages = {621 – 640},
	doi = {10.1145/3372297.3417250},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096182861&doi=10.1145%2f3372297.3417250&partnerID=40&md5=41e1460fca4f060d5867a9114ad1bcd8},
	abstract = {Ethereum has emerged as the most popular smart contract platform, with hundreds of thousands of contracts stored on the blockchain and covering diverse application scenarios, such as auctions, trading platforms, or elections. Given the financial nature of smart contracts, security vulnerabilities may lead to catastrophic consequences and, even worse, can hardly be fixed as data stored on the blockchain, including the smart contract code itself, are immutable. An automated security analysis of these contracts is thus of utmost interest, but at the same time technically challenging. This is as e.g., Ethereum's transaction-oriented programming mechanisms feature a subtle semantics, and since the blockchain data at execution time, including the code of callers and callees, are not statically known. In this work, we present eThor, the first sound and automated static analyzer for EVM bytecode, which is based on an abstraction of the EVM bytecode semantics based on Horn clauses. In particular, our static analysis supports reachability properties, which we show to be sufficient for capturing interesting security properties for smart contracts (e.g., single-entrancy) as well as contract-specific functional properties. Our analysis is proven sound against a complete semantics of EVM bytecode, and a large-scale experimental evaluation on real-world contracts demonstrates that eThor is practical and outperforms the state-of-the-art static analyzers: specifically, eThor is the only one to provide soundness guarantees, terminates on 94% of a representative set of real-world contracts, and achieves an F-measure (which combines sensitivity and specificity) of 89%. © 2020 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 34; All Open Access, Bronze Open Access}
}

@ARTICLE{Smaragdakis2021,
	author = {Smaragdakis, Yannis and Grech, Neville and Lagouvardos, Sifis and Triantafyllou, Konstantinos and Tsatiris, Ilias},
	title = {Symbolic value-flow static analysis: Deep, precise, complete modeling of Ethereum smart contracts},
	year = {2021},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {5},
	number = {OOPSLA},
	doi = {10.1145/3485540},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85117604236&doi=10.1145%2f3485540&partnerID=40&md5=c81af8950d6c8411927c4663b8fc77d4},
	abstract = {We present a static analysis approach that combines concrete values and symbolic expressions. This symbolic value-flow ("symvalic") analysis models program behavior with high precision, e.g., full path sensitivity. To achieve deep modeling of program semantics, the analysis relies on a symbiotic relationship between a traditional static analysis fixpoint computation and a symbolic solver: the solver does not merely receive a complex "path condition"to solve, but is instead invoked repeatedly (often tens or hundreds of thousands of times), in close cooperation with the flow computation of the analysis. The result of the symvalic analysis architecture is a static modeling of program behavior that is much more complete than symbolic execution, much more precise than conventional static analysis, and domain-agnostic: no special-purpose definition of anti-patterns is necessary in order to compute violations of safety conditions with high precision. We apply the analysis to the domain of Ethereum smart contracts. This domain represents a fundamental challenge for program analysis approaches: despite numerous publications, research work has not been effective at uncovering vulnerabilities of high real-world value. In systematic comparison of symvalic analysis with past tools, we find significantly increased completeness (shown as 83-96% statement coverage and more true error reports) combined with much higher precision, as measured by rate of true positive reports. In terms of real-world impact, since the beginning of 2021, the analysis has resulted in the discovery and disclosure of several critical vulnerabilities, over funds in the many millions of dollars. Six separate bug bounties totaling over $350K have been awarded for these disclosures.  © 2021 Owner/Author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Bronze Open Access}
}

@ARTICLE{Buccafurri2022,
	author = {Buccafurri, Francesco and De Angelis, Vincenzo and Lazzaro , Sara},
	title = {A Blockchain-Based Framework to Enhance Anonymous Services with Accountability Guarantees},
	year = {2022},
	journal = {Future Internet},
	volume = {14},
	number = {8},
	doi = {10.3390/fi14080243},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85136663479&doi=10.3390%2ffi14080243&partnerID=40&md5=b1ba18bf44b3a566fb95222dad6a906e},
	abstract = {Anonymous service delivery has attracted the interest of research and the industry for many decades. To obtain effective solutions, anonymity should be guaranteed against the service provider itself. However, if the full anonymity of users is implemented, no accountability mechanism can be provided. This represents a problem, especially when referring to scenarios in which a user, protected by anonymity, may perform illegally when leveraging the anonymous service. In this paper, we propose a blockchain-based solution to the trade-off between anonymity and accountability. In particular, our solution relies on three independent parties (one of which is the service provider itself) such that only the collaboration of all three actors allows for the disclosure of the real identity of the user. In all other cases, anonymity is guaranteed. To show the feasibility of the proposal, we developed a prototype with user-friendly interfaces that minimize the client-side operations. Our solution is then also effective from the point of view of usability. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@ARTICLE{Van Der Meyden20223101,
	author = {Van Der Meyden, Ron},
	title = {A Formal Treatment of Contract Signature},
	year = {2022},
	journal = {IEEE Transactions on Services Computing},
	volume = {15},
	number = {6},
	pages = {3101 – 3114},
	doi = {10.1109/TSC.2021.3101833},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112655642&doi=10.1109%2fTSC.2021.3101833&partnerID=40&md5=408e3a8568a627ae226845a894db7687},
	abstract = {The article develops a logical understanding of processes for signature of legal contracts, motivated by applications to legal recognition of smart contracts on blockchain platforms. A number of axioms and rules of inference are developed that can be used to justify a 'meeting of the minds' precondition for contract formation from the fact that certain content has been signed. In addition to an 'offer and acceptance' process, the article considers 'signature in counterparts', a legal process that permits a contract between two or more parties to be brought into force by having the parties independently (possibly, remotely) sign different copies of the contract, rather than placing their signatures on a common copy at a physical meeting. It is argued that a satisfactory account of signature in counterparts benefits from a logic with syntactic self-reference. The axioms used are supported by a formal semantics, and a number of further properties of the logic are investigated. In particular, it is shown that the logic implies that when a contract has been signed, the parties do not just agree, but are in mutual agreement (a common-knowledge-like notion) about the terms of the contract.  © 2008-2012 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Annenkov2022,
	author = {Annenkov, Danil and Milo, Mikkel and Nielsen, Jakob Botsch and Spitters, B.A.S.},
	title = {Extracting functional programs from Coq, in Coq},
	year = {2022},
	journal = {Journal of Functional Programming},
	volume = {32},
	number = {5},
	doi = {10.1017/S0956796822000077},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85137172418&doi=10.1017%2fS0956796822000077&partnerID=40&md5=55327e92b54e2c3c95f25201df8e2de9},
	abstract = {We implement extraction of Coq programs to functional languages based on MetaCoq's certified erasure. We extend the MetaCoq erasure output language with typing information and use it as an intermediate representation, which we call. We complement the extraction functionality with a full pipeline that includes several standard transformations (e.g. eta-expansion and inlining) implemented in a proof-generating manner along with a verified optimisation pass removing unused arguments. We prove the pass correct wrt. a conventional call-by-value operational semantics of functional languages. From the optimised representation, we obtain code in two functional smart contract languages, Liquidity and CameLIGO, the functional language Elm, and a subset of the multi-paradigm language for systems programming Rust. Rust is currently gaining popularity as a language for smart contracts, and we demonstrate how our extraction can be used to extract smart contract code for the Concordium network. The development is done in the context of the ConCert framework that enables smart contract verification. We contribute with two verified real-world smart contracts (boardroom voting and escrow), which we use, among other examples, to exemplify the applicability of the pipeline. In addition, we develop a verified web application and extract it to fully functional Elm code. In total, this gives us a way to write dependently typed programs in Coq, verify, and then extract them to several target languages while retaining a small trusted computing base of only MetaCoq and the pretty-printers into these languages.  © },
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Khan2022537,
	author = {Khan, Kashif Mehboob and Arshad, Junaid and Iqbal, Waheed and Abdullah, Sidrah and Zaib, Hassan},
	title = {Blockchain-enabled real-time SLA monitoring for cloud-hosted services},
	year = {2022},
	journal = {Cluster Computing},
	volume = {25},
	number = {1},
	pages = {537 – 559},
	doi = {10.1007/s10586-021-03416-y},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85116391534&doi=10.1007%2fs10586-021-03416-y&partnerID=40&md5=de1b088377cd1979f8e97c69971330ec},
	abstract = {Cloud computing is an important technology for businesses and individual users to obtain computing resources over the Internet on-demand and flexibly. Although cloud computing has been adopted across diverse applications, the owners of time-and-performance critical applications require cloud service providers’ guarantees about their services, such as availability and response times. Service Level Agreements (SLAs) are a mechanism to communicate and enforce such guarantees typically represented as service level objectives (SLOs), and financial penalties are imposed on SLO violations. Due to delays and inaccuracies caused by manual processing, an automatic method to periodically verify SLA terms in a transparent and trustworthy manner is fundamental to effective SLA monitoring, leading to the acceptance and credibility of such service to the customers of cloud services. This paper presents a blockchain-based distributed infrastructure that leverages fundamental blockchain properties to achieve immutable and trustworthy SLA monitoring within cloud services. The paper carries out an in-depth empirical investigation for the scalability of the proposed system in order to address the challenge of transparently enforcing real-time monitoring of cloud-hosted services leveraging blockchain technology. This will enable all the stakeholders to enforce accurate execution of SLA without any imprecisions and delays by maintaining an immutable ledger publicly across blockchain network. The experimentation takes into consideration several attributes of blockchain which are critical in achieving optimum performance. The paper also investigates key characteristics of these factors and their impact to the behaviour of the system for further scaling it up under various cases for increased service utilization. © 2021, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Avigad2022153,
	author = {Avigad, Jeremy and Goldberg, Lior and Levit, David and Seginer, Yoav and Titelman, Alon},
	title = {A verified algebraic representation of cairo program execution},
	year = {2022},
	journal = {CPP 2022 - Proceedings of the 11th ACM SIGPLAN International Conference on Certified Programs and Proofs, co-located with POPL 2022},
	pages = {153 – 165},
	doi = {10.1145/3497775.3503675},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124047164&doi=10.1145%2f3497775.3503675&partnerID=40&md5=b9806ac7c4c3e7947b80a5c8db0963b5},
	abstract = {Cryptographic interactive proof systems provide an efficient and scalable means of verifying the results of computation on blockchain. A prover constructs a proof, off-chain, that the execution of a program on a given input terminates with a certain result. The prover then publishes a certificate that can be verified efficiently and reliably modulo commonly accepted cryptographic assumptions. The method relies on an algebraic encoding of execution traces of programs. Here we report on a verification of the correctness of such an encoding of the Cairo model of computation with respect to the STARK interactive proof system, using the Lean 3 proof assistant.  © 2022 Owner/Author.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access, Green Open Access}
}

@CONFERENCE{Genovese202151,
	author = {Genovese, Fabrizio Romano and Herold, Jelle and Loregian, Fosco and Palombi, Daniele},
	title = {A Categorical Semantics for Hierarchical Petri Nets},
	year = {2021},
	journal = {Electronic Proceedings in Theoretical Computer Science, EPTCS},
	volume = {350},
	pages = {51 – 68},
	doi = {10.4204/eptcs.350.4},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85122281759&doi=10.4204%2feptcs.350.4&partnerID=40&md5=46ea13b6e1d12b34b8cd2a99122bde9d},
	abstract = {We show how a particular variety of hierarchical nets, where the firing of a transition in the parent net must correspond to an execution in some child net, can be modelled utilizing a functorial semantics from a free category – representing the parent net – to the category of sets and spans between them. This semantics can be internalized via Grothendieck construction, resulting in the category of executions of a Petri net representing the semantics of the overall hierarchical net. We conclude the paper by giving an engineering-oriented overview of how our model of hierarchical nets can be implemented in a transaction-based smart contract environment. © 2021 Open Publishing Association. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Zheng2020475,
	author = {Zheng, Zibin and Xie, Shaoan and Dai, Hong-Ning and Chen, Weili and Chen, Xiangping and Weng, Jian and Imran, Muhammad},
	title = {An overview on smart contracts: Challenges, advances and platforms},
	year = {2020},
	journal = {Future Generation Computer Systems},
	volume = {105},
	pages = {475 – 491},
	doi = {10.1016/j.future.2019.12.019},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076675572&doi=10.1016%2fj.future.2019.12.019&partnerID=40&md5=f5d402f40ec5c201a911ef05799c2a29},
	abstract = {Smart contract technology is reshaping conventional industry and business processes. Being embedded in blockchains, smart contracts enable the contractual terms of an agreement to be enforced automatically without the intervention of a trusted third party. As a result, smart contracts can cut down administration and save services costs, improve the efficiency of business processes and reduce the risks. Although smart contracts are promising to drive the new wave of innovation in business processes, there are a number of challenges to be tackled. This paper presents a survey on smart contracts. We first introduce blockchains and smart contracts. We then present the challenges in smart contracts as well as recent technical advances. We also compare typical smart contract platforms and give a categorization of smart contract applications along with some representative examples. © 2019 Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 328; All Open Access, Green Open Access}
}

@ARTICLE{Yoo202028,
	author = {Yoo, Youngseo and Seo, Dongil and Kim, Minhyun},
	title = {Payment guaranteed polynomial exchange rate scheme and its application to cryptocurrency swaps},
	year = {2020},
	journal = {Annals of Emerging Technologies in Computing},
	volume = {4},
	number = {1},
	pages = {28 – 43},
	doi = {10.33166/AETiC.2020.01.004},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85088263211&doi=10.33166%2fAETiC.2020.01.004&partnerID=40&md5=f4c14473ca2be71422a1e272ac879535},
	abstract = {In this paper, we introduce a scheme, called Polynomial Exchange Rate Scheme (PERS), to generate exchange rate functions for token swap systems, and show that the functions generated are consistent, stable, and resilient. We show that payments are guaranteed in PERS if the Single Circulation Source principle is adopted (i.e., PG-PERS). Compared to the existing deposit-based exchange rate schemes, PG-PERS is a scheme that requires no initial key token deposit and its price changes have relatively stable rates especially in extreme cases. As an application of PG-PERS, we present a token swap service, called Fanco Swap, for swapping the ERC20 token used on aFan, an incentivized social media platform, and Ether coin. We also cover several practical issues such as precision and computation cost problems and the solutions to them, which adopted in the implementation of Fanco Swap. The paper contains a comprehensive survey on existing cryptocurrency exchange services and their pricing mechanism, followed by a formal development of the proposed exchange rate scheme and its comparison with one of the most representative existing exchange rate schemes. © 2020 by the author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Raja2020865,
	author = {Raja, Gunasekaran and Manaswini, Yelisetty and Vivekanandan, Gaayathri Devi and Sampath, Harish and Dev, Kapal and Bashir, Ali Kashif},
	title = {AI-Powered blockchain - A decentralized secure multiparty computation protocol for IoV},
	year = {2020},
	journal = {IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS 2020},
	pages = {865 – 870},
	doi = {10.1109/INFOCOMWKSHPS50562.2020.9162866},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091477323&doi=10.1109%2fINFOCOMWKSHPS50562.2020.9162866&partnerID=40&md5=0212a281ce3c6d431d6d0514386b2cc9},
	abstract = {The rapid advancements in autonomous technologies have paved way for vehicular networks. In particular, Vehicular Ad-hoc Network (VANET) forms the basis of the future of Intelligent Transportation System (ITS). ITS represents the communication among vehicles by acquiring and sharing the data. Though congestion control is enhanced by Internet of Vehicles (IoV), there are various security criteria where entire communication can lead to many security and privacy challenges. A blockchain can be deployed to provide the IoV devices with the necessary authentication and security feature for the transfer of data. Blockchain based IoV mechanism eliminates the single source of failure and remains secure at base despite having strong security, the higher level layers and applications are susceptible to attacks. Artificial Intelligence (AI) has the potential to overcome several vulnerabilities of current blockchain technology. In this paper, we propose an AI-Powered Blockchain which provides auto coding feature for the smart contracts making it an intelligent contract. Moreover, it speeds up the transaction verification and optimises energy consumption. The results show that intelligent contracts provide higher security compared to smart contracts considering range of different scenarios. © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 34; All Open Access, Green Open Access}
}

@CONFERENCE{Vacca2022214,
	author = {Vacca, Anna and Fredella, Michele and Di Sorbo, Andrea and Visaggio, Corrado A. and Canfora, Gerardo},
	title = {An Empirical Investigation on the Trade-off between Smart Contract Readability and Gas Consumption},
	year = {2022},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2022-March},
	pages = {214 – 224},
	doi = {10.1145/3524610.3529157},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133169420&doi=10.1145%2f3524610.3529157&partnerID=40&md5=32d44b2928cdba7c73444b4e83935229},
	abstract = {Blockchain technology is becoming increasingly popular, and smart contracts (i.e., programs that run on top of the blockchain) represent a crucial element of this technology. In particular, smart contracts running on Ethereum (i.e., one of the most popular blockchain platforms) are often developed with Solidity, and their deployment and execution consume gas (i.e., a fee compensating the computing resources required). Smart contract development frequently involves code reuse, but poor readable smart contracts could hinder their reuse. However, writing readable smart contracts is challenging, since practices for improving the readability could also be in contrast with optimization strategies for reducing gas consumption. This paper aims at better understanding (i) the readability aspects for which traditional software and smart contracts differ, and (ii) the specific smart contract readability features exhibiting significant relationships with gas consumption. We leverage a set of metrics that previous research has proven correlated with code readability. In particular, we first compare the values of these metrics obtained for both Solidity smart contracts and traditional software systems (written in Java). Then, we investigate the correlations occurring between these metrics and gas consumption and between each pair of metrics. The results of our study highlight that smart contracts usually exhibit lower readability than traditional software for what concerns the number of parentheses, inline comments, and blank lines used. In addition, we found some readability metrics (such as the average length of identifiers and the average number of keywords) that significantly correlate with gas consumption.  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@CONFERENCE{Eichinger202211,
	author = {Eichinger, Tobias and Ebermann, Marcel},
	title = {Can We Effectively Use Smart Contracts to Stipulate Time Constraints?},
	year = {2022},
	journal = {Proceedings - 4th IEEE International Conference on Decentralized Applications and Infrastructures, DAPPS 2022},
	pages = {11 – 18},
	doi = {10.1109/DAPPS55202.2022.00010},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141027218&doi=10.1109%2fDAPPS55202.2022.00010&partnerID=40&md5=880fdc0f1129c73e2163e461d22d72f1},
	abstract = {Smart contracts provide the means to stipulate rules of interaction between mutually distrustful organizations. They encode contractual agreements on the basis of source code, which else need to be contractualized in natural language. While the mediation of contractual agreements via smart contracts is seamless in theory, it requires that the conditions of an interaction are accurately made available in the blockchain. Time is a prominent such condition. In the paper at hand, we empirically measure the consistency of a smart contract to yield equal results on the basis of the time of an interaction and its potentially inaccurate representation in the blockchain. We propose a novel metric called execution accuracy to measure this consistency. We specifically measure the execution accuracy of a time intervalconstrained smart contract that executes distinct logic within and without some constraint interval. We run experiments for the local Ganache and Quorum and the public Görli and Rinkeby Ethereum blockchains. Our experiments confirm our intuition that execution accuracy decreases near interval bounds. The novelty of our proposed metric resides in its capacity to quantify this decrease. We demonstrate how time constraints can be effectively stipulated on the basis of execution accuracy measurements. © 2022 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Smirnov2018611,
	author = {Smirnov, Alexander and Teslya, Nikolay},
	title = {Robot interaction through smart contract for blockchain-based coalition formation},
	year = {2018},
	journal = {IFIP Advances in Information and Communication Technology},
	volume = {540},
	pages = {611 – 620},
	doi = {10.1007/978-3-030-01614-2_56},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058533799&doi=10.1007%2f978-3-030-01614-2_56&partnerID=40&md5=c8bb4ba81d9697071cb860c95ad00d70},
	abstract = {Nowadays robots are able to perform decisions independent from the operator. Also, they are able to form a various kind of unions, such as swarms, schools, or coalitions to perform joint task solving. The most powerful and flexible type of union is coalitions. Due to each robot acts like an independent agent it is important to provide trusted interaction between them. It is quite hard to do this with existing methods based only on the knowledge representation using ontologies and reasoning techniques. The paper proposes to use smart contracts in blockchain to enrich the knowledge-based system by functions, specific for blockchain such as immutable transaction log, consensus between all participants as well as possibility to automate control on task resolving. The paper describes the new environment framework based on integration of cyberphysical system and blockchain, and interaction model between all framework elements using BPMN 2.0 notation. Smart contracts presented in the paper provide functions for tasks distribution between robots, resource allocation, and monitoring the task execution and reward distribution. © IFIP International Federation for Information Processing 2018.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@ARTICLE{Hasan202276416,
	author = {Hasan, Haya R. and Salah, Khaled and Battah, Ammar and Madine, Mohammad and Yaqoob, Ibrar and Jayaraman, Raja and Omar, Mohammed},
	title = {Incorporating Registration, Reputation, and Incentivization Into the NFT Ecosystem},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {76416 – 76433},
	doi = {10.1109/ACCESS.2022.3192388},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135248135&doi=10.1109%2fACCESS.2022.3192388&partnerID=40&md5=23e4f05c26560aeef2c3d6f1420faa10},
	abstract = {Non-Fungible Tokens (NFTs) have recently received immense popularity in the digital art industry. An NFT represents ownership of a unique item that is stored on the blockchain and cannot be changed, replaced, and copied. The current NFT ecosystem falls short in trust features and is prone to illegitimate users, threats, and vulnerabilities. In this paper, we propose a blockchain-based solution for the NFT ecosystem that incorporates registration of the participating actors, involves a decentralized reputation system, provides incentives to its users through rewards, and penalizes misconduct. Our system design is built to ensure trust and credibility in the NFT ecosystem. The proposed solution leverages blockchain's intrinsic security features such as transparency, tamper-proof logs, data integrity, accountability, and non-repudiation. We use the decentralized storage of the InterPlanetary File System (IPFS) to store the NFTs' metadata, whereas their hash is stored on the chain. We present algorithms along with their implementation, testing, and validation details. We demonstrate how our solution, as well as smart contract code, is secure enough against common security threats and attacks. We make our smart contract code publicly available on the GitHub repository. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Shahzad2022,
	author = {Shahzad, Khurram and Aseeri, Ahmad O. and Shah, Munam Ali},
	title = {A Blockchain-Based Authentication Solution for 6G Communication Security in Tactile Networks},
	year = {2022},
	journal = {Electronics (Switzerland)},
	volume = {11},
	number = {9},
	doi = {10.3390/electronics11091374},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129104870&doi=10.3390%2felectronics11091374&partnerID=40&md5=fa851d95c1fd9d8b6ddbf67bfc8ee3d1},
	abstract = {In this era, the ultimate vision is to transform current technologies into intelligent global environments to facilitate everyday transactions. The emerging Industry 4.0 has introduced promising potential technologies that have expedited the transition of Internet of Things (IoT) into the Internet of Everything (IoE), utilizing the advances in artificial intelligence. Such a transition implies that sensitive data can be effortlessly accessed via the open network used by various domains such as military, business, transportation, medical, and education, leading to potential security concerns. Although a blockchain, along with the above fields, already employs a fast network such as 5G, the explosive growth in the development and implementation of various Industry 4.0-related domains requires significantly faster networking speeds and a secure mechanism for data transfer. This exhibits the need for 6G to meet the requirements of real-time applications, as shown in the graphical representation of the abstract. The bulk of this work was performed on a blockchain, but some methodology was needed that fulfilled security at different levels, such as the process level, data level, and infrastructure level. Our contribution in this work was twofold: first, at the process level, a novel smart contract mechanism was described; and second, at the data level, a digital signature methodology was employed that allowed anonymization to authenticate and secure the blockchain without encryption. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@ARTICLE{Tuler De Oliveira2022117836,
	author = {Tuler De Oliveira, Marcela and Reis, Lucio Henrik Amorim and Verginadis, Yiannis and Mattos, Diogo Menezes Ferrazani and Olabarriaga, Silvia Delgado},
	title = {SmartAccess: Attribute-Based Access Control System for Medical Records Based on Smart Contracts},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {117836 – 117854},
	doi = {10.1109/ACCESS.2022.3217201},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141520219&doi=10.1109%2fACCESS.2022.3217201&partnerID=40&md5=ad726168523a523860acac5d2b7a946c},
	abstract = {Cross-organisation data sharing is challenging because all the involved organisations must agree on 'how' and 'why' the data is processed. Due to a lack of transparency, the organisations need to trust that others comply with the agreements and regulations. We propose to exploit blockchain and smart contracts technologies to define an Attribute-Based Access Control System for cross-organisation medical records sharing, coined SmartAccess. SmartAccess offers joint agreement over access policies and dynamic access control besides blockchain transparency and auditability. We leverage the Attribute-Based Access Control model to implement smart contracts. We deploy and test them on a private and permissioned blockchain, transforming the access control process into a distributed smart contract execution. This paper proposes the SmartAccess system and its application in two healthcare use cases. We introduce the threat model and perform a security analysis of the system. To demonstrate the feasibility of our proposal, we implement a proof-of-concept of the smart contracts, written in Solidity language, with a size-efficient policy representation, and analyse the complexity and scalability of the contracts' functions. Furthermore, we present performance results, measuring the latency and throughput of the transactions to execute the access control functions with different blockchain network consensus setups. We also compare the performance of the SmartAccess system against two open-source Solidity implementations of smart contract-based access control, Role-based Access Control and Access Control List. Finally, we discuss the strengths and drawbacks of our proposal. SmartAccess requires the overhead of a decentralised system, but the trade-off is transparency, regulation compliance and auditability for complex cross-organisation data sharing. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Christiaanse201983,
	author = {Christiaanse, Rob},
	title = {Mobility as a service a valuecentric approach to design},
	year = {2019},
	journal = {The Web Conference 2019 - Companion of the World Wide Web Conference, WWW 2019},
	pages = {83 – 92},
	doi = {10.1145/3308560.3317050},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066909697&doi=10.1145%2f3308560.3317050&partnerID=40&md5=c42956093669a7f49c6db321c1eeb4f1},
	abstract = {MAAS as a mobility model leans on the idea that a gap between private and public transport systems needs to be bridged as well as on a city, intercity, national and supranational level. The current situation is felt problematic due to the fragmented tools and services often organized in silos to meet a traveler needs to undertake a trip. One of the major concerns designing any platform system like Mobility as a Service is where to start modeling and how to express the notion of the platform system in some language that is understandable for all stakeholders of the platform system. Understandability buttresses the expectation of stakeholders whether some design will probably implement the intended platform services enabling users to actually buy and or use the platform system for what ever purpose. Building on the economic theories of two-sided markets and mechanism design we introduce the concept of value nets extending the Contract Protocol Net. Value net modeling offers a precise abstract representation which provides in the detailed informational requirements in a canonical form and it connects i.e. implements the abstract notion of Service Oriented Architecture characterizing systems without loss of crucial informational elements. � 2019 IW3C2 (International World Wide Web Conference Committee), published under Creative Commons CC-BY-NC-ND 4.0 License.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@ARTICLE{Cruz201812240,
	author = {Cruz, Jason Paul and Kaji, Yuichi and Yanai, Naoto},
	title = {RBAC-SC: Role-based access control using smart contract},
	year = {2018},
	journal = {IEEE Access},
	volume = {6},
	pages = {12240 – 12251},
	doi = {10.1109/ACCESS.2018.2812844},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85043356758&doi=10.1109%2fACCESS.2018.2812844&partnerID=40&md5=dba59f1a349045cfc70edf319c8898c9},
	abstract = {The role-based access control (RBAC) framework is a mechanism that describes the access control principle. As a common interaction, an organization provides a service to a user who owns a certain role that was issued by a different organization. Such trans-organizational RBAC is common in face-to-face communication but not in a computer network, because it is difficult to establish both the security that prohibits the malicious impersonation of roles and the flexibility that allows small organizations to participate and users to fully control their own roles. In this paper, we present an RBAC using smart contract (RBAC-SC), a platform that makes use of Ethereum's smart contract technology to realize a trans-organizational utilization of roles. Ethereum is an open blockchain platform that is designed to be secure, adaptable, and flexible. It pioneered smart contracts, which are decentralized applications that serve as 'autonomous agents' running exactly as programmed and are deployed on a blockchain. The RBAC-SC uses smart contracts and blockchain technology as versatile infrastructures to represent the trust and endorsement relationship that are essential in the RBAC and to realize a challenge-response authentication protocol that verifies a user's ownership of roles. We describe the RBAC-SC framework, which is composed of two main parts, namely, the smart contract and the challenge-response protocol, and present a performance analysis. A prototype of the smart contract is created and deployed on Ethereum's Testnet blockchain, and the source code is publicly available. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 197; All Open Access, Gold Open Access}
}

@CONFERENCE{Bandara2020,
	author = {Bandara, Hmn Dilum and Xu, Xiwei and Weber, Ingo},
	title = {Patterns for Blockchain Data Migration},
	year = {2020},
	journal = {ACM International Conference Proceeding Series},
	doi = {10.1145/3424771.3424796},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123041809&doi=10.1145%2f3424771.3424796&partnerID=40&md5=a1fce962e4b6274eb779cb51ddc7be3a},
	abstract = {With the rapid evolution of technological, economic, and regulatory landscapes, contemporary blockchain platforms are all but certain to undergo major changes. Therefore, the applications that rely on them will eventually need to migrate from one blockchain instance to another to remain competitive and secure, as well as to enhance the business process, performance, cost efficiency, privacy, and regulatory compliance. However, the differences in data and smart contract representations, modes of hosting, transaction fees, as well as the need to preserve consistency, immutability, and data provenance introduce unique challenges over database migration. We first present a set of blockchain migration scenarios and data fidelity levels using an illustrative example. We then present a set of migration patterns to address those scenarios and the above data management challenges. Finally, we demonstrate how the effort, cost, and risk of migration could be minimized by choosing a suitable set of data migration patterns, data fidelity level, and proactive system design. Practical considerations and research challenges are also highlighted.  © 2020 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Green Open Access}
}

@ARTICLE{Cano-Benito2021140156,
	author = {Cano-Benito, Juan and Cimmino, Andrea and Garcia-Castro, Raul},
	title = {Toward the Ontological Modeling of Smart Contracts: A Solidity Use Case},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {140156 – 140172},
	doi = {10.1109/ACCESS.2021.3115577},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85115754167&doi=10.1109%2fACCESS.2021.3115577&partnerID=40&md5=ba3e5ca65ed48fc65c337c17bf926913},
	abstract = {Blockchain has become a pervasive technology in a wide number of sectors like industry, research, and academy. With the emergence of blockchain, new solutions with this technology to existing problems were devised, leading to the introduction of smart contracts. Smart contracts are similar to traditional contracts with the benefits provided by blockchain, such as immutability, privacy, and decentralisation. These contracts are usually defined based on a specific domain, and this domain knowledge can be represented through an ontology. Researches have explored the benefits of using domain ontologies with smart contracts, such as code generation, discovering other contracts in the network, or interaction with other contracts. Notwithstanding, the representation of smart contract languages themselves has not been studied. In this paper, we present an ontology for a well-known smart contract language, Solidity, defining all entities needed to cover the whole language and aligning it to other standardised ontologies such as EthOn, in a way to improve the knowledge of the ontology developed. Furthermore, the ontology has also been validated with already deployed contracts in the Ethereum blockchain. Thus, Solidity will be able to benefit from the advantages provided by ontologies, such as interoperability and the use of semantic web technologies.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Mircea202263353,
	author = {Mircea, Marinela and Stoica, Marian and Ghilic-Micu, Bogdan},
	title = {Analysis of the Impact of Blockchain and Internet of Things (BIoT) on Public Procurement},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {63353 – 63374},
	doi = {10.1109/ACCESS.2022.3182656},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132712361&doi=10.1109%2fACCESS.2022.3182656&partnerID=40&md5=655688875920c945d8f3705538bcf2f2},
	abstract = {Most countries in the world are currently faced with a series of public procurement challenges. Moreover, the large volumes of public procurement and the impact it may have of the global economy, the environment and the society at large justify a research study aimed at achieving sustainable and smart procurement. Smart public procurement intensively relies on emerging technologies and it is both an international priority and a challenge to achieve it. This paper is aimed at addressing such procurement-specific challenges. This study reflects the current status and the trends in public procurement, as well as the manner in which Blockchain and the Internet of Things (BIoT) may lead to a beneficial change in the field. In order to analyse the impact of BIoT, we are putting forward an assessment model comprising the definition and the description of six hypotheses. They are validated both by reference to the current knowledge status and via the analysis of the data collected in a survey which was conducted in Romania. It was aimed at collecting and analysing the data from the main stakeholders as well as at formulating recommendations/actions related to the modernisation of the current system. The study uses structural equation modelling (SEM) to validate the proposed model and to establish the relationships between the adoption of BIoT and smart, sustainable and transparent public procurement. At the same time, we analyse the links between the adoption of BIoT and aspects such as corruption and fraud, the challenges related to technological integration and the need to reengineer organisations, as well as national and international policies. Following our analyses, there emerged that BIoT adoption has a positive impact on the achievement of sustainable public procurement processes (the highest effect), on transparency and the trust in public procurement, on reducing corruption and fraud in public procurement and on the achievement of smart public procurement. The paper provides theoretical and practical contributions that should support solutions to the current major challenges and represent a vehicle for innovation and sustainable development alike.  © 2022 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Di Lucca2021104,
	author = {Di Lucca, Giuseppe A. and Tortorella, Maria},
	title = {Comparing blockchain platforms for smart contracts: A preliminary framework},
	year = {2021},
	journal = {EPiC Series in Computing},
	volume = {77},
	pages = {104 – 114},
	doi = {10.29007/sg4t},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118461332&doi=10.29007%2fsg4t&partnerID=40&md5=ce61027e691bc1bf83490091988da393},
	abstract = {Since 2008, when it was first cited, blockchain technology represents an innovation from both a structural and application point of view. Since then, thanks to its peculiarities and capabilities of implementing smart contracts, blockchain technology has undergone a strong development in different application domains. The interest around this technology also brought to the definition of several platforms facilitating its use and application. Due to their variety,, choosing the most suitable blockchain platform to support a specific business need represents a strategic problem. This paper proposes an analysis for the definition of an evaluation framework and related quality attributes, helping to characterize and compare different blockchain platforms for identifying the most suitable one to the implementation of smart contracts in a specific business context. The analysis of a set of blockchain platforms is proposed for discussing the applicability and use of the proposed framework. © 2021, EasyChair. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@CONFERENCE{Bragagnolo20189,
	author = {Bragagnolo, Santiago and Rocha, Henrique and Denker, Marcus and Ducasse, Stephane},
	title = {SmartInspect: Solidity smart contract inspector},
	year = {2018},
	journal = {2018 IEEE 1st International Workshop on Blockchain Oriented Software Engineering, IWBOSE 2018 - Proceedings},
	volume = {2018-January},
	pages = {9 – 18},
	doi = {10.1109/IWBOSE.2018.8327566},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049759806&doi=10.1109%2fIWBOSE.2018.8327566&partnerID=40&md5=dc9bbce26cdb72919e1bf51fed0a1907},
	abstract = {Solidity is a language used for smart contracts on the Ethereum blockchain. Smart contracts are embedded procedures stored with the data they act upon. Debugging smart contracts is a really difficult task since once deployed, the code cannot be reexecuted and inspecting a simple attribute is not easily possible because data is encoded. In this paper, we address the lack of inspectability of a deployed contract by analyzing contract state using decompilation techniques driven by the contract structure definition. Our solution, SmartInspect, also uses a mirror-based architecture to represent locally object responsible for the interpretation of the contract state. SmartInspect allows contract developers to better visualize and understand the contract stored state without needing to redeploy, nor develop any ad-hoc code. © 2018 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 42; All Open Access, Green Open Access}
}

@CONFERENCE{Cui202260,
	author = {Cui, Nan and Jiang, Yuze and Gu, Xiaodong and Shen, Beijun},
	title = {Zero-Shot Program Representation Learning},
	year = {2022},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2022-March},
	pages = {60 – 70},
	doi = {10.1145/3524610.3527888},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133187003&doi=10.1145%2f3524610.3527888&partnerID=40&md5=f2a904c1fc587c4c5d7d2c038cd7f666},
	abstract = {Learning program representations has been the core prerequisite of code intelligence tasks (e.g., code search and code clone detection). The state-of-the-art pre-trained models such as CodeBERT require the availability of large-scale code corpora. However, gathering training samples can be costly and infeasible for domain-specific languages such as Solidity for smart contracts. In this paper, we propose Zecoler, a zero-shot learning approach for code representations. Zecoler is built upon a pre-trained programming language model. In order to elicit knowledge from the pre-trained models efficiently, Zecoler casts the downstream tasks to the same form of pre-training tasks by inserting trainable prompts into the original input. Then, it employs the prompt learning technique to optimize the pre-trained model by merely adjusting the original input. This enables the representation model to efficiently fit the scarce task-specific data while reusing pre-trained knowledge. We evaluate Zecoler in three code intelligence tasks in two programming languages that have no training samples, namely, Solidity and Go, with model trained in corpora of common languages such as Java. Experimental results show that our approach significantly outperforms baseline models in both zero-shot and few-shot settings.  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access, Green Open Access}
}

@ARTICLE{Clack2018339,
	author = {Clack, Christopher D. and Vanca, Gabriel},
	title = {Temporal aspects of smart contracts for financial derivatives},
	year = {2018},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11247 LNCS},
	pages = {339 – 355},
	doi = {10.1007/978-3-030-03427-6_26},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056478244&doi=10.1007%2f978-3-030-03427-6_26&partnerID=40&md5=69a521d15e26fa4562b1234089343388},
	abstract = {Implementing smart contracts to automate the performance of high-value over-the-counter (OTC) financial derivatives is a formidable challenge. Due to the regulatory framework and the scale of financial risk if a contract were to go wrong, the performance of these contracts must be enforceable in law and there is an absolute requirement that the smart contract will be faithful to the intentions of the parties as expressed in the original legal documentation. Formal methods provide an attractive route for validation and assurance, and here we present early results from an investigation of the semantics of industry-standard legal documentation for OTC derivatives. We explain the need for a formal representation that combines temporal, deontic and operational aspects, and focus on the requirements for the temporal aspects as derived from the legal text. The relevance of this work extends beyond OTC derivatives and is applicable to understanding the temporal semantics of a wide range of legal documentation. © Springer Nature Switzerland AG 2018.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@CONFERENCE{Hu2021423,
	author = {Hu, Tianyuan and Pan, Zhenyu and Li, Bixin},
	title = {SolDetector: Detect defects based on knowledge graph of solidity smart contract},
	year = {2021},
	journal = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
	volume = {2021-July},
	pages = {423 – 428},
	doi = {10.18293/SEKE2021-133},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114282646&doi=10.18293%2fSEKE2021-133&partnerID=40&md5=4bd76087f61e41419592df1a5d461dd0},
	abstract = {Smart contract security is one of core security issues in the application of blockchain. In recent years, attacks on smart contracts occur frequently, there are a lot of researches concerning on smart contract security issues. However, almost all solutions proposed in these researches are low precision and high False Negative Rate(FNR). In this paper, we propose a defect detection method for checking security of Solidity smart contract based on knowledge graph. Therefore, we first construct knowledge graph of smart contracts by fully integrating syntax and semantic information of Solidity source code; then, we define defect patterns by analyzing defect characteristics; furthermore, we define inference rules for defects based on knowledge graph and defect patterns; finally, we detect defects by SPARQL query. We also implement a tool named SolDetector and perform experiment on three different datasets, which shows that SolDetector is effective and efficient. © 2021 Knowledge Systems Institute Graduate School. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Qiao2022687,
	author = {Qiao, Liang and Dang, Shuping and Shihada, Basem and Alouini, Mohamed-Slim and Nowak, Robert and Lv, Zhihan},
	title = {Can blockchain link the future?},
	year = {2022},
	journal = {Digital Communications and Networks},
	volume = {8},
	number = {5},
	pages = {687 – 694},
	doi = {10.1016/j.dcan.2021.07.004},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85122709618&doi=10.1016%2fj.dcan.2021.07.004&partnerID=40&md5=1bdb4ce60a360a3041f96a776e24aa36},
	abstract = {Recently, decentralization has been extensively explored by researchers. Blockchain, as a representation of decentralized technology, has attracted attention with its unique characteristics, such as irrevocability and security. Consequently, herein, we introduce cutting-edge blockchain technologies from four directions: blockchain system, consensus algorithms, smart contract, and scalability. Subsequently, we analyze the current lack of consensus mechanism, fault tolerance, and block capacity of the blockchain, and the integration of blockchain into 5G/6G mobile communication. Furthermore, we discuss the possible applications of blockchain in intellectual property protection, the Internet of Things, digital twins, standardization, and epidemic prevention and control. Finally, explore the impacts and solutions of blockchain on human society beyond technology. © 2021 Chongqing University of Posts and Telecommunications},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Battah20211,
	author = {Battah, Ammar and Iraqi, Youssef and Damiani, Ernesto},
	title = {Blockchain-based reputation systems: Implementation challenges and mitigation},
	year = {2021},
	journal = {Electronics (Switzerland)},
	volume = {10},
	number = {3},
	pages = {1 – 20},
	doi = {10.3390/electronics10030289},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099947295&doi=10.3390%2felectronics10030289&partnerID=40&md5=93eeb2280abf89e9c5e4093fdd719042},
	abstract = {Reputation expresses the beliefs or opinions about someone or something that are held by an individual or by a community. Reputation Management Systems (RMSs) handle representation, computation, and storage of reputation in some quantitative form, suitable for grounding trust relations among parties. Quantifying reputation is important in situations, like online service provision, which involve interaction between parties who do not know (and potentially distrust) each other. The basic idea is to let parties rate each other. When a party is considered for interaction, its ratings can be aggregated in order to derive a score for deciding whether to trust it or not. While much valuable research work has been done on reputation-based trust schemes, the problem of establishing collective trust in the reputation management system itself has never been fully solved. Recently, several researchers have put forward the idea of using Distributed Ledger Technology (DLT) as the foundation for implementing trustworthy RMSs. The purpose of this paper is to identify some critical problems that arise when DLTs are used in order to manage evidence about previous interaction and compute reputations. The paper proposes some practical solutions and describes methods to deploy them on top of standard DLT of the Ethereum family. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Bellagarda2022,
	author = {Bellagarda, Jagger and Abu-Mahfouz, Adnan M.},
	title = {Connect2NFT: A Web-Based, Blockchain Enabled NFT Application with the Aim of Reducing Fraud and Ensuring Authenticated Social, Non-Human Verified Digital Identity},
	year = {2022},
	journal = {Mathematics},
	volume = {10},
	number = {21},
	doi = {10.3390/math10213934},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141886616&doi=10.3390%2fmath10213934&partnerID=40&md5=b2e4ca5f11feaa5fee63dc19ffc726b6},
	abstract = {As of 2022, non-fungible tokens, or NFTs, the smart contract powered tokens that represent ownership in a specific digital asset, have become a popular investment vehicle. In 2021, NFT trading reached USD 17.6 billion and entered mainstream media with several celebrities and major companies launching tokens within the space. The rapid rise in popularity of NFTs has brought with it a number of risks and concerns, two of which will be discussed and addressed in this technical paper. Data storage of the underlying digital asset connected to an NFT is held off-chain in most cases and is therefore out of the NFT holders’ control. This issue will be discussed and addressed using a theoretical workflow developed and presented for a system that converges NFTs and verifiable credentials with the aim of storing underlying NFT digital assets in a decentralized manner. The second issue focuses on the rise of NFT infringements and fraud within the overall NFT space. This will be discussed and addressed through the development of a practical application, named “Connect2NFT”. The main functionality of this practical application will enable users to connect their Twitter social media accounts to the NFTs they own, thus ensuring that potential buyers or viewers of the NFT can comprehensively conclude who is the authentic owner of a specific NFT. An individual performance analysis of the proposed solution will be conducted in addition to being compared and evaluated against similar applications. Thorough development, implementation, and testing has been performed in order to establish a practical solution that can be tested and applied to current NFT use cases. The theoretical NFT storage solution is a minor but equally important contribution in comparison. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Bartoletti2022,
	author = {Bartoletti, Massimo and Lande, Stefano and Murgia, Maurizio and Zunino, Roberto},
	title = {VERIFYING LIQUIDITY OF RECURSIVE BITCOIN CONTRACTS},
	year = {2022},
	journal = {Logical Methods in Computer Science},
	volume = {18},
	number = {1},
	doi = {10.46298/LMCS-18(1:22)2022},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124695707&doi=10.46298%2fLMCS-18%281%3a22%292022&partnerID=40&md5=744bc3159512d96ced6827926c6d3e75},
	abstract = {Smart contracts — computer protocols that regulate the exchange of crypto-assets in trustless environments — have become popular with the spread of blockchain technologies. A landmark security property of smart contracts is liquidity: in a non-liquid contract, it may happen that some assets remain frozen, i.e. not redeemable by anyone. The relevance of this issue is witnessed by recent liquidity attacks to Ethereum, which have frozen hundreds of USD millions. We address the problem of verifying liquidity on BitML, a DSL for smart contracts with a secure compiler to Bitcoin, featuring primitives for currency transfers, contract renegotiation and consensual recursion. Our main result is a verification technique for liquidity. We first transform the infinite-state semantics of BitML into a finite-state one, which focusses on the behaviour of a chosen set of contracts, abstracting from the moves of the context. With respect to the chosen contracts, this abstraction is sound, i.e. if the abstracted contract is liquid, then also the concrete one is such. We then verify liquidity by model-checking the finite-state abstraction. We implement a toolchain that automatically verifies liquidity of BitML contracts and compiles them to Bitcoin, and we assess it through a benchmark of representative contracts. © M. Bartoletti, S. Lande, M. Murgia, and R. Zunino.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Cedeno Jimenez202289,
	author = {Cedeno Jimenez, J.R. and Folini, A. and Brovelli, M.A.},
	title = {COLLABORATIVE VALIDATION OF USER-CONTRIBUTED DATA USING A GEOSPATIAL BLOCKCHAIN APPROACH: THE SIMILE CASE STUDY},
	year = {2022},
	journal = {International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences - ISPRS Archives},
	volume = {48},
	number = {4/W1-2022},
	pages = {89 – 95},
	doi = {10.5194/isprs-archives-XLVIII-4-W1-2022-89-2022},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85137179429&doi=10.5194%2fisprs-archives-XLVIII-4-W1-2022-89-2022&partnerID=40&md5=93fcf7007236adbfea563e8368fdd9f5},
	abstract = {Internet decentralization nowadays represents a critical topic to be addressed. It protects the users' privacy, promotes data ownership, eliminates single points of failure and data censorship. An element that has an important role in decentralization is blockchain technology. Although blockchain has revolutionised sectors like the financial one with Bitcoin, there are still some fields where it needs to be further developed. One of these is geospatial data sharing and citizen science, where features like decentralization, immutability and transparency are needed. This study focuses on the description of a decentralized application developed specifically for geospatial data-point sharing and validation. As an example, the Informative System for the Integrated Monitoring of Insubric Lakes and their Ecosystems (SIMILE) is used. This application is developed in the Velas blockchain infrastructure and implements a combination of a Discrete Global Grid System (DGGS) with smart contracts. Two types of smart contracts were created, a cell and a registry smart contract. The cell smart contracts are individual for each DGGS partition and contain the list of observations present in a specific area. The registry smart contracts keep track of all the DGGS cells added to the system. Currently, SIMILE observations are validated by public authorities, which requires time that is not always available. Therefore, a fully working prototype was developed to solve this. Here users can add and manage personal observations and validate the ones belonging to other users. This work demonstrates the feasibility of creating decentralized applications for geographical data validation as a citizen science solution. © Copyright:},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Oesterheld2022,
	author = {Oesterheld, Caspar and Conitzer, Vincent},
	title = {Safe Pareto improvements for delegated game playing},
	year = {2022},
	journal = {Autonomous Agents and Multi-Agent Systems},
	volume = {36},
	number = {2},
	doi = {10.1007/s10458-022-09574-6},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135897755&doi=10.1007%2fs10458-022-09574-6&partnerID=40&md5=e2a67f7e921554b4f17555fb34d903c0},
	abstract = {A set of players delegate playing a game to a set of representatives, one for each player. We imagine that each player trusts their respective representative’s strategic abilities. Thus, we might imagine that per default, the original players would simply instruct the representatives to play the original game as best as they can. In this paper, we ask: are there safe Pareto improvements on this default way of giving instructions? That is, we imagine that the original players can coordinate to tell their representatives to only consider some subset of the available strategies and to assign utilities to outcomes differently than the original players. Then can the original players do this in such a way that the payoff is guaranteed to be weakly higher than under the default instructions for all the original players? In particular, can they Pareto-improve without probabilistic assumptions about how the representatives play games? In this paper, we give some examples of safe Pareto improvements. We prove that the notion of safe Pareto improvements is closely related to a notion of outcome correspondence between games. We also show that under some specific assumptions about how the representatives play games, finding safe Pareto improvements is NP-complete. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Grech2022,
	author = {Grech, Neville and Lagouvardos, Sifis and Tsatiris, Ilias and Smaragdakis, Yannis},
	title = {Elipmoc: Advanced decompilation of Ethereum smart contracts},
	year = {2022},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {6},
	number = {OOPSLA1},
	doi = {10.1145/3527321},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129727844&doi=10.1145%2f3527321&partnerID=40&md5=de7ba66cbba861bb8df5c2b3bbadc507},
	abstract = {Smart contracts on the Ethereum blockchain greatly benefit from cutting-edge analysis techniques and pose significant challenges. A primary challenge is the extremely low-level representation of deployed contracts. We present Elipmoc, a decompiler for the next generation of smart contract analyses. Elipmoc is an evolution of Gigahorse, the top research decompiler, dramatically improving over it and over other state-of-the-art tools, by employing several high-precision techniques and making them scalable. Among these techniques are a new kind of context sensitivity (termed "transactional sensitivity") that provides a more effective static abstraction of distinct dynamic executions; a path-sensitive (yet scalable, through path merging) algorithm for inference of function arguments and returns; and a fully context sensitive private function reconstruction process. As a result, smart contract security analyses and reverse-engineering tools built on top of Elipmoc achieve high scalability, precision and completeness. Elipmoc improves over all notable past decompilers, including its predecessor, Gigahorse, and the state-of-the-art industrial tool, Panoramix, integrated into the primary Ethereum blockchain explorer, Etherscan. Elipmoc produces decompiled contracts with fully resolved operands at a rate of 99.5% (compared to 62.8% for Gigahorse), and achieves much higher completeness in code decompilation than Panoramix - e.g., up to 67% more coverage of external call statements - while being over 5x faster. Elipmoc has been the enabler for recent (independent) discoveries of several exploitable vulnerabilities on popular protocols, over funds in the many millions of dollars.  © 2022 Owner/Author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Bronze Open Access}
}

@ARTICLE{Bischof202233048,
	author = {Bischof, Evelyne and Botezatu, Alex and Jakimov, Sergey and Suharenko, Ilya and Ostrovski, Alexey and Verbitsky, Andrey and Yanovich, Yury and Zhavoronkov, Alex and Zmudze, Garri},
	title = {Longevity Foundation: Perspective on Decentralized Autonomous Organization for Special-Purpose Financing},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {33048 – 33058},
	doi = {10.1109/ACCESS.2022.3161392},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127046893&doi=10.1109%2fACCESS.2022.3161392&partnerID=40&md5=90d61b2d364add262cc97c7022690f08},
	abstract = {Decentralized autonomous organizations (DAO) launched on a blockchain and governed by a smart contract promises to bring self-organization to a new technological level. Crisis management has no standard decentralized solution within DAO yet. A central authority is a natural component due to compliance reasons in certain domains, for example, special-purpose financing, in which the DAO governance model could be reasonably applied. More generally, a centralized DAO representative could streamline implementing DAO decisions that involve interactions with legacy systems. The article presents a perspective of modern technologies for organizing a foundation for special-purpose financing and considers longevity as a model example of the purpose.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@CONFERENCE{Hu20215,
	author = {Hu, Xing and Gao, Zhipeng and Xia, Xin and Lo, David and Yang, Xiaohu},
	title = {Automating User Notice Generation for Smart Contract Functions},
	year = {2021},
	journal = {Proceedings - 2021 36th IEEE/ACM International Conference on Automated Software Engineering, ASE 2021},
	pages = {5 – 17},
	doi = {10.1109/ASE51524.2021.9678552},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125480255&doi=10.1109%2fASE51524.2021.9678552&partnerID=40&md5=9dbc5b8cf52177307f95eea5b5e5a796},
	abstract = {Smart contracts have obtained much attention and are crucial for automatic financial and business transactions. For end-users who have never seen the source code, they can read the user notice shown in end-user client to understand what a transaction does of a smart contract function. However, due to time constraints or lack of motivation, user notice is often missing during the development of smart contracts. For end-users who lack the information of the user notices, there is no easy way for them to check the code semantics of the smart contracts. Thus, in this paper, we propose a new approach SMARTDOC to generate user notice for smart contract functions automatically. Our tool can help end-users better understand the smart contract and aware of the financial risks, improving the users' confidence on the reliability of the smart contracts. SMARTDOC exploits the Transformer to learn the representation of source code and generates natural language descriptions from the learned representation. We also integrate the Pointer mechanism to copy words from the input source code instead of generating words during the prediction process. We extract 7, 878 〈function, notice〉 pairs from 54, 739 smart contracts written in Solidity. Due to the limited amount of collected smart contract functions (i.e., 7, 878 functions), we exploit a transfer learning technique to utilize the learned knowledge to improve the performance of SMARTDOC. The learned knowledge obtained by the pre-training on a corpus of Java code, that has similar characteristics as Solidity code. The experimental results show that our approach can effectively generate user notice given the source code and significantly outperform the state-of-the-art approaches. To investigate human perspectives on our generated user notice, we also conduct a human evaluation and ask participants to score user notice generated by different approaches. Results show that SMARTDOC outperforms baselines from three aspects, naturalness, informativeness, and similarity.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@ARTICLE{Tan2022,
	author = {Tan, Bryan and Mariano, Benjamin and Lahiri, Shuvendu K. and Dillig, Isil and Feng, Yu},
	title = {SolType: Refinement types for arithmetic overflow in solidity},
	year = {2022},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {6},
	number = {POPL},
	doi = {10.1145/3498665},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123187755&doi=10.1145%2f3498665&partnerID=40&md5=5720ef309bea08772cf186fff00ca48b},
	abstract = {As smart contracts gain adoption in financial transactions, it becomes increasingly important to ensure that they are free of bugs and security vulnerabilities. Of particular relevance in this context are arithmetic overflow bugs, as integers are often used to represent financial assets like account balances. Motivated by this observation, this paper presents SolType, a refinement type system for Solidity that can be used to prevent arithmetic over-and under-flows in smart contracts. SolType allows developers to add refinement type annotations and uses them to prove that arithmetic operations do not lead to over-and under-flows. SolType incorporates a rich vocabulary of refinement terms that allow expressing relationships between integer values and aggregate properties of complex data structures. Furthermore, our implementation, called Solid, incorporates a type inference engine and can automatically infer useful type annotations, including non-Trivial contract invariants. To evaluate the usefulness of our type system, we use Solid to prove arithmetic safety of a total of 120 smart contracts. When used in its fully automated mode (i.e., using Solid's type inference capabilities), Solid is able to eliminate 86.3% of redundant runtime checks used to guard against overflows. We also compare Solid against a state-of-The-Art arithmetic safety verifier called VeriSmart and show that Solid has a significantly lower false positive rate, while being significantly faster in terms of verification time. © 2022 Owner/Author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Bronze Open Access, Green Open Access}
}

@ARTICLE{Bian202133654,
	author = {Bian, Lingyu and Zhang, Linlin and Zhao, Kai and Wang, Hao and Gong, Shengjia},
	title = {Image-Based Scam Detection Method Using an Attention Capsule Network},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {33654 – 33665},
	doi = {10.1109/ACCESS.2021.3059806},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100912382&doi=10.1109%2fACCESS.2021.3059806&partnerID=40&md5=b5dcd74c271ecf680a47f08309f3bdfa},
	abstract = {In recent years, the rapid development of blockchain technology has attracted much attention from people around the world. Scammers take advantage of the pseudo-anonymity of blockchain to implement financial fraud. The Ponzi scheme, one of the main scam methods, has defrauded investors of large amounts of money, thereby harming their interests and hindering the application of blockchain. Unfortunately, the current detection technology typically largely relies on the source code of the contract or uses a single feature which does not fully represent the contract characteristics. In such a case, the detection of Ponzi schemes with high efficiency becomes urgent. In this paper, we propose an image-based scam detection method using an attention capsule network (SE-CapsNet) focused on Ethereum. The sequence of bytecode, the opcode frequency, and the application binary interface (ABI) call are extracted as features from the contract bytecode and ABI, further converted into grayscale images, and then mapped into three color channels to generate RGB images, which are used as the input of the model for detecting the Ponzi scheme contract. In addition, we employ fancy PCA for data augmentation to reduce the impact of imbalanced data on the detection results. Experimental results show that the image-based detection method using deep learning models can effectively detect contracts before transactions occur. Among them, our proposed SE-CapsNet obtains great detection results, with an F1 score of 98.38%.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 8; All Open Access, Gold Open Access}
}

@ARTICLE{Mokhtari2021693,
	author = {Mokhtari, Jihane EL and El Kalam, Anas Abou and Benhaddou, Siham and Leroy, Jean-Philippe},
	title = {Dynamic Management of Security Policies in PrivOrBAC},
	year = {2021},
	journal = {International Journal of Advanced Computer Science and Applications},
	volume = {12},
	number = {6},
	pages = {693 – 701},
	doi = {10.14569/IJACSA.2021.0120681},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85109193552&doi=10.14569%2fIJACSA.2021.0120681&partnerID=40&md5=87d66f007715437a313d280b689863ea},
	abstract = {This article is a continuation of our previous work on identifying and developing tools and concepts to provide automatic management and derivation of security and privacy policies. In this document we are interested in the extension of the PrivOrBAC model in order to ensure a dynamic management of privacy-aware security policies. Our approach, based on smart contracts (SC) and the WS-Agreement Specification, allows automatic agents representing data providers and access requesters to enter into an access agreement that takes into consideration not only service level clauses but also security rules to protect the privacy of individuals. Our solution can be deployed in such a way that no human intervention is required to reach this type of agreement. This work shows how to use the WS-Agreement Specification to set up a process for negotiating, creating and monitoring Service Level Agreements (SLAs) in accordance with a predefined access control policy. This article concludes with a case study accompanied by a representative implementation of our solution. © 2021. All Rights Reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Magazzeni201750,
	author = {Magazzeni, Daniele and Mcburney, Peter and Nash, William},
	title = {Validation and verification of smart contracts: A research agenda},
	year = {2017},
	journal = {Computer},
	volume = {50},
	number = {9},
	pages = {50 – 57},
	doi = {10.1109/MC.2017.3571045},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85030465463&doi=10.1109%2fMC.2017.3571045&partnerID=40&md5=1fa6647654575cf3ee01b6ef32ac9522},
	abstract = {Smart contracts might encode legal contracts written in natural language to represent the contracting parties' shared understandings and intentions. The issues and research challenges involved in the validation and verification of smart contracts, particularly those running over blockchains and distributed ledgers, are explored. © 1970-2012 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 127; All Open Access, Green Open Access}
}

@CONFERENCE{Madhwal202183,
	author = {Madhwal, Yash and Chistiakov, Ivan and Yanovich, Yury},
	title = {Logging Multi-Component Supply Chain Production in Blockchain},
	year = {2021},
	journal = {ACM International Conference Proceeding Series},
	pages = {83 – 88},
	doi = {10.1145/3450588.3450604},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85108174669&doi=10.1145%2f3450588.3450604&partnerID=40&md5=af2f4c19c732f477ce590db1b676f67d},
	abstract = {The supply chain is a thriving industry where numerous parties have different interests. Subsequently, the immense volume of data produced is difficult to audit. Some information can be lost or intentionally distorted in the process. Blockchain as an open, public, borderless, neutral, and censorship-resistant architecture can significantly complement supply chains. A new supply chain architecture is proposed in this work, where the tokenized directed acyclic hypergraph (DAG) represents real-world production processes. An anti-aerosol respirator manufacturing is used as an illustration example. By tokenizing all parts of multi-component products, supply chain data is automatically timestamped and secured. Moreover, the DAG design allows one to trace-back all the elements of the final product to their origin. Blockchain can formally audit the entire supply chain without the need to go from place to place. A single incorruptible operations log creates an enabling environment for an unbiased reputation system to emerge.  © 2021 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Bronze Open Access}
}

@ARTICLE{Ferreira2018,
	author = {Ferreira, Micael and Rodrigues, Sven and Reis, Catarina I. and Maximiano, Marisa},
	title = {Blockchain: A tale of two applications},
	year = {2018},
	journal = {Applied Sciences (Switzerland)},
	volume = {8},
	number = {9},
	doi = {10.3390/app8091506},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052825086&doi=10.3390%2fapp8091506&partnerID=40&md5=5074d359a9b9607ee7766ff37f19198d},
	abstract = {Bitcoin continues to get more and more attention from the media, mainly because of the volatility of its value and insignificantly associated with the technological innovation. This cryptocurrency is supported by an immutable database and is distributed throughout a network of thousands of nodes, known as Blockchain. One way to ensure that all the concepts behind the Blockchain technology and infrastructure are seized is to conduct the development of one of the most popular context applications for it: a wallet for well-known cryptocurrencies. Yet Another Bitcoin Wallet (YABW) is a hybrid application available for both Android and iOS, which was developed with the Ionic and Angular frameworks. This application communicates with Bitcoin Blockchain to send, receive and store bitcoins; provides a set of features focused on security and user experience, and is available on the Play Store and Apple Store. A rather relevant issue that is becoming a major subject of current research is the application of the Blockchain infrastructure to other contexts that are neither directly connected to cryptocurrencies, nor are finance related. The implementation of a proof-of-concept application proposes the use of a blockchain for a specific case study: the exchange of meal vouchers of an institution amongst students. This is achieved using the decentralized platform Ethereum, which allows us to create a Smart Contract using the Solidity programming language to create a token that follows the Ethereum Request for Comment (ERC), the ERC-20 standard and represents the meal vouchers. This second application uses the architecture defined for YABW, reusing major components and custom developing specific modules to enhance the required features. There is still a lot of research to be done on the non-financial applicability of the Blockchain infrastructure and technology, but for the moment, we have left further evidence that it is possible and is a relative straight-forward process to accomplish from the technological perspective. © 2018 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 9; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Sibenik2022141,
	author = {Sibenik, Goran and Sreckovic, Marijana and Radu, Anca},
	title = {Modular process patterns in the design phase},
	year = {2022},
	journal = {Proceedings of the Institution of Civil Engineers: Smart Infrastructure and Construction},
	volume = {175},
	number = {4},
	pages = {141 – 151},
	doi = {10.1680/jsmic.21.00024},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147134746&doi=10.1680%2fjsmic.21.00024&partnerID=40&md5=c47a5f158d1c8a96f60a69e7ab63b51c},
	abstract = {Numerous stakeholders contribute to building projects during the design phase, prevailingly dealing with digital objects. The design phase is characterised by project-specific heterogeneous workflows that are not standardised. Available software tools still do not sufficiently support digital management of these building design workflows across the industry. However, single activities within the workflows are similar and constitute patterns that could allow for modularisation and eventual standardisation. An analysis of design protocols found on a document-exchange platform is performed to identify the processes within the workflows, including information about actors, activities and assets, and subsequently to recognise the patterns. High digitalisation potential is recognised on the activity level, due to numerous similarities and iterations detected between the analysed processes, mainly depending on the constellation of stakeholders. The results reveal information granularity that suffices for digitalisation of communication process flows. The proposed modular patterns represent the first step towards design workflow automation, facilitating the use of technologies such as blockchain and smart contracts.  © 2022 ICE Publishing: All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Farooq202110426,
	author = {Farooq, Usama and Ahmed, Mansoor and Hussain, Shahid and Hussain, Faraz and Naseem, Alia and Aslam, Khurram},
	title = {Blockchain-Based Software Process Improvement (BBSPI): An approach for SMEs to perform process improvement},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {10426 – 10442},
	doi = {10.1109/ACCESS.2021.3049904},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099545111&doi=10.1109%2fACCESS.2021.3049904&partnerID=40&md5=14c3a9d999e1e3b3937e514a0ab9983d},
	abstract = {Progressively, Software development organizations are investing their resources, time and, money on Software Process Improvement (SPI) since it is beneficial in the enhancement of product quality, reduction in development time, and cost of software projects. However, the existing methodologies and approaches are time-consuming and costly and their major focus is on the SPI of Large Scale Enterprises (LSEs) therefore, we are introducing blockchain in SPI to overcome its major issues such as reliance on a central body of standardization for certification, knowledge management, high cost, resource management and change in organizational culture, etc. We have performed an exploratory case study to identify the different barriers of traditional SPI approaches. To overcome the identified issues, we have proposed and implemented a new approach by performing two case studies. The first case study was performed to identify the barriers in traditional SPI approaches and the second case study was performed to validate our proposed approach. We have performed our experiments on 55 representatives of 50 organizations. According to the results of proposed approach 56.4% of the population agreed that the SPI cost will decrease, 61.8% agreed that time of SPI will decrease and 60.3% of the population agreed that BBSPI will decrease resource utilization. Moreover, 69.1% of the population agreed with the fact that proposed BBSPI will make effective knowledge management and 83.3% of the population said that an organization can mature its processes equaliant to the central certification (CMMI, ISO) body by employing proposed BBSPI. Our results affirm that the BBSPI can reduce the time, cost, resources and helps to manage knowledge used to perform SPI. Moreover, results also depict that the BBSPI can be an efficient substitute of central bodies that could help small and medium-sized organizations to conform to common process improvement models by spending less money, time, and resources with effective knowledge management. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@ARTICLE{Westerkamp2020167,
	author = {Westerkamp, Martin and Victor, Friedhelm and Küpper, Axel},
	title = {Tracing manufacturing processes using blockchain-based token compositions},
	year = {2020},
	journal = {Digital Communications and Networks},
	volume = {6},
	number = {2},
	pages = {167 – 176},
	doi = {10.1016/j.dcan.2019.01.007},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068508156&doi=10.1016%2fj.dcan.2019.01.007&partnerID=40&md5=fee2f1be82dd51b52aa33f0d920899c6},
	abstract = {Supply chain traceability is one of the most promising use cases to benefit from characteristics of blockchain, such as decentralization, immutability and transparency, not required to build prior trust relationships among entities. A plethora of supply chain traceability solutions based on blockchain has been proposed recently. However, current systems are limited to tracing simple goods that have not been part of the manufacturing process. We recommend a method that allows for the traceability of manufactured goods, including their components. Products are represented using non-fungible digital tokens that are created on a blockchain for each batch of manufactured products. To create a link between a product and the components that are needed to produce it, we propose “token recipes” that define the amount of tokenized goods required for minting a new token. As input tokens are automatically and transparently consumed when creating a product token, the physical process of producing a new item out of existing components is projected onto the ledger. This ultimately leads to the complete traceability of goods, including the origin of inputs. Evaluating the performance of the system, we show that a prototypical implementation for the Ethereum Virtual Machine (EVM) scales linearly with the amount of the input and goods tracked. © 2019 Chongqing University of Posts and Telecommunications},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 96; All Open Access, Gold Open Access}
}

@ARTICLE{Zhuang20231011,
	author = {Zhuang, Yuan and Wang, Baobao and Sun, Jianguo and Liu, Haoyang and Yang, Shuqi and Da, Qingan},
	title = {Deep Learning-Based Program-Wide Binary Code Similarity for Smart Contracts},
	year = {2023},
	journal = {Computers, Materials and Continua},
	volume = {74},
	number = {1},
	pages = {1011 – 1024},
	doi = {10.32604/cmc.2023.028058},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85139032142&doi=10.32604%2fcmc.2023.028058&partnerID=40&md5=49dc834791d46581b639a15ccb8d1d2a},
	abstract = {Recently, security issues of smart contracts are arising great attention due to the enormous financial loss caused by vulnerability attacks. There is an increasing need to detect similar codes for hunting vulnerability with the increase of critical security issues in smart contracts. Binary similarity detection that quantitatively measures the given code diffing has been widely adopted to facilitate critical security analysis. However, due to the difference between common programs and smart contract, such as diversity of bytecode generation and highly code homogeneity, directly adopting existing graph matching and machine learning based techniques to smart contracts suffers from low accuracy, poor scalability and the limitation of binary similarity on function level. Therefore, this paper investigates graph neural network to detect smart contract binary code similarity at the program level, where we conduct instruction-level normalization to reduce the noise code for smart contract pre-processing and construct contract control flow graphs to represent smart contracts. In particular, two improved Graph Convolutional Network (GCN) and Message Passing Neural Network (MPNN) models are explored to encode the contract graphs into quantitatively vectors, which can capture the semantic information and the program-wide control flow information with temporal orders. Then we can efficiently accomplish the similarity detection by measuring the distance between two targeted contract embeddings. To evaluate the effectiveness and efficient of our proposed method, extensive experiments are performed on two real-world datasets, i.e., smart contracts from Ethereum and Enterprise Operation System (EOS) blockchain-based platforms. The results show that our proposed approach outperforms three state-of-the-art methods by a large margin, achieving a great improvement up to 6.1% and 17.06% in accuracy. © 2023 Tech Science Press. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Pinna201978194,
	author = {Pinna, Andrea and Ibba, Simona and Baralla, Gavina and Tonelli, Roberto and Marchesi, Michele},
	title = {A Massive Analysis of Ethereum Smart Contracts Empirical Study and Code Metrics},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {78194 – 78213},
	doi = {10.1109/ACCESS.2019.2921936},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068230725&doi=10.1109%2fACCESS.2019.2921936&partnerID=40&md5=cf91b497aef0110e220cf7499e59e23c},
	abstract = {In this work, we perform a comprehensive empirical study of smart contracts deployed on the ethereum blockchain. The objective of the analysis is to provide empirical results on smart contracts features, smart contract transactions within the blockchain, the role of the development community, and the source code characteristics. We collected a set of more than 10000 smart contracts source codes and a dataset of meta-data regarding their interaction with the blockchain from etherscan.io. We examined the collected data computing different statistics on naming policies, smart contract ether balance, number of smart contract transactions, functions, and other quantities characterizing the use and purpose of smart contracts. We found that the number of transactions and the balances follow power-law distributions and the software code metrics display, on average, values lower than corresponding metrics in standard software but have high variances. Focusing the attention on the 20 smart contracts with the topmost number of transactions, we found that most of them represent financial smart contracts and some of them have peculiar software development stories behind them. The results show that blockchain software is rapidly changing and evolving and it is no longer devoted only to cryptovalues applications but to general purpose computation. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 58; All Open Access, Gold Open Access}
}

@ARTICLE{Fu2019147327,
	author = {Fu, Menglin and Wu, Lifa and Hong, Zheng and Zhu, Feng and Sun, He and Feng, Wenbo},
	title = {A critical-path-coverage-based vulnerability detection method for smart contracts},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {147327 – 147344},
	doi = {10.1109/ACCESS.2019.2947146},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077741680&doi=10.1109%2fACCESS.2019.2947146&partnerID=40&md5=a951d6d9f1451c3b862163f7f1cd0262},
	abstract = {The second generation of blockchain represented by smart contracts has been developing vigorously in recent years. However, frequent smart contract vulnerability incidents pose a serious risk to blockchain ecosystem security. Since current symbol execution tools often fall into path explosion and thus lead to inefficient detection, this paper expands Mythril's framework to optimize its performance. Firstly, it finds out potential vulnerable code regions using static analysis and identifies critical paths that may have security defects. Then, aiming at the problem that traditional search algorithms cannot actively locate and explore critical paths, this paper presents a multi-objective oriented path search (MOPS) strategy based on path priority. This strategy guides dynamic symbolic execution to cover critical paths quickly, avoiding blind traversal of program execution paths. Finally, it describes security rules and proposes corresponding detection logics for different vulnerability categories. This paper analyzes over 1000 smart contracts extracted from Etherscan. Compared with existing tools based on symbolic execution, the proposed method can reduce time consumption by around 35% while ensuring the accuracy of vulnerability detection. Moreover, existing tools often issue warnings that do not actually cause financial losses. But the proposed method only concentrates on code regions related to transfer of funds, so it can reduce the false alarm rate to some extent. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 11; All Open Access, Gold Open Access}
}

@CONFERENCE{Ashizawa202147,
	author = {Ashizawa, Nami and Yanai, Naoto and Cruz, Jason Paul and Okamura, Shingo},
	title = {Eth2Vec: Learning Contract-Wide Code Representations for Vulnerability Detection on Ethereum Smart Contracts},
	year = {2021},
	journal = {BSCI 2021 - Proceedings of the 3rd ACM International Symposium on Blockchain and Secure Critical Infrastructure, co-located with ASIA CCS 2021},
	pages = {47 – 59},
	doi = {10.1145/3457337.3457841},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85108340910&doi=10.1145%2f3457337.3457841&partnerID=40&md5=5cd92fc324c1d9effb4c6038e17995e1},
	abstract = {Ethereum smart contracts are programs that run on the Ethereum blockchain, and many smart contract vulnerabilities have been discovered in the past decade. Many security analysis tools have been created to detect such vulnerabilities, but their performance decreases drastically when codes to be analyzed are being rewritten. In this paper, we propose Eth2Vec, a machine-learning-based static analysis tool for vulnerability detection in smart contracts. It is also robust against code rewrites, i.e., it can detect vulnerabilities even in rewritten codes. Existing machine-learning-based static analysis tools for vulnerability detection need features, which analysts create manually, as inputs. In contrast, Eth2Vec automatically learns features of vulnerable Ethereum Virtual Machine (EVM) bytecodes with tacit knowledge through a neural network for natural language processing. Therefore, Eth2Vec can detect vulnerabilities in smart contracts by comparing the code similarity between target EVM bytecodes and the EVM bytecodes it already learned. We conducted experiments with existing open databases, such as Etherscan, and our results show that Eth2Vec outperforms a recent model based on support vector machine in terms of well-known metrics, i.e., precision, recall, and F1-score.  © 2021 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 24; All Open Access, Bronze Open Access, Green Open Access}
}

@CONFERENCE{Smirnov2019349,
	author = {Smirnov, Alexander and Sheremetov, Leonid and Teslya, Nikolay},
	title = {Fuzzy cooperative games usage in smart contracts for dynamic robot coalition formation: Approach and use case description},
	year = {2019},
	journal = {ICEIS 2019 - Proceedings of the 21st International Conference on Enterprise Information Systems},
	volume = {1},
	pages = {349 – 358},
	doi = {10.5220/0007763003610370},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85067519042&doi=10.5220%2f0007763003610370&partnerID=40&md5=5d5e7c6ed9491b2d0c70faac9b1507d5},
	abstract = {The paper describes an approach to dynamic formation of coalitions of independent robots based on the integration of fuzzy cooperative games and smart contracts. Each member of the coalition is represented in the form of an independent agent, negotiating at the stage of coalition formation for distribution of joint winnings. A cooperative game with fuzzy core is used to form a coalition allowing coordinating the actions of individual members to achieve a common goal, as well as to evaluate and distribute the overall benefit. To implement the negotiation process and store the responsibilities of individual participants, it is proposed to use the smart contract technology, which now become a part of the blockchain technology. Smart contracts are used as entity where the requirements and expected winnings of each participant are stored. The final agreement is also stored in form of smart contract that contains the distribution coefficients of the winnings given all the conditions of participation in the coalition. The availability of smart contracts to all coalition participants provides joint control over the fulfilment of the task assigned to the coalition. The paper describes a use case based on precision farming to illustrate the main concepts of the proposed approach. Copyright © 2019 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Mhamdi2022,
	author = {Mhamdi, Halima and Ayadi, Manel and Ksibi, Amel and Al-Rasheed, Amal and Soufiene, Ben Othman and Hedi, Sakli},
	title = {SEMRAchain: A Secure Electronic Medical Record Based on Blockchain Technology},
	year = {2022},
	journal = {Electronics (Switzerland)},
	volume = {11},
	number = {21},
	doi = {10.3390/electronics11213617},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141876711&doi=10.3390%2felectronics11213617&partnerID=40&md5=1b0d5ef1f6ae1cf283ff0ac6e87d0fa9},
	abstract = {A medical record is an important part of a patient’s follow-up. It comprises healthcare professionals’ views, prescriptions, analyses, and all information about the patient. Several players, including the patient, the doctor, and the pharmacist, are involved in the process of sharing, and managing this file. Any authorized individual can access the electronic medical record (EMR) from anywhere, and the data are shared among various health service providers. Sharing the EMR requires various conditions, such as security and confidentiality. However, existing medical systems may be exposed to system failure and malicious intrusions, making it difficult to deliver dependable services. Additionally, the features of these systems represent a challenge for centralized access control methods. This paper presents SEMRAchain a system based on Access control (Role-Based Access Control (RBAC), Attribute-Based Access Control (ABAC)) and a smart contract approach. This fusion enables decentralized, fine-grained, and dynamic access control management for EMR management. Together, blockchain technology as a secure distributed ledger and access control provides such a solution, providing system stakeholders with not just visibility but also trustworthiness, credibility, and immutability. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Nielsen2020380,
	author = {Nielsen, Jakob Botsch and Spitters, Bas},
	title = {Smart contract interactions in coq},
	year = {2020},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {12232 LNCS},
	pages = {380 – 391},
	doi = {10.1007/978-3-030-54994-7_29},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85089717909&doi=10.1007%2f978-3-030-54994-7_29&partnerID=40&md5=5cedcc6b43064d9d2b31e106665f031f},
	abstract = {We present a model/executable specification of smart contract execution in Coq. Our formalization allows for inter-contract communication and generalizes existing work by allowing modelling of both depth-first execution blockchains (like Ethereum) and breadth-first execution blockchains (like Tezos). We represent smart contracts programs in Coq’s functional language Gallina, enabling easier reasoning about functional correctness of concrete contracts than other approaches. In particular we develop a Congress contract in this style. This contract – a simplified version of the infamous DAO – is interesting because of its very dynamic communication pattern with other contracts. We give a high-level partial specification of the Congress’s behavior, related to reentrancy, and prove that the Congress satisfies it for all possible smart contract execution orders. © Springer Nature Switzerland AG 2020.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@ARTICLE{van Hillegersberg202082,
	author = {van Hillegersberg, Jos and Hedman, Jonas},
	title = {Smart Contracts for Global Sourcing Arrangements},
	year = {2020},
	journal = {Lecture Notes in Business Information Processing},
	volume = {410},
	pages = {82 – 92},
	doi = {10.1007/978-3-030-66834-1_5},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101402818&doi=10.1007%2f978-3-030-66834-1_5&partnerID=40&md5=5ead622e7e093fa28f9dade1768cc5a3},
	abstract = {While global sourcing arrangements are highly complex and usually represent large value to the partners, little is known of the use of e-contracts or smart contracts and contract management systems to enhance the contract management process. In this paper we assess the potential of emerging technologies for global sourcing. We review current sourcing contract issues and evaluate three technologies that have been applied to enhance contracting processes. These are (1) semantic standardisation, (2) cognitive technologies and (3) smart contracts and blockchain. We discuss that each of these seem to have their merit for contract management and potentially can contribute to contract management in more complex and dynamic sourcing arrangements. The combination and configuration in which these three technologies will provide value to sourcing should be on the agenda for future research in sourcing contract management. © 2020, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Arcenegui2021,
	author = {Arcenegui, Javier and Arjona, Rosario and Román, Roberto and Baturone, Iluminada},
	title = {Secure combination of iot and blockchain by physically binding iot devices to smart non-fungible tokens using pufs},
	year = {2021},
	journal = {Sensors},
	volume = {21},
	number = {9},
	doi = {10.3390/s21093119},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104952146&doi=10.3390%2fs21093119&partnerID=40&md5=a6a88df961a5af4705fd1ec2c15c008a},
	abstract = {Non-fungible tokens (NFTs) are widely used in blockchain to represent unique and non-interchangeable assets. Current NFTs allow representing assets by a unique identifier, as a possession of an owner. The novelty introduced in this paper is the proposal of smart NFTs to represent IoT devices, which are physical smart assets. Hence, they are also identified as the utility of a user, they have a blockchain account (BCA) address to participate actively in the blockchain transactions, they can establish secure communication channels with owners and users, and they operate dynamically with several modes associated with their token states. A smart NFT is physically bound to its IoT device thanks to the use of a physical unclonable function (PUF) that allows recovering its private key and, then, its BCA address. The link between tokens and devices is difficult to break and can be traced during their lifetime, because devices execute a secure boot and carry out mutual authentication processes with new owners and users that could add new software. Hence, devices prove their trusted hardware and software. A whole demonstration of the proposal developed with ESP32-based IoT devices and Ethereum blockchain is presented, using the SRAM of the ESP32 microcontroller as the PUF. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 27; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Mukhtar202076,
	author = {Mukhtar, Arwa and Romli, Awanis and Mohd, Noorhuzaimi Karimah},
	title = {Blockchain network model to improve supply chain visibility based on smart contract},
	year = {2020},
	journal = {International Journal of Advanced Computer Science and Applications},
	volume = {11},
	number = {10},
	pages = {76 – 82},
	doi = {10.14569/IJACSA.2020.0111010},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101602029&doi=10.14569%2fIJACSA.2020.0111010&partnerID=40&md5=8f05242e46b2e060b367018cb6f395be},
	abstract = {—Due to the increasing complexity of supply chains over the past years, many factors significantly contribute to lowering the supply chains performance. Poor visibility is one of the major challenging factors that lowers supply chains performance. This paper proposes a Blockchain-based supply chain network model to improve the supply chain visibility. The model focuses in improving the visibility measurements properties: information sharing, traceability, and inventory visibility. The proposed model consists of information sharing, traceability, and inventory visibility platforms based on Blockchain technology smart contract. The model built with Hyperledger platform and extend the Hyperledger Composer Supply Chain Network (HCSC) model. The research is designed to three main phases. First phase: the preliminary phase which is the literature review phase to identify the existing challenges in the domain. The second phase: the design and implementation phase which is the development steps of the proposed research model. The third phase: the evaluation phase which represent the performance evaluation of the proposed model and the comparisons between the proposed model and the existing models. In the evaluation performance, the common performance metrics Lead time and average inventory levels will be compared in the proposed model, Cloud-based information system, and the traditional supply chain. These proposed platforms offer an end-to-end visibility of products, orders, and stock levels for supply chain practitioners and customers within supply chain networks. Which helps managers’ access key information that support critical business decisions and offers essential criteria for competitiveness and therefore, enhance supply chain performance. © 2020 Science and Information Organization. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Roman2019258,
	author = {Roman, Dumitru and Vu, Kien},
	title = {Enabling data markets using smart contracts and multi-party computation},
	year = {2019},
	journal = {Lecture Notes in Business Information Processing},
	volume = {339},
	pages = {258 – 263},
	doi = {10.1007/978-3-030-04849-5_23},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061610272&doi=10.1007%2f978-3-030-04849-5_23&partnerID=40&md5=9f5f1c3b14cea78f7482dd36953d7940},
	abstract = {With the emergence of data markets, data have become an asset that is used as part of transactions. Current data markets rely on trusted third parties to manage the data, creating single points of failure with possibly disastrous consequences on data privacy and security. The lack of technical solutions to enforce strong privacy and security guarantees leaves the data markets’ stakeholders (e.g., buyers and sellers of data) vulnerable when they transact data. Smart Contracts and Multi-Party Computation represent examples of emerging technologies that have the potential to guarantee the desired levels of data privacy and security. In this paper, we propose an architecture for data markets based on Smart Contracts and Multi-Party Computation and present a proof of concept prototype developed to demonstrate the feasibility of the proposed architecture. © Springer Nature Switzerland AG 2019.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@ARTICLE{Fei2023,
	author = {Fei, Jiajia and Chen, Xiaohan and Zhao, Xiangfu},
	title = {MSmart: Smart Contract Vulnerability Analysis and Improved Strategies Based on Smartcheck},
	year = {2023},
	journal = {Applied Sciences (Switzerland)},
	volume = {13},
	number = {3},
	doi = {10.3390/app13031733},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85148035079&doi=10.3390%2fapp13031733&partnerID=40&md5=0a0ddf680620fb878cd4f8ff944e68f9},
	abstract = {As is well known, smart contracts on the blockchain store plenty of digital assets, and these contracts deployed on the blockchain are difficult to be modified. For this reason, the analysis and detection of smart contract vulnerabilities have received extensive attention. Smartcheck, a typical Java-implemented static analysis tool of smart contracts, is capable of converting Solidity source code into path diagrams based on the lexical and syntactic analysis, and finds smart contract vulnerabilities by path matching. Although Smartcheck can analyze most of the real-world vulnerabilities, some imperceptible vulnerabilities may be ignored, causing huge economic losses. In order to address these issues, we develop a new tool named MSmart to analyze the vulnerabilities of high risk such as timestamp dependence vulnerabilities, integer overflow vulnerabilities, self-destruct vulnerabilities, etc. MSmart converts the smart contract source code into an intermediate representation, and looks for smart contract vulnerabilities based on intermediate representation and XPath rules. We add new intermediate representation rules of Smartcheck to detect more kinds of vulnerabilities and optimize existing rules to suit the complexity of smart contract. We also implemented smart contract batch detection to shorten the time it takes to find vulnerabilities. To analysis the performance of MSmart, we collect 6000 real-world contracts from Etherscan and design some comparative experiments with other tools. The results of experiment show that MSmart is able to analyze related vulnerabilities better, and false positives and false negatives have been reduced due to our improvements. © 2023 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Li2019410,
	author = {Li, Yuhong and Rahmani, Rahim and Fouassier, Nicolas and Stenlund, Peik and Ouyang, Kun},
	title = {A blockchain-based architecture for stable and trustworthy smart grid},
	year = {2019},
	journal = {Procedia Computer Science},
	volume = {155},
	pages = {410 – 416},
	doi = {10.1016/j.procs.2019.08.057},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074714876&doi=10.1016%2fj.procs.2019.08.057&partnerID=40&md5=679fe279e950bfd529167a8172cfddcb},
	abstract = {Smart Grid represents an efficient power transmission, distribution and management system. However, solutions for Smart Grid have raised security and privacy problems. Moreover, with the introduction of renewable energy resources, such as rooftop solar panels and small biogas plants, more and more electricity consumers are involved in the energy generation system. This may cause the power system unstable and/or the waste of the energy. Blockchain is a promising technology for solving these problems in the future energy system on account of its distributed trust, anonymity, data integrity and availability. In this paper, we propose a Blockchain-based architecture for Smart Grid. By using the proposed architecture, electricity consumers can be fully involved in the energy system and tracing the details of the energy they have consumed or generated. At the same time, the stability of the energy system can be kept, reducing the waste of the energy and potential hazard to the electrical equipment. © 2019 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/) Peer-review under responsibility of the Conference Program Chairs.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Gold Open Access}
}

@ARTICLE{Nam20228151,
	author = {Nam, Wonhong and Kil, Hyunyoung},
	title = {Formal Verification of Blockchain Smart Contracts via ATL Model Checking},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {8151 – 8162},
	doi = {10.1109/ACCESS.2022.3143145},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123274797&doi=10.1109%2fACCESS.2022.3143145&partnerID=40&md5=fa1db4cff84d3b016435b0bd0179bdf0},
	abstract = {A blockchain is a list of data blocks as a publicly distributed ledger, which are linked together using cryptography. By allowing Turing-complete programming languages to implement smart contracts, recent blockchains such as Ethereum can reduce needs in trusted intermediators, arbitrations and enforcement costs. However, subtle errors in smart contracts have induced an enormous financial loss-for examples, the DAO attack, Parity multisignature wallet attacks, and integer underflow/overflow attacks. To identify such errors in smart contracts, various researches are performed, which are based on static analysis and theorem proving. However, they only support inspection for pre-defined error patterns, or they cannot explore the whole searching space exhaustively or be fully automatic. Hence, in this paper, we propose a novel formal verification technique to analyze blockchain smart contracts by using ATL model checking. In our methodology, we represent the interaction between users and smart contracts into a two-player game and verify properties we want to check using MCMAS that is an efficient ATL model checker for multi-agent systems. Moreover, we present three case studies to show that our proposal can successfully identify subtle flaws in real world smart contracts. This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@CONFERENCE{Li2021458,
	author = {Li, Yanghuan and Wei, Jinhui and Yuan, Junbin and Xu, Qingzhen and He, Chengying},
	title = {A Decentralized Music Copyright Operation Management System Based on Blockchain Technology},
	year = {2021},
	journal = {Procedia Computer Science},
	volume = {187},
	pages = {458 – 463},
	doi = {10.1016/j.procs.2021.04.084},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112549834&doi=10.1016%2fj.procs.2021.04.084&partnerID=40&md5=75d289d76442090273c7f9697f908878},
	abstract = {With the rapid development of the Internet, online music has become a new trend. The low cost of access and fast spread speed greatly enriches people's spiritual life, but it also poses great challenges to the protection of intellectual property rights. Nowadays, although the intellectual property rights of music works have been better valued and protected, there are still some problems that limit the development of the music industry and affect the users' experience. For example, the copyrights of different music works may be exclusively represented by different companies, resulting in limited choices for users and vicious competition among music operating companies, which affects the users' experience and is not conducive to the long-term development of the music industry. In order to solve the above problems, we present a decentralized music copyright operation management system based on Blockchain technology. By using the Blockchain's shared ledger mechanism and smart contracts as the basic framework of the Ethereum platform, we realize decentralized music copyright management. The system not only protects copyright better, but also coordinates the interests of creators, copyright owners, operators and users, which is beneficial to the further development of the music industry, and creates more value and better experience for users. © 2021 Elsevier B.V.. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@CONFERENCE{Li20209,
	author = {Li, Chao and Palanisamy, Balaji},
	title = {EventWarden: A Decentralized Event-driven Proxy Service for Outsourcing Arbitrary Transactions in Ethereum-like Blockchains},
	year = {2020},
	journal = {Proceedings - 2020 IEEE 13th International Conference on Web Services, ICWS 2020},
	pages = {9 – 16},
	doi = {10.1109/ICWS49710.2020.00009},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099291662&doi=10.1109%2fICWS49710.2020.00009&partnerID=40&md5=a890efb6c0d656cf03fcaae4216fcf6b},
	abstract = {Transactions represent a fundamental component in blockchains as they are the primary means for users to change the blockchain state. Current blockchain systems such as Bitcoin and Ethereum require users to constantly observe the state changes of interest or the events taking place in a blockchain and requires the user to explicitly release the required transactions to respond to the observed events in the blockchain. This paper proposes EventWarden, a decentralized event-driven proxy service for users to outsource transactions in Ethereum-like blockchains. EventWarden employs a novel combination of smart contracts and blockchain logs. EventWarden allows a user to create a proxy smart contract that specifies an interested event and also reserves an arbitrary transaction to release. Upon observing the occurrence of the prescribed event, anyone in the Blockchain network can call the proxy contract to earn the service fee reserved in the contract by proving to the contract that the event has been recorded into blockchain logs, which then automatically triggers the proxy contract to release the reserved transaction. We show that the reserved transaction can only get released from the proxy contract when the prescribed event has taken place. We also demonstrate that as long as a single member in the Blockchain network is incentivized by the service fee to call the proxy contract after the prescribed event has taken place, the reserved transaction is guaranteed to get released. We implement EventWarden over the Ethereum official test network. The results demonstrate that EventWarden is effective and is ready-to-use in practice.  © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Tong2022,
	author = {Tong, Yu and Tan, Weiming and Guo, Jingzhi and Shen, Bingqing and Qin, Peng and Zhuo, Shuaihe},
	title = {Smart Contract Generation Assisted by AI-Based Word Segmentation},
	year = {2022},
	journal = {Applied Sciences (Switzerland)},
	volume = {12},
	number = {9},
	doi = {10.3390/app12094773},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130226881&doi=10.3390%2fapp12094773&partnerID=40&md5=0ec15a3d4b2edf5b371618aa55df83ee},
	abstract = {In the last decade, blockchain smart contracts emerged as an automated, decentralized, traceable, and immutable medium of value exchange. Nevertheless, existing blockchain smart contracts are not compatible with legal contracts. The automatic execution of a legal contract written in natural language is an open research question that can extend the blockchain ecosystem and inspire next-era business paradigms. In this paper, we propose an AI-assisted Smart Contract Generation (AIASCG) framework that allows contracting parties in heterogeneous contexts and different languages to collaboratively negotiate and draft the contract clauses. AIASCG provides a universal representation of contracts through the machine natural language (MNL) as the common understanding of the contract obligations. We compare the design of AIASCG with existing smart contract generation approaches to present its novelty. The main contribution of AIASCG is to address the issue in our previous proposed smart contract generation framework. For sentences written in natural language, existing framework requires editors to manually split sentences into words with semantic meaning. We propose an AI-based automatic word segmentation technique called Separation Inference (SpIn) to fulfill automatic split of the sentence. SpIn serves as the core component in AIASCG that accurately recommends the intermediate MNL outputs from a natural language sentence, tremendously reducing the manual effort in contract generation. SpIn is evaluated from a robustness and human satisfaction point of view to demonstrate its effectiveness. In the robustness evaluation, SpIn achieves state-of-the-art F1 scores and Recall of Out-of-Vocabulary (R_OOV) words on multiple word segmentation tasks. In addition, in the human evaluation, participants believe that 88.67% of sentences can be saved 80–100% of the time through automatic word segmentation. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Abijaude2022,
	author = {Abijaude, Jauberth and Sobreira, Péricles and Santiago, Levy and Greve, Fabíola},
	title = {Improving Data Security with Blockchain and Internet of Things in the Gourmet Cocoa Bean Fermentation Process†},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {8},
	doi = {10.3390/s22083029},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128187357&doi=10.3390%2fs22083029&partnerID=40&md5=4abe00fea51e5cdb5869991a941c316a},
	abstract = {Brazil was one of the largest cocoa producers in the world, mainly supported by the South of Bahia region. After the 1980s, the witch-broom disease demolished plantations, and farmers were forced into bankruptcy. The worldwide search for gourmet cocoa has rekindled interest in this production, whose fermentation process is a key step in obtaining fine cocoa, thanks to the fact that many processing properties and sensory attributes are developed in this phase. This article presents a blockchain-IoT-based system for the control and monitoring of these events, aiming to catalog in smart contracts valuable information for improvement of the cocoa fermentation process, and future research. Blockchain is used as a distributed database that implements an application-level security layer. A proof of concept was modeled and the performance of the emulated system was evaluated in the OMNet simulator, where a technique based on the SNMP protocol was applied to reduce the amount of data exchanged and resources served/consumed in this representation. Then, a physical platform was developed and preliminary experiments were performed on a real farm, as a way to verify the improvement of the cocoa fermentation process when using a technological approach. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Damle2021,
	author = {Damle, Sankarshan and Gujar, Sujit and Moti, Moin Hussain},
	title = {FASTEN: Fair and secure distributed voting using smart contracts},
	year = {2021},
	journal = {IEEE International Conference on Blockchain and Cryptocurrency, ICBC 2021},
	doi = {10.1109/ICBC51069.2021.9461060},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114450680&doi=10.1109%2fICBC51069.2021.9461060&partnerID=40&md5=f0d773818f5aa2b7af115728aed7587a},
	abstract = {Electing democratic representatives via voting has been a common mechanism since the 17th century. However, these mechanisms raise concerns about fairness, privacy, vote concealment, fair calculations of tally, and proxies voting on their behalf for the voters. Ballot voting, and in recent times, electronic voting via electronic voting machines (EVMs) improves fairness by relying on centralized trust. Homomorphic encryption-based voting protocols also assure fairness but cannot scale to large scale elections such as presidential elections. In this paper, we leverage the blockchain technology of distributing trust to propose a smart contract-based protocol, namely, FASTEN. There are many existing protocols for voting using smart contracts. We observe that these either are not scalable or leak the vote tally during the voting stage, i.e., do not provide vote concealment. In contrast, we show that FASTEN preserves voter's privacy ensures vote concealment, immutability, and avoids double voting. We prove that the probability of privacy breaches is negligibly small. Further, our cost analysis of executing FASTEN over Ethereum is comparable to most of the existing cost of elections.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Green Open Access}
}

@ARTICLE{Musamih2021145397,
	author = {Musamih, Ahmad and Jayaraman, Raja and Salah, Khaled and Hasan, Haya R. and Yaqoob, Ibrar and Al-Hammadi, Yousof},
	title = {Blockchain-Based Solution for the Administration of Controlled Medication},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {145397 – 145414},
	doi = {10.1109/ACCESS.2021.3121545},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118279905&doi=10.1109%2fACCESS.2021.3121545&partnerID=40&md5=dbe8384d9e0151dca6a46e377a27d997},
	abstract = {Controlled drugs are open to abuse, misuse, and diversion. Therefore, they are regulated and tracked across the healthcare sector to protect the health of the general public which is a highly prioritized rule in the health professional's code of ethics. Healthcare centers that provide controlled medication to patients are still using manual papers to record controlled drugs production, delivery, prescription, administration, and disposal which causes delays in the system. Moreover, instances of controlled drugs misuse, abuse, and diversion still exist, which shows how the currently used system is inefficient in detecting such activities. Therefore, to ensure that the public health is safe and secure, an end-to-end system that tracks the whole healthcare supply chain is necessary. In this paper, we introduce a private Ethereum blockchain-based solution for the management of controlled medication. We ensure transparency, accountability, security, and data provenance by developing smart contracts that record all actions on an immutable ledger. We utilize off-chain storage, which is represented in the IPFS to store content that is large in size such as images. We present algorithms of the different phases in the proposed solution to illustrate how each phase will be carried out. We showcase the functionality of the proposed solution by performing tests and validating the smart contracts. We assess the performance of the proposed solution by conducting privacy, security, and confidentiality analysis. Performance evaluation shows that our solution is secure against common attacks and vulnerabilities and preserves the privacy and confidentiality of the patients. The smart contracts code is made publicly available along with the testing scripts. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@ARTICLE{Figueroa2019,
	author = {Figueroa, Santiago and Añorga, Javier and Arrizabalaga, Saioa},
	title = {An attribute-based access control model in RFID systems based on blockchain decentralized applications for healthcare environments},
	year = {2019},
	journal = {Computers},
	volume = {8},
	number = {3},
	doi = {10.3390/computers8030057},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85070718598&doi=10.3390%2fcomputers8030057&partnerID=40&md5=a1560c46bb5e65b58f1c8a30c8f4250b},
	abstract = {The growing adoption of Radio-frequency Identification (RFID) systems, particularly in the healthcare field, demonstrates that RFID is a positive asset for healthcare institutions. RFID offers the ability to save organizations time and costs by enabling data of traceability, identification, communication, temperature and location in real time for both people and resources. However, the RFID systems challenges are financial, technical, organizational and above all privacy and security. For this reason, recent works focus on attribute-based access control (ABAC) schemes. Currently, ABAC are based on mostly centralized models, which in environments such as the supply chain can present problems of scalability, synchronization and trust between the parties. In this manuscript, we implement an ABAC model in RFID systems based on a decentralized model such as blockchain. Common criteria for the selection of the appropriate blockchain are detailed. Our access control policies are executed through the decentralized application (DApp), which interfaces with the blockchain through the smart contract. Smart contracts and blockchain technology, on the one hand, solve current centralized systems issues as well as being flexible infrastructures that represent the relationship of trust and support essential in the ABAC model in order to provide the security of RFID systems. Our system has been designed for a supply chain environment with an use case suitable for healthcare systems, so that assets such as surgical instruments containing an associated RFID tag can only access to specific areas. Our system is deployed in both a local and Testnet environment in order to stablish a deep comparison and determining the technical feasibility. © 2019 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 27; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Wu2019100090,
	author = {Wu, Jiapeng and Xiong, Feng and Li, Cheng},
	title = {Application of internet of things and blockchain technologies to improve accounting information quality},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {100090 – 100098},
	doi = {10.1109/ACCESS.2019.2930637},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097334962&doi=10.1109%2fACCESS.2019.2930637&partnerID=40&md5=e9dbbb11305cdc494c13f24e2761890d},
	abstract = {Following the rapid development and the maturity of blockchain (BC) and the Internet of Things (IoT) technologies, this paper proposes two applications of a BC-IoT transaction model in the accounting field. The BC-IoT transaction model is capable of automatically collecting, uploading, and recording all relevant data in the enterprise transaction process under the premise of satisfying certain assumptions. This model does not require manual intervention at any point in the process; no data recorded on the distributed ledgers can be tampered with or revoked. The data collected using this model can be used as information on events, providing data support for the events approach to basic accounting theory. This practice responds to the important insight of sorter, who proposes the provision of accounting information in real time and on demand to substantially improve the usefulness of accounting information. This paper also identifies that BC technology can significantly improve the relevance, faithful representation, timeliness, comparability, and other aspects of accounting information quality. © 2019 Institute of Electrical and Electronics Engineers Inc.. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Gold Open Access}
}

@CONFERENCE{Chen2022281,
	author = {Chen, Haoxian and Whitters, Gerald and Amiri, Mohammad Javad and Wang, Yuepeng and Loo, Boon Thau},
	title = {Declarative smart contracts},
	year = {2022},
	journal = {ESEC/FSE 2022 - Proceedings of the 30th ACM Joint Meeting European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages = {281 – 293},
	doi = {10.1145/3540250.3549121},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143057513&doi=10.1145%2f3540250.3549121&partnerID=40&md5=dbb622d67b0ef05869e8a1d297d16101},
	abstract = {This paper presents DeCon, a declarative programming language for implementing smart contracts and specifying contract-level properties. Driven by the observation that smart contract operations and contract-level properties can be naturally expressed as relational constraints, DeCon models each smart contract as a set of relational tables that store transaction records. This relational representation of smart contracts enables convenient specification of contract properties, facilitates run-time monitoring of potential property violations, and brings clarity to contract debugging via data provenance. Specifically, a DeCon program consists of a set of declarative rules and violation query rules over the relational representation, describing the smart contract implementation and contract-level properties, respectively. We have developed a tool that can compile DeCon programs into executable Solidity programs, with instrumentation for run-time property monitoring. Our case studies demonstrate that DeCon can implement realistic smart contracts such as ERC20 and ERC721 digital tokens. Our evaluation results reveal the marginal overhead of DeCon compared to the open-source reference implementation, incurring 14% median gas overhead for execution, and another 16% median gas overhead for run-time verification.  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Ashizawa2022,
	author = {Ashizawa, Nami and Yanai, Naoto and Cruz, Jason Paul and Okamura, Shingo},
	title = {Eth2Vec: Learning contract-wide code representations for vulnerability detection on Ethereum smart contracts},
	year = {2022},
	journal = {Blockchain: Research and Applications},
	volume = {3},
	number = {4},
	doi = {10.1016/j.bcra.2022.100101},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141866795&doi=10.1016%2fj.bcra.2022.100101&partnerID=40&md5=37eeb56afe4c76f6049ec725df9225bb},
	abstract = {Ethereum smart contracts are computer programs that are deployed and executed on the Ethereum blockchain to enforce agreements among untrusting parties. Being the most prominent platform that supports smart contracts, Ethereum has been targeted by many attacks and plagued by security incidents. Consequently, many smart contract vulnerabilities have been discovered in the past decade. To detect and prevent such vulnerabilities, different security analysis tools, including static and dynamic analysis tools, have been created, but their performance decreases drastically when codes to be analyzed are constantly being rewritten. In this paper, we propose Eth2Vec, a machine-learning-based static analysis tool that detects smart contract vulnerabilities. Eth2Vec maintains its robustness against code rewrites; i.e., it can detect vulnerabilities even in rewritten codes. Other machine-learning-based static analysis tools require features, which analysts create manually, as inputs. In contrast, Eth2Vec uses a neural network for language processing to automatically learn the features of vulnerable contracts. In doing so, Eth2Vec can detect vulnerabilities in smart contracts by comparing the similarities between the codes of a target contract and those of the learned contracts. We performed experiments with existing open databases, such as Etherscan, and Eth2Vec was able to outperform a recent model based on support vector machine in terms of well-known metrics, i.e., precision, recall, and F1-score. © 2022 The Authors},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Bronze Open Access, Green Open Access}
}

@ARTICLE{Qian202019685,
	author = {Qian, Peng and Liu, Zhenguang and He, Qinming and Zimmermann, Roger and Wang, Xun},
	title = {Towards Automated Reentrancy Detection for Smart Contracts Based on Sequential Models},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {19685 – 19695},
	doi = {10.1109/ACCESS.2020.2969429},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85079788399&doi=10.1109%2fACCESS.2020.2969429&partnerID=40&md5=45532dfcbcd73d67396d001ed1729e63},
	abstract = {In the last decade, smart contract security issues lead to tremendous losses, which has attracted increasing public attention both in industry and in academia. Researchers have embarked on efforts with logic rules, symbolic analysis, and formal analysis to achieve encouraging results in smart contract vulnerability detection tasks. However, the existing detection tools are far from satisfactory. In this paper, we attempt to utilize the deep learning-based approach, namely bidirectional long-short term memory with attention mechanism (BLSTM-ATT), aiming to precisely detect reentrancy bugs. Furthermore, we propose contract snippet representations for smart contracts, which contributes to capturing essential semantic information and control flow dependencies. Our extensive experimental studies on over 42,000 real-world smart contracts show that our proposed model and contract snippet representations significantly outperform state-of-the-art methods. In addition, this work proves that it is practical to apply deep learning-based technology on smart contract vulnerability detection, which is able to promote future research towards this area. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 36; All Open Access, Gold Open Access}
}

@ARTICLE{Xu2022,
	author = {Xu, Ronghua and Chen, Yu and Chen, Genshe and Blasch, Erik},
	title = {SAUSA: Securing Access, Usage, and Storage of 3D Point CloudData by a Blockchain-Based Authentication Network},
	year = {2022},
	journal = {Future Internet},
	volume = {14},
	number = {12},
	doi = {10.3390/fi14120354},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85144595637&doi=10.3390%2ffi14120354&partnerID=40&md5=27da25326ead9a7f0e2c634903d86b7b},
	abstract = {The rapid development of three-dimensional (3D) acquisition technology based on 3D sensors provides a large volume of data, which are often represented in the form of point clouds. Point cloud representation can preserve the original geometric information along with associated attributes in a 3D space. Therefore, it has been widely adopted in many scene-understanding-related applications such as virtual reality (VR) and autonomous driving. However, the massive amount of point cloud data aggregated from distributed 3D sensors also poses challenges for secure data collection, management, storage, and sharing. Thanks to the characteristics of decentralization and security, Blockchain has great potential to improve point cloud services and enhance security and privacy preservation. Inspired by the rationales behind the software-defined network (SDN) technology, this paper envisions SAUSA, a Blockchain-based authentication network that is capable of recording, tracking, and auditing the access, usage, and storage of 3D point cloud datasets in their life-cycle in a decentralized manner. SAUSA adopts an SDN-inspired point cloud service architecture, which allows for efficient data processing and delivery to satisfy diverse quality-of-service (QoS) requirements. A Blockchain-based authentication framework is proposed to ensure security and privacy preservation in point cloud data acquisition, storage, and analytics. Leveraging smart contracts for digitizing access control policies and point cloud data on the Blockchain, data owners have full control of their 3D sensors and point clouds. In addition, anyone can verify the authenticity and integrity of point clouds in use without relying on a third party. Moreover, SAUSA integrates a decentralized storage platform to store encrypted point clouds while recording references of raw data on the distributed ledger. Such a hybrid on-chain and off-chain storage strategy not only improves robustness and availability, but also ensures privacy preservation for sensitive information in point cloud applications. A proof-of-concept prototype is implemented and tested on a physical network. The experimental evaluation validates the feasibility and effectiveness of the proposed SAUSA solution. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Leal2021,
	author = {Leal, Fátima and Chis, Adriana E. and Caton, Simon and González–Vélez, Horacio and García–Gómez, Juan M. and Durá, Marta and Sánchez–García, Angel and Sáez, Carlos and Karageorgos, Anthony and Gerogiannis, Vassilis C. and Xenakis, Apostolos and Lallas, Efthymios and Ntounas, Theodoros and Vasileiou, Eleni and Mountzouris, Georgios and Otti, Barbara and Pucci, Penelope and Papini, Rossano and Cerrai, David and Mier, Mariola},
	title = {Smart Pharmaceutical Manufacturing: Ensuring End-to-End Traceability and Data Integrity in Medicine Production},
	year = {2021},
	journal = {Big Data Research},
	volume = {24},
	doi = {10.1016/j.bdr.2020.100172},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099646510&doi=10.1016%2fj.bdr.2020.100172&partnerID=40&md5=023dc76d4de89f666e767d060ae7c124},
	abstract = {Production lines in pharmaceutical manufacturing generate numerous heterogeneous data sets from various embedded systems which control the multiple processes of medicine production. Such data sets should arguably ensure end-to-end traceability and data integrity in order to release a medicine batch, which is uniquely identified and tracked by its batch number/code. Consequently, auditable computerised systems are crucial on pharmaceutical production lines, since the industry is becoming increasingly regulated for product quality and patient health purposes. This paper describes the EU-funded SPuMoNI project, which aims to ensure the quality of large amounts of data produced by computerised production systems in representative pharmaceutical environments. Our initial results include significant progress in: (i) end-to-end verification taking advantage of blockchain properties and smart contracts to ensure data authenticity, transparency, and immutability; (ii) data quality assessment models to identify data behavioural patterns that can violate industry practices and/or international regulations; and (iii) intelligent agents to collect and manipulate data as well as perform smart decisions. By analysing multiple sensors in medicine production lines, manufacturing work centres, and quality control laboratories, our approach has been initially evaluated using representative industry-grade pharmaceutical manufacturing data sets generated at an IT environment with regulated processes inspected by regulatory and government agencies. © 2021 The Author(s)},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 23; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Li20211,
	author = {Li, Xiaoyun and Zheng, Zibin and Dai, Hong-Ning},
	title = {When services computing meets blockchain: Challenges and opportunities},
	year = {2021},
	journal = {Journal of Parallel and Distributed Computing},
	volume = {150},
	pages = {1 – 14},
	doi = {10.1016/j.jpdc.2020.12.003},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098694241&doi=10.1016%2fj.jpdc.2020.12.003&partnerID=40&md5=716f85f4133508386835bad32cc17711},
	abstract = {Services computing can offer a high-level abstraction to support diverse applications via encapsulating various computing infrastructures. Though services computing has greatly boosted the productivity of developers, it is faced with three main challenges: privacy and security risks, information silo, and pricing mechanisms and incentives. The recent advances of blockchain bring opportunities to address the challenges of services computing due to its build-in encryption as well as digital signature schemes, decentralization feature, and intrinsic incentive mechanisms. In this paper, we present a survey to investigate the integration of blockchain with services computing. The integration of blockchain with services computing mainly exhibits merits in two aspects: i) blockchain can potentially address key challenges of services computing and ii) services computing can also promote blockchain development. In particular, we categorize the current literature of services computing based on blockchain into five types: services creation, services discovery, services recommendation, services composition, and services arbitration. Moreover, we generalize Blockchain as a Service (BaaS) architecture and summarize the representative BaaS platforms. In addition, we also outline open issues of blockchain-based services computing and BaaS. © 2020 Elsevier Inc.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 19; All Open Access, Green Open Access}
}

@ARTICLE{Lyu20231625,
	author = {Lyu, Qiuyun and Ma, Chenhao and Shen, Yanzhao and Jiao, Shaopeng and Sun, Yipeng and Hu, Liqin},
	title = {Analyzing Ethereum Smart Contract Vulnerabilities at Scale Based on Inter-Contract Dependency},
	year = {2023},
	journal = {CMES - Computer Modeling in Engineering and Sciences},
	volume = {135},
	number = {2},
	pages = {1625 – 1647},
	doi = {10.32604/cmes.2022.021562},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85142377346&doi=10.32604%2fcmes.2022.021562&partnerID=40&md5=8640ca5aeba961020fcc17b1eab1f20a},
	abstract = {Smart contracts running on public blockchains are permissionless and decentralized, attracting both developers and malicious participants. Ethereum, the world’s largest decentralized application platform on which more than 40 million smart contracts are running, is frequently challenged by smart contract vulnerabilities. What’s worse, since the homogeneity of a wide range of smart contracts and the increase in inter-contract dependencies, a vulnerability in a certain smart contract could affect a large number of other contracts in Ethereum. However, little is known about how vulnerable contracts affect other on-chain contracts and which contracts can be affected. Thus, we first present the contract dependency graph (CDG) to perform a vulnerability analysis for Ethereum smart contracts, where CDG characterizes inter-contract dependencies formed by DELEGATECALL-type internal transaction in Ethereum. Then, three generic definitions of security violations against CDG are given for finding respective potential victim contracts affected by different types of vulnerable contracts. Further, we construct the CDG with 195,247 smart contracts active in the latest blocks of the Ethereum and verify the above security violations against CDG by detecting three representative known vulnerabilities. Compared to previous large-scale vulnerability analysis, our analysis scheme marks potential victim contracts that can be affected by different types of vulnerable contracts, and identify their possible risks based on the type of security violation actually occurring. The analysis results show that the proportion of potential victim contracts reaches 14.7%, far more than that of corresponding vulnerable contracts (less than 0.02%) in CDG. © 2023 Tech Science Press. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Chen2017442,
	author = {Chen, Ting and Li, Xiaoqi and Luo, Xiapu and Zhang, Xiaosong},
	title = {Under-optimized smart contracts devour your money},
	year = {2017},
	journal = {SANER 2017 - 24th IEEE International Conference on Software Analysis, Evolution, and Reengineering},
	pages = {442 – 446},
	doi = {10.1109/SANER.2017.7884650},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018417236&doi=10.1109%2fSANER.2017.7884650&partnerID=40&md5=072acc7e808264dbdb6f3f3a6b5eff82},
	abstract = {Smart contracts are full-fledged programs that run on blockchains (e.g., Ethereum, one of the most popular blockchains). In Ethereum, gas (in Ether, a cryptographic currency like Bitcoin) is the execution fee compensating the computing resources of miners for running smart contracts. However, we find that under-optimized smart contracts cost more gas than necessary, and therefore the creators or users will be overcharged. In this work, we conduct the first investigation on Solidity, the recommended compiler, and reveal that it fails to optimize gas-costly programming patterns. In particular, we identify 7 gas-costly patterns and group them to 2 categories. Then, we propose and develop GASPER, a new tool for automatically locating gas-costly patterns by analyzing smart contracts' bytecodes. The preliminary results on discovering 3 representative patterns from 4,240 real smart contracts show that 93.5%, 90.1% and 80% contracts suffer from these 3 patterns, respectively. © 2017 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 218; All Open Access, Green Open Access}
}

@ARTICLE{Liu2022213,
	author = {Liu, Christian Gang and Bodorik, Peter and Jutla, Dawn},
	title = {Automating Smart Contract Generation on Blockchains Using Multi-modal Modeling},
	year = {2022},
	journal = {Journal of Advances in Information Technology},
	volume = {13},
	number = {3},
	pages = {213 – 223},
	doi = {10.12720/jait.13.3.213-223},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130703719&doi=10.12720%2fjait.13.3.213-223&partnerID=40&md5=3ede468b46837835379dbc500ed99870},
	abstract = {The power and correctness of smart contracts have been the focus of much research. We propose a new approach for developing smart contracts that uses multimodal modeling to represent the application logic for the trade domain. We use discrete events modeling for concurrency combined with FSM modeling to use concurrent FSMs to not only simplify the design process for the modeler, but also to scale the application running on a blockchain and facilitate identifying parts of a smart program that are suitable for off-chain processing on a sidechain that also provides privacy. In addition, we achieve separation of concerns between (a) application logic and (b) its transformation into a smart contract and deployment on a blockchain with processing of selected patterns on private sidechains. We transform the model into a smart contract automatically, such that patterns, selected by the modeler, are deployed on a sidechain. The interface for the mainchain to sidechain interaction is also prepared and deployed automatically. © 2022 J. Adv. Inf. Technol.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Wu202250839,
	author = {Wu, Canghai and Xiong, Jie and Xiong, Huanliang and Zhao, Yingding and Yi, Wenlong},
	title = {A Review on Recent Progress of Smart Contract in Blockchain},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {50839 – 50863},
	doi = {10.1109/ACCESS.2022.3174052},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130856939&doi=10.1109%2fACCESS.2022.3174052&partnerID=40&md5=e687ca29e3f23ff52301c92563d18a99},
	abstract = {A smart contract, in form, is represented as a piece of computer program code involving related commercial transactions and algorithms. Essentially, this is the computerization of the pre-agreed contract between the participants. This special contract agreement is automatically verified and executed once preset conditions are triggered. Smart contracts are not only used in the field of financial transactions, but also include many aspects of social life. Although smart contract technology has unique advantages, it is still in the early stages of development, and many problems remain to be solved. First, this article briefly summarizes the development process of blockchain, and then focuses on the research progress of blockchain 2.0-smart contracts. Second, the related concepts of smart contracts are presented, and the working mechanism of smart contracts and the difficulties faced by smart contracts are elaborated. Finally, in response to these problems and dilemmas, the corresponding solutions and ideas are summarized, and the future challenges and development trends of smart contracts are analyzed and judged. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Gold Open Access}
}

@ARTICLE{Kumar20221,
	author = {Kumar, Prabhat and Kumar, Randhir and Kumar, Abhinav and Franklin, A. Antony and Garg, Sahil and Singh, Satinder},
	title = {Blockchain and Deep Learning for Secure Communication in Digital Twin Empowered Industrial IoT Network},
	year = {2022},
	journal = {IEEE Transactions on Network Science and Engineering},
	pages = {1–13},
	doi = {10.1109/TNSE.2022.3191601},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135209094&doi=10.1109%2fTNSE.2022.3191601&partnerID=40&md5=c66137380c4d693aba7dabf769459e7e},
	abstract = {The rapid expansion of the Industrial Internet of Things (IIoT) necessitates the digitization of industrial processes in order to increase network efficiency. The integration of Digital Twin (DT) with IIoT digitizes physical objects into virtual representations to improve data analytics performance. Nevertheless, DT empowered IIoT generates a massive amount of data that is mostly sent to the cloud or edge servers for real-time analysis. However, unreliable public communication channels and lack of trust among participating entities causes various types of threats and attacks on the ongoing communication. Motivated from the aforementioned discussion, we present a blockchain and Deep Learning (DL) integrated framework for delivering decentralized data processing and learning in IIoT network. The framework first present a new DT model that facilitates construction of a virtual environment to simulate and replicate security-critical processes of IIoT. Second, we propose a blockchain-based data transmission scheme that uses smart contracts to ensure integrity and authenticity of data. Finally, the DL scheme is designed to apply the Intrusion Detection System (IDS) against valid data retrieved from blockchain. In DL scheme, a Long Short Term Memory-Sparse AutoEncoder (LSTMSAE) technique is proposed to learn the spatial-temporal representation. The extracted characteristics are further used by the proposed Multi-Head Self-Attention (MHSA)-based Bidirectional Gated Recurrent Unit (BiGRU) algorithm to learn long-distance features and accurately detect attacks. The practical implementation of our proposed framework proves considerable enhancement of communication security and data privacy in DT empowered IIoT network. IEEE},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Contro2021127,
	author = {Contro, Filippo and Crosara, Marco and Ceccato, Mariano and Preda, Mila Dalla},
	title = {EtherSolve: Computing an Accurate Control-Flow Graph from Ethereum Bytecode},
	year = {2021},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2021-May},
	pages = {127 – 137},
	doi = {10.1109/ICPC52881.2021.00021},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113201395&doi=10.1109%2fICPC52881.2021.00021&partnerID=40&md5=9627539c14f4ceba12bcce2ec90f3b62},
	abstract = {Motivated by the immutable nature of Ethereum smart contracts and of their transactions, quite many approaches have been proposed to detect defects and security problems before smart contracts become persistent in the blockchain and they are granted control on substantial financial value.Because smart contracts source code might not be available, static analysis approaches mostly face the challenge of analysing compiled Ethereum bytecode, that is available directly from the official blockchain. However, due to the intrinsic complexity of Ethereum bytecode (especially in jump resolution), static analysis encounters significant obstacles that reduce the accuracy of exiting automated tools.This paper presents a novel static analysis algorithm based on the symbolic execution of the Ethereum operand stack that allows us to resolve jumps in Ethereum bytecode and to construct an accurate control-flow graph (CFG) of the compiled smart contracts. EtherSolve is a prototype implementation of our approach. Experimental results on a significant set of real world Ethereum smart contracts show that EtherSolve improves the accuracy of the execrated CFGs with respect to the state of the art available approaches.Many static analysis techniques are based on the CFG representation of the code and would therefore benefit from the accurate extraction of the CFG. For example, we implemented a simple extension of EtherSolve that allows to detect instances of the re-entrancy vulnerability.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 9; All Open Access, Green Open Access}
}

@ARTICLE{Han2023,
	author = {Han, Daojun and Li, Qiuyue and Zhang, Lei and Xu, Tao},
	title = {A Smart Contract Vulnerability Detection Model Based on Syntactic and Semantic Fusion Learning},
	year = {2023},
	journal = {Wireless Communications and Mobile Computing},
	volume = {2023},
	doi = {10.1155/2023/9212269},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85148101619&doi=10.1155%2f2023%2f9212269&partnerID=40&md5=4adcc873283819266ee40faf9bb4c941},
	abstract = {As a trusted decentralized application, smart contracts manage a large number of digital assets on the blockchain. Vulnerability detection of smart contracts is an important part of ensuring the security of digital assets. At present, many researchers extract features of smart contract source code for vulnerability detection based on deep learning methods. However, the current research mainly focuses on the single representation form of the source code, which cannot fully obtain the rich semantic and structural information contained in the source code, so it is not conducive to the detection of various and complex smart contract vulnerabilities. Aiming at this problem, this paper proposes a vulnerability detection model based on the fusion of syntax and semantic features. The syntactic and semantic representation of the source code is obtained from the abstract syntax tree and control flow graph of the smart contract through TextCNN and Graph Neural Network. The syntactic and semantic features are fused, and the fused features are used to detect vulnerabilities. Experiments show that the detection accuracy and recall rate of this model have been improved on the detection tasks of five types of vulnerabilities, with an average precision of 96% and a recall rate of 90%, which can effectively identify smart contract vulnerabilities.  © 2023 Daojun Han et al.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Shi2023,
	author = {Shi, Chaochen and Xiang, Yong and Yu, Jiangshan and Sood, Keshav and Gao, Longxiang},
	title = {Machine translation-based fine-grained comments generation for solidity smart contracts},
	year = {2023},
	journal = {Information and Software Technology},
	volume = {153},
	doi = {10.1016/j.infsof.2022.107065},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138475019&doi=10.1016%2fj.infsof.2022.107065&partnerID=40&md5=350864ba93309ad422e52ffc24721f3e},
	abstract = {Context.: As self-executing programs on blockchain platforms, smart contracts can build a trusted environment between multi-parties. However, participants who lack programming knowledge usually have difficulties understanding smart contracts by reading the source code. It brings them difficulties and risks when interacting with decentralized applications. Objective.: We aim to translate the smart contract source code into natural language descriptions as fine-grained in-line comments to help people better understand, learn and operate smart contracts. Method.: We propose an automated translation approach for smart contracts written in Solidity, termed SolcTrans, based on an Syntax Tree (AST) and formal grammar. We have investigated representative Solidity smart contracts, identified the AST parsing paths and core attributes used for translation, and proposed corresponding translation templates for special statements. Then, we leveraged reinforcement learning to train a Probabilistic Context-Free Grammar-based syntax synthesizer used to generate comprehensible English sentences as comments. Result.: The experimental results show that SolcTrans outperforms four state-of-the-art neural machine translation models under currently available training data and is less affected by lengths of code snippets and translation outputs. We also conducted a human evaluation among 20 volunteers and asked them to score the generated comments. The results demonstrate that SolcTrans performs well on three metrics: Accuracy, Readability, and Instructiveness. Conclusion.: Our approach produces high-quality fine-grained comments for smart contract source code under the small training dataset, which creates a paradigm for future studies. © 2022 Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@CONFERENCE{Atzei20191124,
	author = {Atzei, Nicola and Bartoletti, Massimo and Lande, Stefano and Yoshida, Nobuko and Zunino, Roberto},
	title = {Developing secure bitcoin contracts with BitML},
	year = {2019},
	journal = {ESEC/FSE 2019 - Proceedings of the 2019 27th ACM Joint Meeting European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages = {1124 – 1128},
	doi = {10.1145/3338906.3341173},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071914633&doi=10.1145%2f3338906.3341173&partnerID=40&md5=77588faf7f8f9a7cc7da6a5dbb169fde},
	abstract = {We present a toolchain for developing and verifying smart contracts that can be executed on Bitcoin. The toolchain is based on BitML, a recent domain-specific language for smart contracts with a computationally sound embedding into Bitcoin. Our toolchain automatically verifies relevant properties of contracts, among which liquidity, ensuring that funds do not remain frozen within a contract forever. A compiler is provided to translate BitML contracts into sets of standard Bitcoin transactions: executing a contract corresponds to appending these transactions to the blockchain. We assess our toolchain through a benchmark of representative contracts. © 2019 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 14; All Open Access, Green Open Access}
}

@CONFERENCE{Nguyen2022,
	author = {Nguyen, Hoang H. and Nguyen, Nhat-Minh and Xie, Chunyao and Ahmadi, Zahra and Kudendo, Daniel and Doan, Thanh-Nam and Jiang, Lingxiao},
	title = {MANDO: Multi-Level Heterogeneous Graph Embeddings for Fine-Grained Detection of Smart Contract Vulnerabilities},
	year = {2022},
	journal = {Proceedings - 2022 IEEE 9th International Conference on Data Science and Advanced Analytics, DSAA 2022},
	doi = {10.1109/DSAA54385.2022.10032337},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143075291&doi=10.1109%2fDSAA54385.2022.10032337&partnerID=40&md5=a50173fabedbf7977331fc2f6d90f0d3},
	abstract = {Learning heterogeneous graphs consisting of different types of nodes and edges enhances the results of homogeneous graph techniques. An interesting example of such graphs is control-flow graphs representing possible software code execution flows. As such graphs represent more semantic information of code, developing techniques and tools for such graphs can be highly beneficial for detecting vulnerabilities in software for its reliability. However, existing heterogeneous graph techniques are still insufficient in handling complex graphs where the number of different types of nodes and edges is large and variable. This paper concentrates on the Ethereum smart contracts as a sample of software codes represented by heterogeneous contract graphs built upon both control-flow graphs and call graphs containing different types of nodes and links. We propose MANDO, a new heterogeneous graph representation to learn such heterogeneous contract graphs' structures. MANDO extracts customized meta-paths, which compose relational connections between different types of nodes and their neighbors. Moreover, it develops a multi-metapath heterogeneous graph attention network to learn multi-level embeddings of different types of nodes and their metapaths in the heterogeneous contract graphs, which can capture the code semantics of smart contracts more accurately and facilitate both fine-grained line-level and coarse-grained contract-level vulnerability detection. Our extensive evaluation of large smart contract datasets shows that MANDO improves the vulnerability detection results of other techniques at the coarse-grained contract level. More importantly, it is the first learning-based approach capable of identifying vulnerabilities at the fine-grained line-level, and significantly improves the traditional code analysis-based vulnerability detection approaches by 11.35% to 70.81% in terms of F1-score. © 2022 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access}
}

@ARTICLE{Zheng2018453,
	author = {Zheng, Dong and Deng, Kaixin and Zhang, Yinghui and Zhao, Jiangfan and Zheng, Xiaokun and Ma, Xinwei},
	title = {Smart grid power trading based on consortium blockchain in Internet of Things},
	year = {2018},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11336 LNCS},
	pages = {453 – 459},
	doi = {10.1007/978-3-030-05057-3_34},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058616274&doi=10.1007%2f978-3-030-05057-3_34&partnerID=40&md5=fd3d26c4fbc7f096f0b5d6c6be0e08a0},
	abstract = {Internet of Things (IoT) technologies have attracted enormous attention from academics and industries, and one of the most representative application is the smart grid. Most smart grid system models have to rely on trusted third-parties, but there are no trusted third-parties in practice. Blockchain technologies show a lot of advantages in IoT due to its unique characteristics. In this paper, to enable reliability, efficiency, flexibility and security in smart grid trading, we combine blockchain technologies, proof of stake consensus mechanisms and cryptography tools to build a novel smart grid power trading system. Our security analysis shows that the proposed system can protect users’ data privacy. © Springer Nature Switzerland AG 2018.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 10; All Open Access, Green Open Access}
}

@ARTICLE{Ahmed20223025,
	author = {Ahmed, Farooq and Wei, Lingbo and Niu, Yukun and Zhao, Tianyu and Zhang, Wei and Zhang, Dong and Dong, Wenxiang},
	title = {Toward fine-grained access control and privacy protection for video sharing in media convergence environment},
	year = {2022},
	journal = {International Journal of Intelligent Systems},
	volume = {37},
	number = {5},
	pages = {3025 – 3049},
	doi = {10.1002/int.22810},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85122802112&doi=10.1002%2fint.22810&partnerID=40&md5=ab134e60f11c1a10e169f70d238575fd},
	abstract = {Video streaming applications are rapidly proliferating, allowing users to browse, download, and share videos through platforms such as YouTube, Netflix, and Amazon. Media content providers are required to register copyrights on digital platforms. With the existence of blockchain technology, users can manage their data using a smart contract, which allows them to define access and search policies and use an instant payment system without a third party in a decentralized network. We propose a secure and reliable video sharing scheme based on blockchain, using cryptographic primitives to secure the information of streamers and viewers. The use of blockchain ensures reliability and prevents the manipulating or forging of multimedia content. A smart contract system is implemented to represent contractual actions once a given access condition is satisfied. Analysis of the scheme's security and performance demonstrates that it is reliable and efficient. © 2022 Wiley Periodicals LLC.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Bronze Open Access}
}

@CONFERENCE{Sánchez-Gómez2019445,
	author = {Sánchez-Gómez, N. and Morales-Trujillo, L. and Torres-Valderrama, J.},
	title = {Towards an approach for applying early testing to smart contracts},
	year = {2019},
	journal = {WEBIST 2019 - Proceedings of the 15th International Conference on Web Information Systems and Technologies},
	pages = {445 – 453},
	doi = {10.5220/0008386004450453},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074279415&doi=10.5220%2f0008386004450453&partnerID=40&md5=e24b1a50a10c9a2ebc7d9cef2237b379},
	abstract = {Immutability - the ability for a Blockchain (BC) Ledger to remain an unalterable, permanent and indelible history of transactions-is a feature that is highlighted as a key benefit of BC. This ability is very important when several companies work collaboratively to achieve common objectives. This collaboration is usually represented by using business process models. BC is considered as a suitable technology to reduce the complexity of designing these collaborative processes using Smart Contracts. This paper discusses how to combine Model-based Software Development, modelling techniques, such as use cases models and activity diagram models based on Unified Model Languages (UML) in order to simplify and improve the modelling, management and execution of collaborative business processes between multiple companies in the BC network. This paper includes the neccessity of using transformation protocols to obtain Smart Contract code. In addition, it presents systematic mechanisms to evaluate and validate Smart Contract, applying early testing techniques, before deploying the Smart Contract code in the BC network. Copyright © 2019 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Nam2018,
	author = {Nam, Seung Oh},
	title = {How much are insurance consumers willing to pay for blockchain and smart contracts? A contingent valuation study},
	year = {2018},
	journal = {Sustainability (Switzerland)},
	volume = {10},
	number = {11},
	doi = {10.3390/su10114332},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061251297&doi=10.3390%2fsu10114332&partnerID=40&md5=bbbafe2c196b0979ecd0d20252f3a106},
	abstract = {Blockchain is highly secure in design and can hand huge data efficiently. A smart contract, based on a blockchain, can automate the entire process and make the contract self-executing in nature. Since the first introduction of these technologies in the 1990s, they have been at the center interest for academia and industry. Numerous researchers and practitioners have investigated the principles and usage of blockchain and smart contracts. However, little is coincidental regarding estimating the consumer's additional willingness to pay (WTP) and analyzing the relationship with socio-economic characteristics of the consumer for blockchain and smart contracts in the insurance sector. This study conducted the survey on 1000 heads of the household or homemakers who represent population well in South Korea and estimated additional WTP using one-and-one-half-bounded dichotomous choice contingent valuation (OOHB DC CV) method. About 65% of sample respondents answered they are willing to pay some additional premium for blockchain and smart contracts. The mean WTP has the value of KRW 28,425.43 (USD 25.38) and the median WTP is KRW 16,111.71 (USD 14.39). Those with high incomes, high education and more insurance contracts are more likely to pay extra for insurance policies using blockchain and smart contracts. Considering the total number of households in South Korea, the aggregated additional WTP is about 8 percent of the net income of the insurance industry in fiscal year of 2017. Consequently, strategic development of insurance products using block chains and smart contracts targeting educated consumers with high-income will increase the number of policyholders, which can in turn increase premium revenues. © 2018 by the author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 13; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Sánchez-Gómez20212059,
	author = {Sánchez-Gómez, N. and Torres-Valderrama, J. and Risoto, Manuel Mejías and Garrido, Alejandra},
	title = {Blockchain Smart Contract Meta-modeling},
	year = {2021},
	journal = {Journal of Web Engineering},
	volume = {20},
	number = {7},
	pages = {2059 – 2080},
	doi = {10.13052/jwe1540-9589.2073},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124817510&doi=10.13052%2fjwe1540-9589.2073&partnerID=40&md5=a402f88f5e56d9267ff5f26085514414},
	abstract = {One of the key benefits of blockchain technology is its ability to keep a permanent, unalterable record of transactions. In business environments, where companies interact with each other without a centralized authority to ensure trust between them, this has led to blockchain platforms and smart contracts being proposed as a means of implementing trustworthy collaborative processes. Software engineers must deal with them to ensure the quality of smart contracts in all phases of the smart contract lifecycle, from requirements specifications to design and deployment. This broad scope and criticality of smart contracts in business environments means that they have to be expressed in a language that is intuitive, easy-to-use, independent of the blockchain platform employed, and oriented towards software quality assurance. In this paper we present a key component: a first outline of a UML-based smart contract meta-model that would allow us to achieve these objectives. This meta-model will be enriched in future work to represent blockchain environments and automated testing. © 2021 River Publishers.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access}
}

@ARTICLE{Huang2022,
	author = {Huang, Jing and Zhou, Kuo and Xiong, Ao and Li, Dongmeng},
	title = {Smart Contract Vulnerability Detection Model Based on Multi‐Task Learning},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {5},
	doi = {10.3390/s22051829},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125103145&doi=10.3390%2fs22051829&partnerID=40&md5=e125281a4a78bddba9b2aaf2ade3c79d},
	abstract = {The key issue in the field of smart contract security is efficient and rapid vulnerability detection in smart contracts. Most of the existing detection methods can only detect the presence of vulnerabilities in the contract and can hardly identify their type. Furthermore, they have poor scalability. To resolve these issues, in this study, we developed a smart contract vulnerability detection model based on multi‐task learning. By setting auxiliary tasks to learn more directional vulnerability features, the detection capability of the model was improved to realize the detection and recognition of vulnerabilities. The model is based on a hard‐sharing design, which consists of two parts. First, the bottom sharing layer is mainly used to learn the semantic information of the input contract. The text representation is first transformed into a new vector by word and positional embedding, and then the neural network, based on an attention mechanism, is used to learn and extract the feature vector of the contract. Second, the task‐specific layer is mainly employed to realize the functions of each task. A classical convolutional neural network was used to construct a classification model for each task that learns and extracts features from the shared layer for training to achieve their respective task objectives. The experimental results show that the model can better identify the types of vulnerabilities after adding the auxiliary vulnerability detection task. This model realizes the detection of vulnerabilities and recognizes three types of vulnerabilities. The multi‐task model was observed to perform better and is less expensive than a single‐task model in terms of time, computation, and storage. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 11; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Philipp2019365,
	author = {Philipp, Robert and Prause, Gunnar and Gerlitz, Laima},
	title = {Blockchain and Smart Contracts for Entrepreneurial Collaboration in Maritime Supply Chains},
	year = {2019},
	journal = {Transport and Telecommunication},
	volume = {20},
	number = {4},
	pages = {365 – 378},
	doi = {10.2478/ttj-2019-0030},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076277578&doi=10.2478%2fttj-2019-0030&partnerID=40&md5=b27f9ee7f14a7d9ea9a02bfab2198e5d},
	abstract = {Smart contracts are scripts on the top of the blockchain technology. They represent a form of automation by what the layers of intermediaries can be reduced or even completely replaced. Accordingly, blockchain smart contracting systems decrease transaction and enforcement costs as well as process time. Moreover, we argue, blockchain and smart contracts can facilitate cross-organisational collaboration and their underlying business processes. Hence, they are able to support the integration of entrepreneurs and SMEs into trans-national supply chains by reducing high entry barriers and weakening the dominating position of big players. This paper discusses the research questions how blockchain smart contracting can facilitate the implementation of collaborative logistics structures and how the integration of SMEs into sustainable maritime supply chains can be safeguarded. The research bases on expert interviews and case studies. The results showcase the potentials of using blockchain smart contracting in the environment of trans-national and multimodal supply chains. © 2019 Transport and Telecommunication Institute.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 38; All Open Access, Gold Open Access}
}

@ARTICLE{Stefanovic202239154,
	author = {Stefanovic, Miroslav and Przulj, Dorde and Ristic, Sonja and Stefanovic, Darko and Nikolic, Danilo},
	title = {Smart Contract Application for Managing Land Administration System Transactions},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {39154 – 39176},
	doi = {10.1109/ACCESS.2022.3164444},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127824088&doi=10.1109%2fACCESS.2022.3164444&partnerID=40&md5=a1a6388e451c1df9396ae88e90d6d0e5},
	abstract = {Land administration systems are of great importance for a large number of stakeholders. One of the key problems related to land administration systems is the problem of the correctness of their state, meaning that data stored in land administration systems are not in concordance with the actual legal, spatial and topographic situation. The main causes of land administration systems' incorrect state are data collection and compilation, data processing, and data misuse. In this paper, we discuss the problems of data tampering, the long time needed for registering land administration system's transactions, and the possibility of double spending, which all can add incorrectness in a land administration system. Our research is based on the hypothesis that these problems may be addressed by means of distributed ledger technology, or to be more precise, by means of blockchain technology. The solution is presented in a form of a smart contract written in Solidity programing language that can cover even those more specific use cases in land administration systems such as sharing of ownership, transferring part of ownership, splitting or merging of real estate, and limiting the possibility of trading a real estate. The proposed smart contract represents an implementation of a programming interface that was created based on both ERC-20 and ERC-721 token standards, to satisfy the specific needs of land administration systems.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@ARTICLE{Hasan202034113,
	author = {Hasan, Haya R. and Salah, Khaled and Jayaraman, Raja and Omar, Mohammed and Yaqoob, Ibrar and Pesic, Sasa and Taylor, Todd and Boscovic, Dragan},
	title = {A Blockchain-Based Approach for the Creation of Digital Twins},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {34113 – 34126},
	doi = {10.1109/ACCESS.2020.2974810},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85080898974&doi=10.1109%2fACCESS.2020.2974810&partnerID=40&md5=7a0211f4ce181bc074f83eb7b98682cb},
	abstract = {The rapid advancements in computing, storage, communications, and networking technologies have enabled the creation of Digital Twins (DTs). A DT is a digital representation of a real-world physical component, product, or equipment. A DT can be used for 3-D design, testing, simulation, and prototyping prior to the manufacturing of the physical component. Once a physical component is in operation, a DT can be used for configuration, monitoring, diagnostics, and prognostics. It is expected that DTs will gain significant attention in the foreseeable future, and will play a key role in Industry 4.0. However, today's approaches, systems, and technologies leveraged for the creation of DTs are mostly centralized and fall short of providing trusted data provenance, audit, and traceability. Also, data related to transactions, logs, and history are not secure or tamper-proof. In this paper, we propose a blockchain-based creation process of DTs to guarantee secure and trusted traceability, accessibility, and immutability of transactions, logs, and data provenance. Our proposed approach uses smart contracts to govern and track transactions initiated by participants involved in the creation of DTs. Our approach also employs decentralized storage of interplanetary file systems to store and share DTs data. Moreover, we present details on our system design and architecture, implementation, and algorithms. Furthermore, we provide security and cost analysis, and show how our approach fulfills the requirements of DTs process creation. We make the smart contract code for creating DTs publicly available on Github. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 63; All Open Access, Gold Open Access}
}

@ARTICLE{Li2022,
	author = {Li, Qiude and Yi, Wenlong and Zhao, Xiaomin and Yin, Hua and Gerasimov, Igor},
	title = {Representative Ring Signature Algorithm Based on Smart Contract},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {18},
	doi = {10.3390/s22186805},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138375164&doi=10.3390%2fs22186805&partnerID=40&md5=a9fd59dd4c8f2f6510dbb31e50809de2},
	abstract = {Traditional ring signature algorithms suffer from large signature data capacity and low speed of signature and verification during collective signing. In this work, we propose a representative ring signature algorithm based on smart contracts. By collecting the opinions of the signatory based on multiparty secure computation, the proposed technique protects the privacy of the signatory during the data interaction process in the consortium chain. Moreover, the proposed method uses smart contracts to organize the signature process and formulate a signature strategy of “one encryption per signature” to prevent signature forgery. It uses the Hyperledger Fabric framework as the signature test platform of the consortium chain to perform the experiments. We compare the results of the proposed method with the ECC ring signature scheme. The experimental results show that in the worst case, the signature volume of the proposed method decreases by more than two times, and the signature speed and verification speed increase by more than three times. Therefore, in the collective signature scenario of transaction verification in the consortium chain, the proposed method is verified to be innovative and practical. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Wang2019,
	author = {Wang, Shuai and Zhang, Chengyu and Su, Zhendong},
	title = {Detecting nondeterministic payment bugs in ethereum smart contracts},
	year = {2019},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {3},
	number = {OOPSLA},
	doi = {10.1145/3360615},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120105703&doi=10.1145%2f3360615&partnerID=40&md5=38a00c7cdddd55720fd712b8d728a55f},
	abstract = {The term lsmart contractsz has become ubiquitous to describe an enormous number of programs uploaded to the popular Ethereum blockchain system. Despite rapid growth of the smart contract ecosystem, errors and exploitations have been constantly reported from online contract systems, which has put financial stability at risk with losses totaling millions of US dollars. Most existing research focuses on pinpointing specific types of vulnerabilities using known patterns. However, due to the lack of awareness of the inherent nondeterminism in the Ethereum blockchain system and how it affects the funds transfer of smart contracts, there can be unknown vulnerabilities that may be exploited by attackers to access numerous online smart contracts. In this paper, we introduce a methodical approach to understanding the inherent nondeterminism in the Ethereum blockchain system and its (unwanted) influence on contract payments. We show that our new focus on nondeterminism-related smart contract payment bugs captures the root causes of many common vulnerabilities without relying on any known patterns and also encompasses recently disclosed issues that are not handled by existing research. To do so, we introduce techniques to systematically model components in the contract execution context and to expose various nondeterministic factors that are not yet fully understood. We further study how these nondeterministic factors impact contract funds transfer using information flow tracking. The technical challenge of detecting nondeterministic payments lies in discovering the contract global variables subtly affected by read-write hazards because of unpredictable transaction scheduling and external callee behavior. We show how to augment and instrument a contract program into a representation that simulates the execution of a large subset of the contract behavior. The instrumented code is then analyzed to flag nondeterministic global variables using off-the-shelf model checkers. We implement the proposed techniques as a practical tool named NPChecker (Nondeterministic Payment Checker) and evaluate it on 30K online contracts (3,075 distinct) collected from the Ethereum mainnet. NPChecker has successfully detected nondeterministic payments in 1,111 online contracts with reasonable cost. Further investigation reports high precision of NPChecker (only four false positives in a manual study of 50 contracts). We also show that NPChecker unveils contracts vulnerable to recently-disclosed attack vectors. NPChecker can identify all six new vulnerabilities or variants of common smart contract vulnerabilities that are missed by existing research relying on a lcontract vulnerability checklist.. © 2019 Association for Computing Machinery. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 27; All Open Access, Bronze Open Access, Green Open Access}
}

@ARTICLE{Liu2020235,
	author = {Liu, Lu-Chi and Sileno, Giovanni and Van Engers, Tom},
	title = {Digital enforceable contracts (DEC): Making smart contracts smarter},
	year = {2020},
	journal = {Frontiers in Artificial Intelligence and Applications},
	volume = {334},
	pages = {235 – 238},
	doi = {10.3233/FAIA200872},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098655797&doi=10.3233%2fFAIA200872&partnerID=40&md5=9231b59b2a2fe59f47a35750cf48726e},
	abstract = {The combination of smart contracts with blockchain technology enables the authentication of the contract and limits the risks of non-compliance. In principle, smart contracts can be processed more efficiently compared to traditional paper-based contracts. However, current smart contracts have very limited capabilities with respect to normative representations, making them too distant from actual contracts. In order to reduce this gap, the paper presents an architectural analysis to see the role of computational artifacts in terms of various ex-ante and ex-post enforcement mechanisms. The proposed framework is assessed using scenarios concerning data-sharing operations bound by legal requirements from the General Data Protection Regulation (GDPR) and data-sharing agreements. © 2020 The Authors, Faculty of Law, Masaryk University and IOS Press.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Yang20211,
	author = {Yang, Zhen and Keung, Jacky and Yu, Xiao and Gu, Xiaodong and Wei, Zhengyuan and Ma, Xiaoxue and Zhang, Miao},
	title = {A Multi-Modal Transformer-based Code Summarization Approach for Smart Contracts},
	year = {2021},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2021-May},
	pages = {1 – 12},
	doi = {10.1109/ICPC52881.2021.00010},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113206073&doi=10.1109%2fICPC52881.2021.00010&partnerID=40&md5=2860e9454cf1be5944e6f85a47ccee01},
	abstract = {Code comment has been an important part of computer programs, greatly facilitating the understanding and maintenance of source code. However, high-quality code comments are often unavailable in smart contracts, the increasingly popular programs that run on the blockchain. In this paper, we propose a Multi-Modal Transformer-based (MMTrans) code summarization approach for smart contracts. Specifically, the MMTrans learns the representation of source code from the two heterogeneous modalities of the Abstract Syntax Tree (AST), i.e., Structure-based Traversal (SBT) sequences and graphs. The SBT sequence provides the global semantic information of AST, while the graph convolution focuses on the local details. The MMTrans uses two encoders to extract both global and local semantic information from the two modalities respectively, and then uses a joint decoder to generate code comments. Both the encoders and the decoder employ the multi-head attention structure of the Transformer to enhance the ability to capture the long-range dependencies between code tokens. We build a dataset with over 300K <method, comment> pairs of smart contracts, and evaluate the MMTrans on it. The experimental results demonstrate that the MMTrans outperforms the state-of-The-Art baselines in terms of four evaluation metrics by a substantial margin, and can generate higher quality comments.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Green Open Access}
}

@ARTICLE{Visvizi2023,
	author = {Visvizi, Anna and Mora, Higinio and Varela-Guzman, Erick G.},
	title = {The case of rWallet: A blockchain-based tool to navigate some challenges related to irregular migration},
	year = {2023},
	journal = {Computers in Human Behavior},
	volume = {139},
	doi = {10.1016/j.chb.2022.107548},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141279871&doi=10.1016%2fj.chb.2022.107548&partnerID=40&md5=8e76d698fd0814950e73d40dce848924},
	abstract = {Migration (irregular and forced) represents one of the major challenges the international community faces today. Inasmuch as the phenomenon of irregular and forced migration is the marker of the state of socio-economic systems around the world, the response to and the ways of navigating the resulting multi-scalar challenges mirror not only the efficiency of the global regulatory frameworks, but also our civility. Recognizing the potential inherent in sophisticated information and communication technology (ICT), specifically the blockchain technology and smart contracts, this paper focuses on the special case of “welcome centers” that irregular migrants enter in the hope of acquiring international legal protection and thus refugee status. Since the process may be time-consuming and the living conditions undignified, this paper proposes a tool, named here “responsible wallet”, aka rWallet, that bears the promise of navigating some of these challenges. rWallet derives from the recognition that in modern societies ICT should serve the purpose of improving the quality of life of all people. © 2022 Elsevier Ltd},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Garcia-Teruel2021,
	author = {Garcia-Teruel, Rosa M. and Simón-Moreno, Héctor},
	title = {The digital tokenization of property rights. A comparative perspective},
	year = {2021},
	journal = {Computer Law and Security Review},
	volume = {41},
	doi = {10.1016/j.clsr.2021.105543},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104727655&doi=10.1016%2fj.clsr.2021.105543&partnerID=40&md5=ba43ff20bdd6e0a29a063e61c5b53243},
	abstract = {Blockchain technology allows virtual disintermediation and automatization of property transactions, which might help to design future platforms, intended to facilitate cross-border transactions within the EU and worldwide. To this end, users of these blockchain-based platforms may create the so-called “digital tokens” or “colored coins” that aim to represent rights over different types of “real world” assets. By transferring a digital token, the parties aim to transfer the ownership or other property rights over the asset represented by the token without the intervention of traditional intermediaries, such as real estate conveyancers, land registrars or notaries specializing in real estate. However, this new technological tool raises several questions in the field of private law, such as the legal nature of the token, how the effective transfer of the property rights operates or how ownership rules may be applied in this decentralized environment (e.g. rights and duties of the token holder). Some of the issues at stake have only been tentatively addressed by both lawmakers and academia. In light of this research gap, this paper addresses these controversial issues from both a private law and a comparative perspective, and proposes a model to tokenize the right of usufruct over chattels and real estate, analyzing its legal viability and limitations across six jurisdictions. The paper concludes that private law rules may be adapted to the tokenization of property rights, which may contribute to the establishment of a digital market for the trading of asset-backed tokens worldwide. © 2021 The Authors},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 10; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Bruschi2021103758,
	author = {Bruschi, Francesco and Rana, Vincenzo and Pagani, Alessio and Sciuto, Donatella},
	title = {Tunneling Trust into the Blockchain: A Merkle Based Proof System for Structured Documents},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {103758 – 103771},
	doi = {10.1109/ACCESS.2020.3028498},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111589718&doi=10.1109%2fACCESS.2020.3028498&partnerID=40&md5=1ff537ca172f121318b940f3a673b685},
	abstract = {The idea of Smart contracts foresees the possibility of automating contractual clauses using hardware and software tools and devices. One of the main perspectives of their implementation is the automation of interactions such as bets, collaterals, prediction markets, insurances. As blockchain platforms, such as Ethereum, offer very strong guarantees of untampered, deterministic execution, that can be exploited as smart contracts substrate, the problem of how to provide reliable information from the 'outside world' into the contracts becomes central. In this article, we propose a system based on a Merkle tree representation of structured documents (such as all XML), with which it is possible to generate compact proofs on the content of web documents. The proofs can then be efficiently checked on-chain by a smart contract, to trigger contract action. We provide an end-to-end proof of concept, applying it to real use case scenarios, which allows us to give an estimate of the costs.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Gold Open Access}
}

@ARTICLE{Pérez20207,
	author = {Pérez, Víctor and Klemen, Maximiliano and López-García, Pedro and Morales, José Francisco and Hermenegildo, Manuel},
	title = {Cost Analysis of Smart Contracts Via Parametric Resource Analysis},
	year = {2020},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {12389 LNCS},
	pages = {7 – 31},
	doi = {10.1007/978-3-030-65474-0_2},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101351164&doi=10.1007%2f978-3-030-65474-0_2&partnerID=40&md5=213dd034f38d3906252661e7c1f008ed},
	abstract = {The very nature of smart contracts and blockchain platforms, where program execution and storage are replicated across a large number of nodes, makes resource consumption analysis highly relevant. This has led to the development of analyzers for specific platforms and languages. However, blockchain platforms present significant variability in languages and cost models, as well as over time. Approaches that facilitate the quick development and adaptation of cost analyses are thus potentially attractive in this context. We explore the application of a generic approach and tool for cost analysis to the problem of static inference of gas consumption bounds in smart contracts. The approach is based on Parametric Resource Analysis, a method that simplifies the implementation of analyzers for inferring safe bounds on different resources and with different resource consumption models. In addition, to support different input languages, the approach also makes use of translation into a Horn clause-based intermediate representation. To assess practicality we develop an analyzer for the Tezos platform and its Michelson language. We argue that this approach offers a rapid, flexible, and effective method for the development of cost analyses for smart contracts. © 2020, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Green Open Access}
}

@ARTICLE{Sánchez-de la Rosa2023971,
	author = {Sánchez-de la Rosa, Miguel and Núñez-Gómez, Carlos and Caminero, M. Blanca and Carrión, Carmen},
	title = {Exploring the use of blockchain in resource-constrained fog computing environments},
	year = {2023},
	journal = {Software - Practice and Experience},
	volume = {53},
	number = {4},
	pages = {971 – 987},
	doi = {10.1002/spe.3173},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143406992&doi=10.1002%2fspe.3173&partnerID=40&md5=8f555620493164d0757113144fb77f67},
	abstract = {Fog computing has become a complementary technology to cloud computing and addresses some of the cloud computing threats such as the response time and network bandwidth demand. Fog computing successes processing data and storing data near to the edge, and usually is combined with container virtualization to provide hardware isolation. Empowered by these capabilities, numerous Internet of Things (IoT) applications are developed as virtualized instances on resource-constrained fog nodes such as single-board computers (SBC). In addition, blockchain has emerged as a key technology that is transforming the way we share information. Blockchain technology represents a decentralised, distributed, and immutable database ledger and is a potential solution for the distributed ecosystem of IoT applications. The distributed structure of blockchain is naturally suitable for IoT applications. However, it introduces new challenges related to CPU overhead or response time. This paper proposes a layered architecture that integrates blockchain technology and OS-level virtualization technology to develop fog-based IoT applications. It also provides insights for future deployments through a proof-of-concept use case harnessing SBCs, in this case Raspberry Pi, as blockchain-enabled fog nodes to drive virtualized IoT applications. The study shows that the maximum CPU overhead added by a permissioned blockchain based on Ethereum on the Raspberry Pi is around a 25% under stress situations while the overhead introduced by the sealer process is negligible. These results support the feasibility of using blockchain on resource-constrained fog nodes for supporting IoT applications. © 2022 The Authors. Software: Practice and Experience published by John Wiley & Sons Ltd.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@CONFERENCE{Muller202031,
	author = {Muller, Christina and Brandenburger, Marcus and Cachin, Christian and Felber, Pascal and Gottel, Christian and Schiavoni, Valerio},
	title = {TZ4Fabric: Executing Smart Contracts with ARM TrustZone : Experience Report)},
	year = {2020},
	journal = {Proceedings of the IEEE Symposium on Reliable Distributed Systems},
	volume = {2020-September},
	pages = {31 – 40},
	doi = {10.1109/SRDS51746.2020.00011},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097762912&doi=10.1109%2fSRDS51746.2020.00011&partnerID=40&md5=3e1caa028fa3e7473617187340796b4c},
	abstract = {Blockchain technology promises to revolutionize manufacturing industries. For example, several supply chain use cases may benefit from transparent asset tracking and automated processes using smart contracts. Several real-world deployments exist where the transparency aspect of a blockchain is both an advantage and a disadvantage at the same time. The exposure of assets and business interaction represent critical risks. However, there are typically no confidentiality guarantees to protect the smart contract logic as well as the processed data. Trusted execution environments (TEE) are an emerging technology available in both edge or mobile-grade processors (e.g., ARM TrustZone) and server-grade processors (e.g., Intel SGX). TEEs shield both code and data from malicious attackers. This practical experience report presents TZ4FABRIC, an extension of Hyperledger Fabric to leverage ARM TrustZone for the secure execution of smart contracts. Our design minimizes the trusted computing base executed by avoiding the execution of a whole Hyperledger Fabric node inside the TEE, which continues to run in untrusted environment. Instead, we restrict it to the execution of only the smart contract. The TZ4FABRIC prototype exploits the opensource OP-TEE framework, as it supports deployments on cheap low-end devices (e.g., Raspberry Pis). Our experimental results highlight the performance trade-off due to the additional security guarantees provided by ARM TrustZone. TZ4FABRIC will be released as open source.  © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@ARTICLE{Buccafurri2023194,
	author = {Buccafurri, Francesco and Lax, Gianluca and Musarella, Lorenzo and Russo, Antonia},
	title = {An Ethereum-based solution for energy trading in smart grids},
	year = {2023},
	journal = {Digital Communications and Networks},
	volume = {9},
	number = {1},
	pages = {194 – 202},
	doi = {10.1016/j.dcan.2021.12.004},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130425700&doi=10.1016%2fj.dcan.2021.12.004&partnerID=40&md5=321da8e581fbbe277aefa01257ed22a5},
	abstract = {The need for a flexible, dynamic, and decentralized energy market has rapidly grown in recent years. As a matter of fact, Industry 4.0 and Smart Grids are pursuing a path of automation of operations to insure all the steps among consumers and producers are getting closer. This leads towards solutions that exploit the paradigm of public blockchain, which represents the best platform to design flat and liquid markets for which providing trust and accountability to mutual interactions becomes crucial. On the other hand, one of the risks arising in this situation is that personal information is exposed to the network, with intolerable threats to privacy. In this paper, we propose a solution for energy trading, based on the blockchain Ethereum and Smart Contracts.The solution aims to be a concrete proposal to satisfy the needs of energy trading in smart grids, including the important feature that no information about the identity of the peers of the network is disclosed in advance. © 2021 Chongqing University of Posts and Telecommunications},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@CONFERENCE{Pierro2021708,
	author = {Pierro, Giuseppe Antonio},
	title = {Smart-Graph: Graphical Representations for Smart Contract on the Ethereum Blockchain},
	year = {2021},
	journal = {Proceedings - 2021 IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2021},
	pages = {708 – 714},
	doi = {10.1109/SANER50967.2021.00090},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106613390&doi=10.1109%2fSANER50967.2021.00090&partnerID=40&md5=f16d73d036758b67bc0c7f9becedb9a0},
	abstract = {The Ethereum blockchain enables executing and recording smart contracts. The smart contracts can facilitate, verify, and implement the negotiation between multiple parties, also guaranteeing transactions without a traditional legal entity. Many tools supporting the smart contracts development in different areas are flourishing because in Ethereum blockchain valuable assets are often involved. Some of the tools help the developer to find security vulnerabilities via static and/or dynamic analysis or to reduce the Gas fees consumption. Despite the plethora of such tools, there is no tool supporting smart contracts evaluation and analysis via a graphical representation for expert developers.The paper embraces this way to facilitate the developers' analysis activity, by proposing a graphical representation model to visualize smart contract source code. The paper makes available a tool via a web interface, which accepts the smart contract address as an input and produces a graphical representation of the smart contract as an output. The graphical representation can help developers to better understand the structure of smart contracts and share it with other developers. Moreover, some metrics, such as the relations among smart contracts, are easier to be understood via "spatial"than "tabular"representation. Indeed, representing smart contracts' metrics via visual representation facilitates the developers, who are used to analyse the source code by directly inspecting it or using other tools that provide the metrics in a table format. Finally, the paper provides detailed data regarding a smart contract to the developers and proposes a graphical representation of the smart contracts without obscuration of details, also highlighting areas of the code that are possibly too big in size and/or too complex via a diagram displaying their connections. © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Green Open Access}
}

@ARTICLE{Albert2020,
	author = {Albert, Elvira and Grossman, Shelly and Rinetzky, Noam and Rodríguez-Núñez, Clara and Rubio, Albert and Sagiv, Mooly},
	title = {Taming callbacks for smart contract modularity},
	year = {2020},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {4},
	number = {OOPSLA},
	doi = {10.1145/3428277},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097572089&doi=10.1145%2f3428277&partnerID=40&md5=077d36f64d9716d700dac2370b939a83},
	abstract = {Callbacks are an effective programming discipline for implementing event-driven programming, especially in environments like Ethereum which forbid shared global state and concurrency. Callbacks allow a callee to delegate the execution back to the caller. Though effective, they can lead to subtle mistakes principally in open environments where callbacks can be added in a new code. Indeed, several high profile bugs in smart contracts exploit callbacks. We present the first static technique ensuring modularity in the presence of callbacks and apply it to verify prominent smart contracts. Modularity ensures that external calls to other contracts cannot affect the behavior of the contract. Importantly, modularity is guaranteed without restricting programming. In general, checking modularity is undecidable-even for programs without loops. This paper describes an effective technique for soundly ensuring modularity harnessing SMT solvers. The main idea is to define a constructive version of modularity using commutativity and projection operations on program segments. We believe that this approach is also accessible to programmers, since counterexamples to modularity can be generated automatically by the SMT solvers, allowing programmers to understand and fix the error. We implemented our approach in order to demonstrate the precision of the modularity analysis and applied it to real smart contracts, including a subset of the 150 most active contracts in Ethereum. Our implementation decompiles bytecode programs into an intermediate representation and then implements the modularity checking using SMT queries. Overall, we argue that our experimental results indicate that the method can be applied to many realistic contracts, and that it is able to prove modularity where other methods fail. © 2020 Owner/Author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Bronze Open Access}
}

@CONFERENCE{Yang202282,
	author = {Yang, Shouliang and Gu, Xiaodong and Shen, Beijun},
	title = {Self-Supervised Learning of Smart Contract Representations},
	year = {2022},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2022-March},
	pages = {82 – 93},
	doi = {10.1145/3524610.3527894},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133158808&doi=10.1145%2f3524610.3527894&partnerID=40&md5=8ca8720f70660086fafd22863769106d},
	abstract = {Learning smart contract representations can greatly facilitate the development of smart contracts in many tasks such as bug detection and clone detection. Existing approaches for learning program representations are difficult to apply to smart contracts which have insufficient data and significant homogenization. To overcome these challenges, in this paper, we propose SRCL, a novel, self-supervised approach for learning smart contract representations. Unlike ex-isting supervised methods, which are tied on task-specific data labels, SRCL leverages large-scale unlabeled data by self-supervised learning of both local and global information of smart contracts. It automatically extracts structural sequences from abstract syntax trees (ASTs). Then, two discriminators are designed to guide the Transformer encoder to learn local and global semantic features of smart contracts. We evaluate SRCL on a dataset of 75,006 smart contracts collected from Etherscan. Experimental results show that SRCL considerably outperforms the state-of-the-art code represen-tation models on three downstream tasks.  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Hawashin202310587,
	author = {Hawashin, Diana and Salah, Khaled and Jayaraman, Raja and Musamih, Ahmad},
	title = {Using Composable NFTs for Trading and Managing Expensive Packaged Products in the Food Industry},
	year = {2023},
	journal = {IEEE Access},
	volume = {11},
	pages = {10587 – 10603},
	doi = {10.1109/ACCESS.2023.3241226},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85148454529&doi=10.1109%2fACCESS.2023.3241226&partnerID=40&md5=9beba9e8830ac5d2277833e7f72cf2d5},
	abstract = {The authenticity, traceability, and management of expensive food products require trusted, secure, and transparent end-to-end data provenance and transactions. In today's systems, transactions and data related to managing and tracing the origins and history of food products are typically stored in segregated data repositories, and controlled and managed by centralized entities, with no access or visibility to the public or key stakeholders. This increases the risk of data loss, alteration, and tampering. Further it erodes trust among all stakeholders, and weakens consumer sentiment and confidence in the expensive food market, and raises concerns about the verifiability and authenticity of expensive food products. To overcome this problem, this paper addresses the lack of traceability and authenticity problems in expensive food products utilizing blockchain technology and NFTs. NFTs are blockchain-based tokens that can be utilized to represent ownership of unique assets. We propose an NFT-based solution for expensive food products trading management, where the ownership of a food product is maintained by using digital certification, and the trading process is facilitated by smart contracts. We utilize composable NFTs for food products, where interrelated products, such as raw materials, packaged products, and Lots, are represented as top-down and bottom-up composable NFTs in the form of parent-child relationship. Composable NFTs embed extra utility within NFTs, especially when subsets of NFTs are needed. We integrate the InterPlanetary File System (IPFS) decentralized storage into our solution to avoid storing large files on the blockchain while maintaining their permanency and immutability. We present various diagrams to show the system elements and the interactions among them. We illustrate algorithms along with the solution implementation details. We evaluate our solution by conducting cost and security analyses. We make our smart contracts code publicly available on GitHub.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Feist20198,
	author = {Feist, Josselin and Grieco, Gustavo and Groce, Alex},
	title = {Slither: A static analysis framework for smart contracts},
	year = {2019},
	journal = {Proceedings - 2019 IEEE/ACM 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain, WETSEB 2019},
	pages = {8 – 15},
	doi = {10.1109/WETSEB.2019.00008},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85070500660&doi=10.1109%2fWETSEB.2019.00008&partnerID=40&md5=ad242058a6025a53f321f5b0e85ec730},
	abstract = {This paper describes Slither, a static analysis framework designed to provide rich information about Ethereum smart contracts. It works by converting Solidity smart contracts into an intermediate representation called SlithIR. SlithIR uses Static Single Assignment (SSA) form and a reduced instruction set to ease implementation of analyses while preserving semantic information that would be lost in transforming Solidity to bytecode. Slither allows for the application of commonly used program analysis techniques like dataflow and taint tracking. Our framework has four main use cases: (1) automated detection of vulnerabilities, (2) automated detection of code optimization opportunities, (3) improvement of the user's understanding of the contracts, and (4) assistance with code review. In this paper, we present an overview of Slither, detail the design of its intermediate representation, and evaluate its capabilities on real-world contracts. We show that Slither's bug detection is fast, accurate, and outperforms other static analysis tools at finding issues in Ethereum smart contracts in terms of speed, robustness, and balance of detection and false positives. We compared tools using a large dataset of smart contracts and manually reviewed results for 1000 of the most used contracts. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 175; All Open Access, Green Open Access}
}