Scopus
EXPORT DATE: 30 March 2023

@CONFERENCE{Zhou202123,
	author = {Zhou, Teng and Liu, Kui and Li, Li and Liu, Zhe and Klein, Jacques and Bissyande, Tegawende F.},
	title = {SmartGift: Learning to Generate Practical Inputs for Testing Smart Contracts},
	year = {2021},
	journal = {Proceedings - 2021 IEEE International Conference on Software Maintenance and Evolution, ICSME 2021},
	pages = {23 – 34},
	doi = {10.1109/ICSME52107.2021.00009},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123371929&doi=10.1109%2fICSME52107.2021.00009&partnerID=40&md5=6f6688700e05c9ca4f93c25f7d485c78},
	abstract = {With the boom of Initial Coin Offerings (ICO) in the financial markets, smart contracts have gained rapid popularity among consumers. Smart contract vulnerabilities however made them a prime target to malicious attacks that are leading to huge losses. The research community is thus applying various software engineering technologies to smart contracts to address them. In general, to detect vulnerabilities in smart contracts, mutation and fuzz based testing approaches have been widely studied and indeed achieved promising performance on benchmark datasets. Generating test inputs with mutation approaches essentially relies on the available test cases in a smart contract program. In our preliminary study, however, we observed that 56.4% of 218 identified open-source smart contract project repositories do not provide any test case for validation. Fuzzing test inputs leads to random values and lacks practical usefulness. Our work addresses this problem: we propose an approach, Smartgift, which generates practical inputs for testing smart contracts by learning from the transaction records of real-world smart contracts. Leveraging a collected set of over 60 thousand transaction records, Smartgift is able to generate relevant test inputs for 77% smart contract functions, largely outperforming the traditional fuzzing approach (successful for only 60% functions). We further demonstrate the practicality of the test inputs by using them to replace the test inputs of the ContractFuzzer state of the art smart contract vulnerability detector: with inputs by Smartgift, ContractFuzzer can now detect 131 of the 154 vulnerabilities in its benchmark.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Bronze Open Access, Green Open Access}
}

@ARTICLE{Murimi2021,
	author = {Murimi, Renita},
	title = {On the Design of Social Robots Using Sheaf Theory and Smart Contracts},
	year = {2021},
	journal = {Frontiers in Robotics and AI},
	volume = {8},
	doi = {10.3389/frobt.2021.559380},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114367237&doi=10.3389%2ffrobt.2021.559380&partnerID=40&md5=2879ab92eab67db9ba984c8ce58d7acc},
	abstract = {The incorporation of robots in the social fabric of our society has taken giant leaps, enabled by advances in artificial intelligence and big data. As these robots become increasingly adept at parsing through enormous datasets and making decisions where humans fall short, a significant challenge lies in the analysis of robot behavior. Capturing interactions between robots, humans and IoT devices in traditional structures such as graphs poses challenges in the storage and analysis of large data sets in dense graphs generated by frequent activities. This paper proposes a framework that uses the blockchain for the storage of robotic interactions, and the use of sheaf theory for analysis of these interactions. Applications of our framework for social robots and swarm robots incorporating imperfect information and irrationality on the blockchain sheaf are proposed. This work shows the application of such a framework for various blockchain applications on the spectrum of human-robot interaction, and identifies key challenges that arise as a result of using the blockchain for robotic applications. © Copyright © 2021 Murimi.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Oktian20213592,
	author = {Oktian, Yustus Eko and Lee, Sang-Gon},
	title = {BorderChain: Blockchain-Based Access Control Framework for the Internet of Things Endpoint},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {3592 – 3615},
	doi = {10.1109/ACCESS.2020.3047413},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098793584&doi=10.1109%2fACCESS.2020.3047413&partnerID=40&md5=0950c94d66f892d72d0945add6d075a2},
	abstract = {The Internet of Things (IoT) providers serve better IoT services each year while producing more IoT gateways and devices to expand their services. However, the security of the IoT ecosystem remains an afterthought for most IoT providers. This action results in many cybersecurity breaches in the field, most likely due to the lack of access control mechanisms. In this paper, we propose BorderChain, an access control framework based on blockchain for IoT endpoints. The security protocol guarantees two properties. First, our proposal assures IoT users and services that they communicate with approved IoT gateways as endpoints, holding verified IoT devices that they need. Second, BorderChain also generates access tokens that the IoT service and users can use to query IoT resources legitimately inside the IoT domains. As a result, the protocol can convince IoT domain owners that the system will only authorize IoT requests that they approve. We realize our protocol in the form of a smart contract to allow many IoT entities such as IoT domain owners, IoT devices, IoT gateways, IoT vendors, IoT services, IoT users, and Internet Service Provider (ISP) to collaborate in a unified environment. We then implement entities in BorderChain as Node JS applications connecting to the Ethereum blockchain as our peer-to-peer platform. Based on our performance evaluation using several Raspberry Pi hardware and our private server, we show that BorderChain can process entities' authentication and authorization requests efficiently using all hardware resources. Finally, we release BorderChain for public use.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Gold Open Access}
}

@ARTICLE{Hegedűs2019,
	author = {Hegedűs, Péter},
	title = {Towards Analyzing the Complexity Landscape of Solidity Based Ethereum Smart Contracts},
	year = {2019},
	journal = {Technologies},
	volume = {7},
	number = {1},
	doi = {10.3390/technologies7010006},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147577171&doi=10.3390%2ftechnologies7010006&partnerID=40&md5=c81134cebc766d31039c445c621f2f68},
	abstract = {Blockchain-based decentralized cryptocurrency platforms are currently one of the hottest topics in technology. Although most of the interest is generated by cryptocurrency related activities, it is becoming apparent that a much wider spectrum of applications can leverage the blockchain technology. The primary concepts enabling such general use of the blockchain are the so-called smart contracts, which are special programs that run on the blockchain. One of the most popular blockchain platforms that supports smart contracts is Ethereum. As smart contracts typically handle money, ensuring their low number of faults and vulnerabilities are essential. To aid smart contract developers and help to mature the technology, we need analysis tools and studies for smart contracts. As an initiative for this, we propose the adoption of some well-known OO metrics for Solidity smart contracts. Furthermore, we analyze more than 40 thousand Solidity source files with our prototype tool. The results suggest that smart contract programs are short, neither overly complex nor coupled too much, do not rely heavily on inheritance, and either quite well-commented or not commented at all. Moreover, smart contracts could benefit from an external library and dependency management mechanism, as more than 85% of the defined libraries in Solidity files code the same functionalities. © 2019 by the author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 34; All Open Access, Gold Open Access}
}

@CONFERENCE{Su2022,
	author = {Su, Jianzhong and Dai, Hong-Ning and Zhao, Lingjun and Zheng, Zibin and Luo, Xiapu},
	title = {Effectively Generating Vulnerable Transaction Sequences in Smart Contracts with Reinforcement Learning-guided Fuzzing},
	year = {2022},
	journal = {ACM International Conference Proceeding Series},
	doi = {10.1145/3551349.3560429},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85146949231&doi=10.1145%2f3551349.3560429&partnerID=40&md5=10f56e6538696aaccfb0d555574f528f},
	abstract = {As computer programs run on top of blockchain, smart contracts have proliferated a myriad of decentralized applications while bringing security vulnerabilities, which may cause huge financial losses. Thus, it is crucial and urgent to detect the vulnerabilities of smart contracts. However, existing fuzzers for smart contracts are still inefficient to detect sophisticated vulnerabilities that require specific vulnerable transaction sequences to trigger. To address this challenge, we propose a novel vulnerability-guided fuzzer based on reinforcement learning, namely RLF, for generating vulnerable transaction sequences to detect such sophisticated vulnerabilities in smart contracts. In particular, we firstly model the process of fuzzing smart contracts as a Markov decision process to construct our reinforcement learning framework. We then creatively design an appropriate reward with consideration of both vulnerability and code coverage so that it can effectively guide our fuzzer to generate specific transaction sequences to reveal vulnerabilities, especially for the vulnerabilities related to multiple functions. We conduct extensive experiments to evaluate RLF's performance. The experimental results demonstrate that our RLF outperforms state-of-the-art vulnerability-detection tools (e.g., detecting 8%-69% more vulnerabilities within 30 minutes).  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@CONFERENCE{Ma2020,
	author = {Ma, Alan},
	title = {Emerging legal issues in blockchain for construction supply chains},
	year = {2020},
	journal = {ACM International Conference Proceeding Series},
	doi = {10.1145/3448823.3448880},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85102930646&doi=10.1145%2f3448823.3448880&partnerID=40&md5=8d3882c8c254aeea38967ea60a675ee5},
	abstract = {A complex web of supply chains is a common feature of construction projects. With the different types of parties involved in a project and the amount of paperwork generated, the supply chain process can be time-consuming, an easy target for fraud and is prone to human errors. Blockchain is an emerging technology that can transform, simplify and make a network of information more secure. In the context of the supply chain, digitalised documents and real-time information can lead to cost-savings in any operation. Its embedded feature of transparency and integrity proves itself to be reliable. In addition, there are two less widely considered advantages that are particularly suitable for applying in the administration and management of the complex web of supply chains in the construction industry. The two additional advantages are dispute avoidance and dispute resolution, which will be discussed in this paper. The use of blockchain in supply chains carries legal issues. This could be a contributing factor to its slower rate of adoption than widely anticipated after the rapid emergence of its first application in the financial system of cryptocurrency, commonly known as Bitcoin. This paper identifies and proposes solutions to three key legal issues arising from the use of blockchain technology in supply chains. They are (a) restricted use of smart contracts to prescribed outcomes only; (b) concerns relating to access and ownership of using a shared blockchain platform; and (c) multi-jurisdiction concerns over where governing laws apply. © 2020 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@CONFERENCE{Li2020273,
	author = {Li, Xiaoqi and Chen, Ting and Luo, Xiapu and Zhang, Tao and Yu, Le and Xu, Zhou},
	title = {STAN: Towards Describing Bytecodes of Smart Contract},
	year = {2020},
	journal = {Proceedings - 2020 IEEE 20th International Conference on Software Quality, Reliability, and Security, QRS 2020},
	pages = {273 – 284},
	doi = {10.1109/QRS51102.2020.00045},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097585973&doi=10.1109%2fQRS51102.2020.00045&partnerID=40&md5=6b95468191068b50714705fa2234c21a},
	abstract = {More than eight million smart contracts have been deployed into Ethereum, which is the most popular blockchain that supports smart contract. However, less than 1% of deployed smart contracts are open-source, and it is difficult for users to understand the functionality and internal mechanism of those closed-source contracts. Although a few decompilers for smart contracts have been recently proposed, it is still not easy for users to grasp the semantic information of the contract, not to mention the potential misleading due to decompilation errors. In this paper, we propose the first system named Stan to generate descriptions for the bytecodes of smart contracts to help users comprehend them. In particular, for each interface in a smart contract, Stan can generate four categories of descriptions, including functionality description, usage description, behavior description, and payment description, by leveraging symbolic execution and NLP (Natural Language Processing) techniques. Extensive experiments show that Stan can generate adequate, accurate and readable descriptions for contract's bytecodes, which have practical value for users. © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Green Open Access}
}

@ARTICLE{Jurgelaitis202233465,
	author = {Jurgelaitis, Mantas and Ceponiene, Lina and Butkiene, Rita},
	title = {Solidity Code Generation From UML State Machines in Model-Driven Smart Contract Development},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {33465 – 33481},
	doi = {10.1109/ACCESS.2022.3162227},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128183479&doi=10.1109%2fACCESS.2022.3162227&partnerID=40&md5=f798e03731a7a96be1e25f7e4f834520},
	abstract = {For the development of blockchain smart contracts, a structured approach based on the principles of the Model Driven Architecture can be beneficial and facilitate the implementation of smart contracts. This paper presents such an approach, which, in combination with Unified Modeling Language (UML) Class and State machine diagrams, allows the smart contract structure and behavior logic to be modeled in several abstraction layers. This paper delves into details on how the model-to-model transformations from the specified Blockchain Platform Independent Model (PIM) with specified state-like behavior can be used to produce a Solidity Platform Specific Model (PSM). Subsequently, we elaborate on how the Solidity PSM is used for Solidity smart contract code generation by employing model-to-text transformations. The paper also demonstrates the process of our proposed transformations and code generation using smart contract code examples from Solidity documentation. Based on the examples, a Blockchain PIM is specified and transformed to Solidity PSM, which is then used for Solidity smart contract code generation. The generated smart contract code is then compiled, deployed on the Ethereum blockchain JavaScript virtual machine, and compared to the original smart contract code in terms of Solidity code metrics, similarity scores, and execution costs. The evaluation results indicate that our approach could be successfully used to model and later generate smart contract code.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Gold Open Access}
}

@CONFERENCE{Akca2019482,
	author = {Akca, Sefa and Rajan, Ajitha and Peng, Chao},
	title = {SolAnalyser: A Framework for Analysing and Testing Smart Contracts},
	year = {2019},
	journal = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
	volume = {2019-December},
	pages = {482 – 489},
	doi = {10.1109/APSEC48747.2019.00071},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078175674&doi=10.1109%2fAPSEC48747.2019.00071&partnerID=40&md5=ea414d51e565bcd8f1851da36168d4bd},
	abstract = {Executing, verifying and enforcing credible transactions on permissionless blockchains is done using smart contracts. A key challenge with smart contracts is ensuring their correctness and security. To address this challenge, we present a fully automated technique, SolAnalyser, for vulnerability detection over Solidity smart contracts that uses both static and dynamic analysis. Analysis techniques in the literature rely on static analysis with a high rate of false positives or lack support for vulnerabilities like out of gas, unchecked send, timestamp dependency. Our tool, SolAnalyser, supports automated detection of 8 different vulnerability types that currently lack wide support in existing tools, and can easily be extended to support other types. We also implemented a fault seeding tool that injects different types of vulnerabilities in smart contracts. We use the mutated contracts for assessing the effectiveness of different analysis tools. Our experiment uses 1838 real contracts from which we generate 12866 mutated contracts by artificially seeding 8 different vulnerability types. We evaluate the effectiveness of our technique in revealing the seeded vulnerabilities and compare against five existing popular analysis tools-Oyente, Securify, Maian, SmartCheck and Mythril. This is the first large scale evaluation of existing tools that compares their effectiveness by running them on a common set of contracts. We find that our technique outperforms all five existing tools in supporting detection of all 8 vulnerability types and in achieving higher precision and recall rate. SolAnalyser was also faster in analysing the different vulnerabilities than any of the existing tools in our experiment. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Green Open Access}
}

@ARTICLE{Honar Pajooh2021,
	author = {Honar Pajooh, Houshyar and Rashid, Mohammad and Alam, Fakhrul and Demidenko, Serge},
	title = {Hyperledger Fabric Blockchain for Securing the Edge Internet of Things},
	year = {2021},
	journal = {Sensors (Basel, Switzerland)},
	volume = {21},
	number = {2},
	doi = {10.3390/s21020359},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099901398&doi=10.3390%2fs21020359&partnerID=40&md5=dddd68cd1c7445f0339a9da7ad8a262d},
	abstract = {Providing security and privacy to the Internet of Things (IoT) networks while achieving it with minimum performance requirements is an open research challenge. Blockchain technology, as a distributed and decentralized ledger, is a potential solution to tackle the limitations of the current peer-to-peer IoT networks. This paper presents the development of an integrated IoT system implementing the permissioned blockchain Hyperledger Fabric (HLF) to secure the edge computing devices by employing a local authentication process. In addition, the proposed model provides traceability for the data generated by the IoT devices. The presented solution also addresses the IoT systems' scalability challenges, the processing power and storage issues of the IoT edge devices in the blockchain network. A set of built-in queries is leveraged by smart-contracts technology to define the rules and conditions. The paper validates the performance of the proposed model with practical implementation by measuring performance metrics such as transaction throughput and latency, resource consumption, and network use. The results show that the proposed platform with the HLF implementation is promising for the security of resource-constrained IoT devices and is scalable for deployment in various IoT scenarios.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Profentzas2020507,
	author = {Profentzas, Christos and Almgren, Magnus and Landsiedel, Olaf},
	title = {TinyEVM: Off-chain smart contracts on low-power IoT devices},
	year = {2020},
	journal = {Proceedings - International Conference on Distributed Computing Systems},
	volume = {2020-November},
	pages = {507 – 518},
	doi = {10.1109/ICDCS47774.2020.00025},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101994939&doi=10.1109%2fICDCS47774.2020.00025&partnerID=40&md5=a27c4da827784a085f0435fc53f7f8f8},
	abstract = {—With the rise of the Internet of Things (IoT), billions of devices ranging from simple sensors to smart-phones will participate in billions of micropayments. However, current centralized solutions are unable to handle a massive number of micropayments from untrusted devices. Blockchains are promising technologies suitable for solving some of these challenges. Particularly, permissionless blockchains such as Ethereum and Bitcoin have drawn the attention of the research community. However, the increasingly large-scale deployments of blockchain reveal some of their scalability limitations. Prominent proposals to scale the payment system include off-chain protocols such as payment channels. However, the leading proposals assume powerful nodes with an always-on connection and frequent synchronization. These assumptions require in practice significant communication, memory, and computation capacity, whereas IoT devices face substantial constraints in these areas. Existing approaches also do not capture the logic and process of IoT, where applications need to process locally collected sensor data to allow for full use of IoT micro-payments. In this paper, we present TinyEVM, a novel system to generate and execute off-chain smart contracts based on sensor data. TinyEVM’s goal is to enable IoT devices to perform micro-payments and, at the same time, address the device constraints. We investigate the trade-offs of executing smart contracts on low-power IoT devices using TinyEVM. We test our system with 7,000 publicly verified smart contracts, where TinyEVM achieves to deploy 93% of them without any modification. Finally, we evaluate the execution of off-chain smart contracts in terms of run-time performance, energy, and memory requirements on IoT devices. Notably, we find that low-power devices can deploy a smart contract in 215 ms on average, and they can complete an off-chain payment in 584 ms on average. ©2020 European Union},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@ARTICLE{Özkan2021,
	author = {Özkan, Evin and Azizi, Neda and Haass, Omid},
	title = {Leveraging smart contract in project procurement through dlt to gain sustainable competitive advantages},
	year = {2021},
	journal = {Sustainability (Switzerland)},
	volume = {13},
	number = {23},
	doi = {10.3390/su132313380},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120794556&doi=10.3390%2fsu132313380&partnerID=40&md5=901e13b9326bb4506708b6a4e292ccc1},
	abstract = {Project delivery on time, with agreed quality and assigned budget, is the desire of project-based companies. Time, quality, and cost are determinants of project success; however, organisations suffer from achieving these three success criteria at the same time. Failures in project delivery cause the loss of the competitive advantage. The recent digital technologies introduce smart contracts to supply chain (SC) operations for improving SC processes. Project procurement is the area for smart contract implementation to deliver successful projects and gain sustainable competitive advantages. The aim of this study was in explaining how smart contracts benefit project organisations through project procurement. Qualitative research design guided this research with phenomenology. Semi-structured interviews generated the data. The obtained research data were analysed with thematic, textual, and discourse analysis. Published industry reports were used to triangulate the data. This study demonstrated an integrated relationship model to answer the research question. The research findings initially identified the fact that smart contracts improve procurement efficiency through cost, time, and quality. Secondly, smart contracts build a trust-less platform where reliability is delivered and reinforced with transparency, traceability, and security. This study found that enhanced procurement efficiency and reliability meet requirements to gain sustainable competitive advantages. This study intends to contribute to industry practices and future research. The correlation of project procurement management success, smart contracts, and sustainable competitive advantages are expected to guide feature research and business practices. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 11; All Open Access, Gold Open Access}
}

@ARTICLE{Kim2020,
	author = {Kim, Ki Byung and Lee, Jonghyup},
	title = {Automated Generation of Test Cases for Smart Contract Security Analyzers},
	year = {2020},
	journal = {IEEE Access},
	doi = {10.1109/ACCESS.2020.3039990},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097163638&doi=10.1109%2fACCESS.2020.3039990&partnerID=40&md5=c5d905980180af5edc40a3dc0b8617ac},
	abstract = {We address the absence of reliable tests on contract analyzers of smart contracts and present a systematic method to diversify test cases by combining smart-contract-specific bugs and static analysis barriers in this paper. Using contract analyzers is the most practical solution for building a secure blockchain service, but they are relatively immature and lacking stable performance metrics. Traditionally, performance reports only compare static contract analyzers with pre-defined test cases, such as the Juliet test suite. However, building such test suites is burdensome for smart contracts, which are frequently change. In this paper, we propose an automated method to assess contract analyzers of smart contracts by diversifying test cases. In the experimental results, we identified nine erroneous alarms in the state-of-the-art contract analyzers with automatically generated test cases on five vulnerabilities. CCBY},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@ARTICLE{Yoo202028,
	author = {Yoo, Youngseo and Seo, Dongil and Kim, Minhyun},
	title = {Payment guaranteed polynomial exchange rate scheme and its application to cryptocurrency swaps},
	year = {2020},
	journal = {Annals of Emerging Technologies in Computing},
	volume = {4},
	number = {1},
	pages = {28 – 43},
	doi = {10.33166/AETiC.2020.01.004},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85088263211&doi=10.33166%2fAETiC.2020.01.004&partnerID=40&md5=f4c14473ca2be71422a1e272ac879535},
	abstract = {In this paper, we introduce a scheme, called Polynomial Exchange Rate Scheme (PERS), to generate exchange rate functions for token swap systems, and show that the functions generated are consistent, stable, and resilient. We show that payments are guaranteed in PERS if the Single Circulation Source principle is adopted (i.e., PG-PERS). Compared to the existing deposit-based exchange rate schemes, PG-PERS is a scheme that requires no initial key token deposit and its price changes have relatively stable rates especially in extreme cases. As an application of PG-PERS, we present a token swap service, called Fanco Swap, for swapping the ERC20 token used on aFan, an incentivized social media platform, and Ether coin. We also cover several practical issues such as precision and computation cost problems and the solutions to them, which adopted in the implementation of Fanco Swap. The paper contains a comprehensive survey on existing cryptocurrency exchange services and their pricing mechanism, followed by a formal development of the proposed exchange rate scheme and its comparison with one of the most representative existing exchange rate schemes. © 2020 by the author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Liu2022193,
	author = {Liu, Yiping and Xu, Jie and Cui, Baojiang},
	title = {Smart Contract Vulnerability Detection Based on Symbolic Execution Technology},
	year = {2022},
	journal = {Communications in Computer and Information Science},
	volume = {1506 CCIS},
	pages = {193 – 207},
	doi = {10.1007/978-981-16-9229-1_12},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124651981&doi=10.1007%2f978-981-16-9229-1_12&partnerID=40&md5=c81f7196b1ec510d9693720006515494},
	abstract = {With the rapid development of the blockchain, smart contract technology has been widely applied. The number of smart contracts has grown at a high rate and nearly at an average of thousands per day. However, the correctness and security of the smart contract itself are facing huge problems. The well-known DAO vulnerability, and Parity multi-signature wallet’ vulnerabilities have leaded to a hundreds of millions dollars loss, and they are both caused by the security problems of smart contracts. Once the smart contract vulnerability is exploited, it is very likely to bring the loss of cryptocurrencies, the disorder of the financial order and other catastrophic consequences. Therefore the security of smart contracts is imminent. This project has designed and implemented a vulnerability detection system of Ethereum smart contract. The system uses the assembly instruction sequences of the smart contract to generate the control flow graph, then performs symbolic execution and vulnerability constraint solving over the control flow. The system can detect some common types of vulnerabilities, such as the integer overflow and underflow vulnerability, reentry vulnerability and unchecked call return value vulnerability. It has a high accuracy of detection result, and gives support for export vulnerability report. © 2022, The Author(s).},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Firdaus2023156,
	author = {Firdaus, Muhammad and Rhee, Kyung-Hyune},
	title = {A Joint Framework to Privacy-Preserving Edge Intelligence in Vehicular Networks},
	year = {2023},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {13720 LNCS},
	pages = {156 – 167},
	doi = {10.1007/978-3-031-25659-2_12},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85148025103&doi=10.1007%2f978-3-031-25659-2_12&partnerID=40&md5=6331f87d59807c647b9d592221dcb8a1},
	abstract = {The number of internet-connected devices has been exponentially growing with the massive volume of heterogeneous data generated from various devices, resulting in a highly intertwined cyber-physical system. Currently, the Edge Intelligence System (EIS) concept that leverages the merits of edge computing and Artificial Intelligence (AI) is utilized to provide smart cloud services with powerful computational processing and reduce decision-making delays. Thus, EIS offers a possible solution to realizing future Intelligent Transportation Systems (ITS), especially in a vehicular network framework. However, since the central aggregator server is responsible for supervising the entire system orchestration, the existing EIS framework faces several challenges and is still potentially susceptible to numerous malicious attacks. Hence, to solve the issues mentioned earlier, this paper presents the notion of secure edge intelligence, merging the benefits of Federated Learning (FL), blockchain, and Local Differential Privacy (LDP). The blockchain-assisted FL approach is used to efficiently improve traffic prediction accuracy and enhance user privacy and security by recording transactions in immutable distributed ledger networks as well as providing a decentralized reward mechanism system. Furthermore, LDP is empowered to strengthen the confidentiality of data sharing transactions, especially in protecting the user’s private data from various attacks. The proposed framework has been implemented in two scenarios, i.e., blockchain-based FL to efficiently develop the decentralized traffic management for vehicular networks and LDP-based FL to produce the randomized privacy protection using the IBM Library for differential privacy. © 2023, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Hsieh202298117,
	author = {Hsieh, Chao-Hsien and Yao, Xinyu and Zhang, Qing and Lv, Mengchen and Wang, Ruobing and Ni, Bingxue},
	title = {BCsRNG: A Secure Random Number Generator Based on Blockchain},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {98117 – 98126},
	doi = {10.1109/ACCESS.2022.3206450},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85139262990&doi=10.1109%2fACCESS.2022.3206450&partnerID=40&md5=1399abb276def11d8d5d21e5e2edf741},
	abstract = {Random numbers are widely used in numerical computing, statistical simulation, random sampling, etc. At present, the mechanism for generating random numbers by computers is at risk of being attacked. The generated random numbers may be predicted in some cases,. However, current RNGs used in blockchain are not sufficient enough to handle attacks. Therefore, it is necessary to improve the security of random numbers. This paper improves the random number generator and designs a secure random number generator based on blockchain (BCsRNG). In practice, an encapsulated function algorithm of the secure random number is developed with the smart contract. Moreover, an API is provided to facilitate input and output. The experimental results show that the random numbers generated by BCsRNG are difficult to decipher and have higher randomness and security.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Kodjiku2022,
	author = {Kodjiku, Seth Larweh and Fang, Yili and Han, Tao and Asamoah, Kwame Omono and Aggrey, Esther Stacy E. B. and Sey, Collins and Aidoo, Evans and Ejianya, Victor Nonso and Wang, Xun},
	title = {ExCrowd: A Blockchain Framework for Exploration-Based Crowdsourcing},
	year = {2022},
	journal = {Applied Sciences (Switzerland)},
	volume = {12},
	number = {13},
	doi = {10.3390/app12136732},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133709850&doi=10.3390%2fapp12136732&partnerID=40&md5=7d4f11378d18a1ec78e83dc09523142c},
	abstract = {Because of the rise of cryptocurrencies and decentralized apps, blockchain technology has generated a lot of interest. Among these is the emergent blockchain-based crowdsourcing paradigm, which eliminates the centralized conventional mechanism servers in favor of smart contracts for task and reward allocation. However, there are a few crucial challenges that must be resolved properly. For starters, most reputation-based systems favor high-performing employees. Secondly, the crowdsourcing platform’s expensive service charges may obstruct the growth of crowdsourcing. Finally, unequal evaluation and reward allocation might lead to job dissatisfaction. As a result, the aforementioned issues will substantially impede the development of blockchain-based crowdsourcing systems. In this study, we introduce ExCrowd, a blockchain-based crowdsourcing system that employs a smart contract as a trustworthy authority to properly select workers, assess inputs, and award incentives while maintaining user privacy. Exploration-based crowdsourcing employs the hyperbolic learning curve model based on the conduct of workers and analyzes worker performance patterns using a decision tree technique. We specifically present the architecture of our framework, on which we establish a concrete scheme. Using a real-world dataset, we implement our model on the Ethereum public test network leveraging its reliability, adaptability, scalability, and rich statefulness. The results of our experiments demonstrate the efficiency, usefulness, and adaptability of our proposed system. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Shih2022,
	author = {Shih, Dong-Her and Wu, Ting-Wei and Shih, Ming-Hung and Chen, Guan-Wei and Yen, David C.},
	title = {Hyperledger Fabric Access Control for Industrial Internet of Things},
	year = {2022},
	journal = {Applied Sciences (Switzerland)},
	volume = {12},
	number = {6},
	doi = {10.3390/app12063125},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126944733&doi=10.3390%2fapp12063125&partnerID=40&md5=13c2d32c739a5904003caad986047b2c},
	abstract = {The Industrial Internet of Things (IIoT) plays an important role in Industry 4.0, but the existing IIoT systems could be vulnerable to a single point of failure and malicious attacks, failing to provide reliable services. IIoT devices have some particularities, such as mobility, limited perfor-mance, and distributed deployment, which are challenging to traditional centralized access control methods in the large-scale IIoT environment. To resolve the challenges, we propose an access control system for the Industrial Internet of Things. The system contains three smart contracts: device contract (DC), policy contract (PC), and access contract (AC). The device contract provides a method of storing the URL of the resource data generated by the equipment and a query method. The policy contract provides the function of managing the attribute-based access control (ABAC) of the admin-istrator user. The access contract is the core program that implements the access control method for ordinary users. Combining ABAC and blockchain technology provides decentralized, fine-grained, and dynamic access control management for IIoT. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@CONFERENCE{Westerkamp2019413,
	author = {Westerkamp, Martin},
	title = {Verifiable smart contract portability},
	year = {2019},
	journal = {ICBC 2019 - IEEE International Conference on Blockchain and Cryptocurrency},
	pages = {413 – 421},
	doi = {10.1109/BLOC.2019.8751335},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85069191217&doi=10.1109%2fBLOC.2019.8751335&partnerID=40&md5=b19eccdbd4ef14efc97cb48ed3b1f593},
	abstract = {With the advent of blockchain technologies, the idea of decentralized applications has gained traction. Smart contracts permit the implementation of application logic to foster distributed systems that are capable of removing intermediaries. Hereby, lock in effects originating from isolated data storage and central authorities are mitigated. Yet, smart contracts deployed to a ledger generate dependencies on the underlying blockchain. Over time, requirements regarding contract execution may detach from the utilized blockchain due to contradicting incentives and security or performance issues. To avoid a novel form of lock in effect towards a host blockchain, we introduce a concept for smart contract portability that permits any user to migrate contract logic and state between blockchains in a flexible and verifiable manner. As the Ethereum Virtual Machine (EVM) is supported by a multitude of blockchain implementations, it poses a common execution environment for smart contracts. We provide a toolbox that facilitates smart contract portability between EVM-compatible blockchains without trust requirements in the entity executing the migration process. To prove the concept's soundness, we transfer token contracts based on the ERC20 standard as well as applications containing dependencies to other smart contracts. Our evaluation shows the validity of ported applications including their current states. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 10; All Open Access, Green Open Access}
}

@CONFERENCE{Liao2022637,
	author = {Liao, Jinghui and Zhang, Fengwei and Sun, Wenhai and Shi, Weisong},
	title = {Speedster: An Efficient Multi-party State Channel via Enclaves},
	year = {2022},
	journal = {ASIA CCS 2022 - Proceedings of the 2022 ACM Asia Conference on Computer and Communications Security},
	pages = {637 – 651},
	doi = {10.1145/3488932.3523259},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133206251&doi=10.1145%2f3488932.3523259&partnerID=40&md5=c441bfe4ec4d887583443745e42c9d07},
	abstract = {State channel network is the most popular layer-2 solution to the issues of scalability, high transaction fees, and low transaction throughput of public Blockchain networks. However, the existing works have limitations that curb the wide adoption of the technology, such as the expensive creation and closure of channels, strict synchronization between the main chain and off-chain channels, frozen deposits, and inability to execute multi-party smart contracts. In this work, we present Speedster, an account-based state-channel system that aims to address the above issues. To this end, Speedster leverages the latest development of secure hardware to create dispute-free certified channels that can be operated efficiently off the Blockchain. Speedster is peer-to-peer decentralized and provides better privacy protection than prior channel projects. It supports fast native multi-party contract execution, which is previously unavailable in TEE-enabled channel networks. Compared to the Lightning Network, Speedster improves the throughput by about 10,000X and generates 97%$ less on-chain data with a comparable network scale. © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Bronze Open Access}
}

@ARTICLE{Meng2022,
	author = {Meng, Mingming and Li, Yuancheng},
	title = {SFedChain: Blockchain-based federated learning scheme for secure data sharing in distributed energy storage networks},
	year = {2022},
	journal = {PeerJ Computer Science},
	volume = {8},
	doi = {10.7717/peerj-cs.1027},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134626043&doi=10.7717%2fpeerj-cs.1027&partnerID=40&md5=f7d7a3da9991dfea97e9a805ed44f853},
	abstract = {The intelligence of energy storage devices has led to a sharp increase in the amount of detection data generated. Data sharing among distributed energy storage networks can realize collaborative control and comprehensive analysis, which effectively improves the clustering and intelligence. However, data security problems have become the main obstacle for energy storage devices to share data for joint modeling and analysis. The security issues caused by information leakage far outweigh property losses. In this article, we first proposed a blockchain-based machine learning scheme for secure data sharing in distributed energy storage networks. Then, we formulated the data sharing problem into a machine-learning problem by incorporating secure federated learning. Innovative verification methods and consensus mechanisms were used to encourage participants to act honestly, and to use well-designed incentive mechanisms to ensure the sustainable and stable operation of the system. We implemented the scheme of SFedChain and experimented on real datasets with different settings. The numerical results show that SFedChain is promising. © Copyright 2022 meng et al.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Brotsis2021,
	author = {Brotsis, Sotirios and Limniotis, Konstantinos and Bendiab, Gueltoum and Kolokotronis, Nicholas and Shiaeles, Stavros},
	title = {On the suitability of blockchain platforms for IoT applications: Architectures, security, privacy, and performance},
	year = {2021},
	journal = {Computer Networks},
	volume = {191},
	doi = {10.1016/j.comnet.2021.108005},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103137292&doi=10.1016%2fj.comnet.2021.108005&partnerID=40&md5=bf87fef0322bc39234556f417ec3e596},
	abstract = {Blockchain and distributed ledger technologies have received significant interest in various areas beyond the financial sector, with profound applications in the Internet of Things (IoT), providing the means for creating truly trustless and secure solutions for IoT applications. Taking into account the weak security defences that the majority of IoT devices have, it is critical that a blockchain-based solution targeting the IoT is not only capable of addressing the many challenges IoT is facing, but also does not introduce other defects, e.g. in terms of performance, making its adoption hard to achieve. This paper aims at addressing the above needs by providing a comprehensive and coherent review of the available blockchain solutions to determine their ability to meet the requirements and tackle the challenges of the IoT, using the smart home as the reference domain. Key architectural aspects of blockchain solutions, like the platforms’ software and network setups, the consensus protocols used, as well as smart contracts, are examined in terms of their ability to withstand various types of common IoT and blockchain attacks, deliver enhanced privacy features, and assure adequate performance levels while processing large amounts of transactions being generated in an IoT environment. The analysis carried out identified that the defences currently provided by blockchain platforms are not sufficient to thwart all the prominent attacks against blockchains, with blockchain 1.0 and 2.0 platforms being susceptible to the majority of them. On the other side, privacy related mechanisms are being supported, to varying degrees, by all platforms investigated; however, each of the them tackles specific only privacy aspects, thus rendering the overall privacy evaluation a challenging task which needs to be considered in an ad-hoc basis. If the underlying consensus protocols’ performance and fault tolerance is also considered, then only a small number of platforms meet the requirements of our reference IoT domain. © 2021},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 29; All Open Access, Green Open Access}
}

@ARTICLE{Hasan202217707,
	author = {Hasan, Haya R. and Salah, Khaled and Yaqoob, Ibrar and Jayaraman, Raja and Pesic, Sasa and Omar, Mohammed},
	title = {Trustworthy IoT Data Streaming Using Blockchain and IPFS},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {17707 – 17721},
	doi = {10.1109/ACCESS.2022.3149312},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124755960&doi=10.1109%2fACCESS.2022.3149312&partnerID=40&md5=51598ac08c3c4d1b45b8e977e44dba64},
	abstract = {Today's resource-constrained IoT streaming devices generate large amounts of data which is stored, processed, analyzed for value creation, and accessed using centralized systems, technologies, platforms, and services. Most existing systems leveraged for storing and accessing IoT streaming data fall short in providing transparency, traceability, reliability, trustworthiness, and security features. Also, they are vulnerable to the single point of failure problem due to centralization. In this paper, we propose a blockchain-based solution for resource-constrained IoT streaming devices that allows data chunks to be transferred in a decentralized, transparent, traceable, reliable, secure, and trustful manner. We preserve the privacy and confidentiality of the IoT streamed data through a proxy re-encryption network. We use the decentralized storage of the Interplanetary File System (IPFS) to store and share the IoT streaming data, thereby dealing with the large-size data storage problem. We present system diagrams and eleven algorithms along with their full implementation details. We perform security analysis to show our smart contract code is secure enough against well-known security threats and vulnerabilities. We compare our proposed approach with the existing solutions to show its novelty and effectiveness. We make our smart contract code publicly available on the GitHub repository.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 13; All Open Access, Gold Open Access}
}

@ARTICLE{Sun2022,
	author = {Sun, Lian-Shan and Bai, Xue and Zhang, Chao and Li, Yang and Zhang, Yong-Bin and Guo, Wen-Qiang},
	title = {BSTProv: Blockchain-Based Secure and Trustworthy Data Provenance Sharing},
	year = {2022},
	journal = {Electronics (Switzerland)},
	volume = {11},
	number = {9},
	doi = {10.3390/electronics11091489},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129651011&doi=10.3390%2felectronics11091489&partnerID=40&md5=dcf05de8c5ba8f4a9cfe47468d4b1092},
	abstract = {In the Big Data era, data provenance has become an important concern for enhancing the trustworthiness of key data that are rapidly generated and shared across organizations. Prevailing solutions employ authoritative centers to efficiently manage and share massive data. They are not suitable for secure and trustworthy decentralized data provenance sharing due to the inevitable dishonesty or failure of trusted centers. With the advent of the blockchain technology, embedding data provenance in immutable blocks is believed to be a promising solution. However, a provenance file, usually a directed acyclic graph, cannot be embedded in blocks as a whole because its size may exceed the limit of a block, and may include various sensitive information that can be legally accessed by different users. To this end, this paper proposed the BSTProv, a blockchain-based system for secure and trustworthy decentralized data provenance sharing. It enables secure and trustworthy provenance sharing by partitioning a large provenance graph into multiple small subgraphs and embedding the encrypted subgraphs instead of raw subgraphs or their hash values into immutable blocks of a consortium blockchain; it enables decentralized and flexible authorization by allowing each peer to define appropriate permissions for selectively sharing some sets of subgraphs to specific requesters; and it enables efficient cross-domain provenance composition and tracing by maintaining a high-level dependency structure among provenance graphs from different domains in smart contracts, and by locally storing, decrypting, and composing subgraphs obtained from the blockchain. Finally, a prototype is implemented on top of an Ethereum-based consortium blockchain and experiment results show the advantages of our approach. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Hasan2020157,
	author = {Hasan, Mahmud and Starly, Binil},
	title = {Decentralized cloud manufacturing-as-a-service (CMaaS) platform architecture with configurable digital assets},
	year = {2020},
	journal = {Journal of Manufacturing Systems},
	volume = {56},
	pages = {157 – 174},
	doi = {10.1016/j.jmsy.2020.05.017},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85086632452&doi=10.1016%2fj.jmsy.2020.05.017&partnerID=40&md5=91781cf94f7b83c41adecf100c554b3e},
	abstract = {Contemporary Cloud Manufacturing-as-a-Service (CMaaS) platforms now promise customers instant pricing and access to a large capacity of manufacturing nodes. However, many of the CMaaS platforms are centralized with data flowing through an intermediary agent connecting clients with service providers. This paper reports the design, implementation and validation of middleware software architectures which aim to directly connect client users with manufacturing service providers while improving transparency, data integrity, data provenance and retaining data ownership to its creators. In the first middleware, clients have the ability to directly customize and configure parts parametrically, leading to an instant generation of downstream manufacturing process plan codes. In the second middleware, clients can track the data provenance generated in a blockchain based decentralized architecture across a manufacturing system. The design of digital assets across a distributed manufacturing system infrastructure controlled by autonomous smart contracts through Ethereum based ERC-721 non-fungible tokens is proposed to enable communication and collaboration across decentralized CMaaS platform architectures. The performance of the smart contracts was evaluated on three different global Ethereum blockchain test networks with the centrality and dispersion statistics on their performance provided as a reference benchmark for future smart contract implementations. © 2020 The Society of Manufacturing Engineers},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 53; All Open Access, Bronze Open Access}
}

@ARTICLE{Amato20217752,
	author = {Amato, Flora and Cozzolino, Giovanni and Moscato, Francesco and Moscato, Vincenzo and Xhafa, Fatos},
	title = {A Model for Verification and Validation of Law Compliance of Smart Contracts in IoT Environment},
	year = {2021},
	journal = {IEEE Transactions on Industrial Informatics},
	volume = {17},
	number = {11},
	pages = {7752 – 7759},
	doi = {10.1109/TII.2021.3057595},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100856681&doi=10.1109%2fTII.2021.3057595&partnerID=40&md5=7ae24cefbe11044da297d8f3931c5686},
	abstract = {The interest of Industry 4.0 in smart contracts and blockchain technologies is growing up day by day. Smart contracts have enabled new kinds of interactions whereby contractors can even fully automate processes they agree on. This technology is really appealing in Internet of Things (IoT) domain because smart devices generate events for software agents involved in a smart contract execution, making full automation possible. However, smart contracts have to comply with national and international laws and accountability of participant's actions. Soundness of a smart contract has to be verified in terms of law compliance. Here, we propose a model for verification and validation of law compliance of smart contracts in IoT environments. The main goal of this article is to propose a formal model (based on multiagent logic and ontological description of contracts) for validating law compliance of smart contracts and to determine potential responsibilities of failures. © 2005-2012 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 11; All Open Access, Green Open Access}
}

@ARTICLE{Correas202125495,
	author = {Correas, Jesus and Gordillo, Pablo and Roman-Diez, Guillermo},
	title = {Static Profiling and Optimization of Ethereum Smart Contracts Using Resource Analysis},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {25495 – 25507},
	doi = {10.1109/ACCESS.2021.3057565},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101097549&doi=10.1109%2fACCESS.2021.3057565&partnerID=40&md5=f99caa40de45993371c1ec288c33b035},
	abstract = {Profiling tools have been widely used for studying the behavior of the programs with the objective of reducing the amount of resources consumed by them. Most profilers collect the information with dynamic techniques, i.e., execute an instrumented version of the program with some specific input arguments to profile the measures of interest. This article presents a novel static profiling technique for Ethereum smart contracts that, using static resource analysis, is able to generate upper-bound expressions that can be used to produce profiling information about the measure of interest. Unlike traditional profiling tools, we get upper-bounds on the measures of interest expressed in terms of the input arguments or the state variables of the smart contracts. The information that can be obtained by the upper-bounds allows us to detect gas-expensive fragments of a Solidity program or to spot resource-related vulnerabilities at specific program points of the program. Moreover, in this article we propose an automatic optimization of Solidity programs which reduces their gas consumption replacing the accesses to state variables by gas-efficient accesses to local variables. We have experimentally evaluated our technique and we have detected that 6.81% of the public functions analyzed can be optimized and 1.43% are vulnerable to execute arbitrary code. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@ARTICLE{Ricci202137936,
	author = {Ricci, Laura and Di Francesco Maesa, Damiano and Favenza, Alfredo and Ferro, Enrico},
	title = {Blockchains for covid-19 contact tracing and vaccine support: A systematic review},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {37936 – 37950},
	doi = {10.1109/ACCESS.2021.3063152},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85102234764&doi=10.1109%2fACCESS.2021.3063152&partnerID=40&md5=af1807d4c2411494451152bd7753c70c},
	abstract = {Several blockchain projects to help against COVID-19 are emerging at a fast pace, showing the potential of this disruptive technology to mitigate the multi-systemic threats the pandemic is posing on all phases of the emergency management and generate value for the economy and society as a whole. This survey investigates how blockchain technology can be useful in the scope of supporting health actions that can reduce the spread of COVID-19 infections and allow a return to normality. Since the prominent use of blockchains to mitigate COVID-19 consequences are in the area of contact tracing and vaccine/immunity passport support, the survey mainly focuses on these two classes of applications. The aim of the survey is to show that only a proper combination of blockchain technology with advanced cryptographic techniques can guarantee a secure and privacy preserving support to fight COVID-19. In particular, this article first presents these techniques, i.e. zero-knowledge, Diffie Hellman, blind signatures, and proxy re-encryption, then describes how they are used in combination with blockchains to define robust and privacy-preserving solutions. Finally, a brief description of blockchain applications beyond contact tracing and vaccine certification is presented. © 2020 Institute of Electrical and Electronics Engineers Inc.. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 43; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Wang2022,
	author = {Wang, Xiaoyin and Sun, Jiaze and Hu, Chunyang and Yu, Panpan and Zhang, Bin and Hou, Donghai},
	title = {EtherFuzz: Mutation Fuzzing Smart Contracts for TOD Vulnerability Detection},
	year = {2022},
	journal = {Wireless Communications and Mobile Computing},
	volume = {2022},
	doi = {10.1155/2022/1565007},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85137922242&doi=10.1155%2f2022%2f1565007&partnerID=40&md5=54dee1fa157428e8935c8d082432adcd},
	abstract = {With the development of Internet of Things technology, the use of Internet of Things is expanding, and its security risk will become an important factor restricting the development of Internet of Things technology. The application of blockchain technology in the security field of the Internet of Things can improve security problems, and the blockchain has immutable characteristics. Therefore, it is particularly important to ensure the security of blockchain smart contracts. However, the order of transaction in smart contracts is easy to be operated by miners, and there is a relative lack of tools to detect TOD (transaction-ordering dependent) vulnerabilities. The current smart contract vulnerability detection methods have the problems of low efficiency and low accuracy. Therefore, based on the study of TOD vulnerability principle, this paper creatively highlights a mutation fuzzy testing method EtherFuzz to specifically detect TOD vulnerability in smart contracts. Use the intelligent contract ABI (application binary interface) to generate test cases, test the byte code of the intelligent contract, use TOD to test oracle to detect TOD vulnerabilities, and then, mutate the tested data to generate new test cases. Finally, the behavior of smart contract operation is recorded, and the fuzzy test process is controlled until the vulnerability is detected. The experimental results show that when 987 token contracts are selected as Ethereum test objects, the false-positive rate, detection time overhead, and detection storage overhead of EtherFuzz are reduced by 74.4%, 30.1%, and 28.1%, respectively. Therefore, EtherFuzz has high speed, efficiency, and accuracy in detecting TOD vulnerabilities and has excellent application value.  © 2022 Xiaoyin Wang et al.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Li2022,
	author = {Li, Tengfei and Hu, Liang},
	title = {Audit as You Go: A Smart Contract-Based Outsourced Data Integrity Auditing Scheme for Multiauditor Scenarios with One Person, One Vote},
	year = {2022},
	journal = {Security and Communication Networks},
	volume = {2022},
	doi = {10.1155/2022/8783952},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128617744&doi=10.1155%2f2022%2f8783952&partnerID=40&md5=2781cf3256752dfd5a5f009aa9862b18},
	abstract = {The data outsourcing services provided by cloud storage have greatly reduced the headache of data management for users, but the issue of remote data integrity poses further security concerns and computing burdens. The introduction of a third-party auditor (TPA) frees data owners from the auditing burden and alleviates disputes over the audit results between data owners and cloud storage providers. However, malicious cloud servers may collude with TPAs to deceive users for financial profits. Hiring multiple auditors in a single audit assignment appears to be a method to address the above problem, but the ensuing voting issues need to be further explored. In this paper, we proposed a smart contract-based outsourced data integrity auditing scheme for multiauditor scenarios. Unlike some existing schemes using reputation like factors as their voting weights, auditors in our scheme vote equally and audit as they go, without any maintenance. This mechanism not only frees auditors from trivia not related to the auditing but also avoids the drawbacks of centralization associated with over-high voting weights. The challenge used to check the integrity of the outsourced data is jointly generated by each involved auditor. Any collusion would be detected as long as there exists more than one honest auditor in the audit. We implement and deploy the scheme as Ethereum smart contracts. With the help of blockchain, the entire auditing process is public and transparent. Both the generated data and the obtained results are persisted with immutability, which ensures the traceability of all historical audits. The comprehensive theoretical and experimental analyses demonstrate that our scheme meets the claimed targets with high efficiency and low gas costs. © 2022 Tengfei Li and Liang Hu.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Ghaleb2020415,
	author = {Ghaleb, Asem and Pattabiraman, Karthik},
	title = {How effective are smart contract analysis tools? evaluating smart contract static analysis tools using bug injection},
	year = {2020},
	journal = {ISSTA 2020 - Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {415 – 427},
	doi = {10.1145/3395363.3397385},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85088916678&doi=10.1145%2f3395363.3397385&partnerID=40&md5=338f118585969b2e949714ce869c099c},
	abstract = {Security attacks targeting smart contracts have been on the rise, which have led to financial loss and erosion of trust. Therefore, it is important to enable developers to discover security vulnerabilities in smart contracts before deployment. A number of static analysis tools have been developed for finding security bugs in smart contracts. However, despite the numerous bug-finding tools, there is no systematic approach to evaluate the proposed tools and gauge their effectiveness. This paper proposes SolidiFI, an automated and systematic approach for evaluating smart contracts' static analysis tools. SolidiFI is based on injecting bugs (i.e., code defects) into all potential locations in a smart contract to introduce targeted security vulnerabilities. SolidiFI then checks the generated buggy contract using the static analysis tools, and identifies the bugs that the tools are unable to detect (false-negatives) along with identifying the bugs reported as false-positives. SolidiFI is used to evaluate six widely-used static analysis tools, namely, Oyente, Securify, Mythril, SmartCheck, Manticore and Slither, using a set of 50 contracts injected by 9369 distinct bugs. It finds several instances of bugs that are not detected by the evaluated tools despite their claims of being able to detect such bugs, and all the tools report many false positives. © 2020 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 35; All Open Access, Green Open Access}
}

@CONFERENCE{Molina-Jimenez201883,
	author = {Molina-Jimenez, Carlos and Sfyrakis, Ioannis and Solaiman, Ellis and Ng, Irene and Weng Wong, Meng and Chun, Alexis and Crowcroft, Jon},
	title = {Implementation of smart contracts using hybrid architectures with on and off-blockchain components},
	year = {2018},
	journal = {Proceedings - 8th IEEE International Symposium on Cloud and Services Computing, SC2 2018},
	pages = {83 – 90},
	doi = {10.1109/SC2.2018.00018},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060192820&doi=10.1109%2fSC2.2018.00018&partnerID=40&md5=a0df6c0ec5ee64ee860e9f47aba91605},
	abstract = {Decentralised (on-blockchain) and centralised (off-blockchain) platforms are available for the implementation of smart contracts. However, none of the two alternatives can individually provide the services and quality of services (QoS) imposed on smart contracts involved in a large class of applications. The reason is that blockchain platforms suffer from scalability, performance, transaction costs and other limitations. Likewise, off-blockchain platforms are afflicted by drawbacks emerging from their dependence on single trusted third parties. We argue that in several applications, hybrid platforms composed from the integration of on and off-blockchain platforms are more adequate. Developers that informatively choose between the three alternatives are likely to implement smart contracts that deliver the expected QoS. Hybrid architectures are largely unexplored. To help cover the gap and as a proof of concept, in this paper we discuss the implementation of smart contracts on hybrid architectures. We show how a smart contract can be split and executed partially on an off-blockchain contract compliance checker and partially on the rinkeby ethereum network. To test the solution, we expose it to sequences of contractual operations generated mechanically by a contract validator tool. © 2018 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 32; All Open Access, Green Open Access}
}

@CONFERENCE{Sober2021160,
	author = {Sober, Michael and Scaffino, Giulia and Spanring, Christof and Schulte, Stefan},
	title = {A Voting-Based Blockchain Interoperability Oracle},
	year = {2021},
	journal = {Proceedings - 2021 IEEE International Conference on Blockchain, Blockchain 2021},
	pages = {160 – 169},
	doi = {10.1109/Blockchain53845.2021.00030},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125647849&doi=10.1109%2fBlockchain53845.2021.00030&partnerID=40&md5=9b094662c09f4337285b6f16df9b4795},
	abstract = {Today's blockchain landscape is severely fragmented as more and more heterogeneous blockchain platforms have been developed in recent years. These blockchain platforms are not able to interact with each other or with the outside world since only little emphasis is placed on the interoperability between them. Already proposed solutions for blockchain interoperability such as naive relay or oracle solutions are usually not broadly applicable since they are either too expensive to operate or very resource-intensive. For that reason, we propose a blockchain interoperability oracle that follows a voting-based approach based on threshold signatures. The oracle nodes generate a distributed private key to execute an off-chain aggregation mechanism to collectively respond to requests. Compared to state-of-the-art relay schemes, our approach does not incur any ongoing costs and since the on-chain component only needs to verify a single signature, we can achieve remarkable cost savings compared to conventional oracle solutions. © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@ARTICLE{Wang20221795,
	author = {Wang, Haijun and Liu, Ye and Li, Yi and Lin, Shang-Wei and Artho, Cyrille and Ma, Lei and Liu, Yang},
	title = {Oracle-Supported Dynamic Exploit Generation for Smart Contracts},
	year = {2022},
	journal = {IEEE Transactions on Dependable and Secure Computing},
	volume = {19},
	number = {3},
	pages = {1795 – 1809},
	doi = {10.1109/TDSC.2020.3037332},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098794216&doi=10.1109%2fTDSC.2020.3037332&partnerID=40&md5=9150bb36aec88bee7fee91e6bcbba73f},
	abstract = {Despite the high stakes involved in smart contracts, they are often developed in an undisciplined manner, leaving the security and reliability of blockchain transactions at risk. In this article, we introduce ContraMaster - an oracle-supported dynamic exploit generation framework for smart contracts. Existing approaches mutate only single transactions; ContraMaster exceeds these by mutating the transaction sequences. ContraMaster uses data-flow, control-flow, and the dynamic contract state to guide its mutations. It then monitors the executions of target contract programs, and validates the results against a general-purpose semantic test oracle to discover vulnerabilities. Being a dynamic technique, it guarantees that each discovered vulnerability is a violation of the test oracle and is able to generate the attack script to exploit this vulnerability. In contrast to rule-based approaches, ContraMaster has not shown any false positives, and it easily generalizes to unknown types of vulnerabilities (e.g., logic errors). We evaluate ContraMaster on 218 vulnerable smart contracts. The experimental results confirm its practical applicability and advantages over the state-of-the-art techniques, and also reveal three new types of attacks.  © 2004-2012 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Green Open Access}
}

@ARTICLE{Wang20211,
	author = {Wang, Yun-Ciao and Chen, Chin-Ling and Deng, Yong-Yuan},
	title = {Authorization mechanism based on blockchain technology for protecting museum-digital property rights},
	year = {2021},
	journal = {Applied Sciences (Switzerland)},
	volume = {11},
	number = {3},
	pages = {1 – 39},
	doi = {10.3390/app11031085},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100077591&doi=10.3390%2fapp11031085&partnerID=40&md5=20e19a86465dae09c405bd9828a49e49},
	abstract = {In addition to the exhibition, collection, research, and educational functions of the museum, the development of a future museum includes the trend of leisure and sightseeing. Although the museum is a non-profit organization, if it can provide digital exhibits and collections under the premises of “intellectual property rights” and “cultural assets protection”, and licensing and adding value in various fields, it can generate revenue from digital licensing and handle the expenses of museum operations. This will be a new trend in the sustainable development of museum operations. Especially since the outbreak of COVID-19 at the beginning of this year (2020), the American Alliance of Museums (AAM) recently stated that nearly a third of the museums in the United States may be permanently closed since museum operations are facing “extreme financial difficulties.” This research is aimed at museums using the business model of “digital authorization”. It proposes an authorization mechanism based on block chain technology protecting the museums’ digital rights in the business model and the application of cryptography. The signature and time stamp mechanism achieve non-repudiation and timeless mechanism, which combines block chain and smart contracts to achieve verifiability, un-forgery, decentralization, and traceability, as well as the non-repudiation of the issue of cash flow with signatures and digital certificates, for the digital rights of museums in business. The business model proposes achievable sustainable development. Museums not only achieve the goal of promoting social education, but also solve their financial problems. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Gold Open Access}
}

@ARTICLE{Marchesi202250363,
	author = {Marchesi, Lodovica and Mannaro, Katiuscia and Marchesi, Michele and Tonelli, Roberto},
	title = {Automatic Generation of Ethereum-Based Smart Contracts for Agri-Food Traceability System},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {50363 – 50383},
	doi = {10.1109/ACCESS.2022.3171045},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129636433&doi=10.1109%2fACCESS.2022.3171045&partnerID=40&md5=be2440e9910baffa5a83d2d30cceabd8},
	abstract = {There is a growing demand for transparency along the agri-food chain, both from customers and governments. The adoption of blockchain technology to enable secure traceability for the management of the agri-food chain, provide information such as the provenance of a food product and prevent food fraud, is emerging rapidly, due to the inherent trust and inalterability provided by this technology. However, developing the right smart contracts for these use cases is even more of a challenge than it is for those used in other fields. Several management systems for the agri-food chain based on blockchain technology and smart contract have been proposed, all however ad-hoc for a specific product or production process and difficult to generalize. In this paper, we propose a new approach to easily customize and compose general Ethereum-based smart contracts designed for the agri-food industrial domain, to be able to reuse the code and modules and automate the process to shorten development times, while keeping it safe and reliable. Starting from the definition of the real production process, we aim to automatically generate both the smart contracts to manage the system and the user interfaces to interact with them, thus producing a system that works semi-automatically. Additionally, we describe a honey production case study to show how our approach works. Future work will first extend the scope of the approach to other supply chains, furthermore, while the current platform used is Ethereum, in the future our approach will be easily extended to other blockchain platforms.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Gold Open Access}
}

@ARTICLE{Gibaja-Romero2022,
	author = {Gibaja-Romero, Damián-Emilio and Cantón-Croda, Rosa-María},
	title = {Auction and Classification of Smart Contracts},
	year = {2022},
	journal = {Mathematics},
	volume = {10},
	number = {7},
	doi = {10.3390/math10071033},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127538704&doi=10.3390%2fmath10071033&partnerID=40&md5=8db1663e4ea60ae334584055f5640bf9},
	abstract = {The execution of smart contracts (SCs) relies on consensus algorithms that validate the miner who executes the contract and gets a fee to cover her expenditure. In this sense, miners are strategic agents who may focus on executing those contracts with the largest fee, to the detriment of other SCs’ execution times, which also harms the blockchain’s reputation. This paper analyzes the impact of miners’ competition on SCs’ execution times in a public blockchain. First, we explain that the Proof-of-Work mechanism casts similarities with a time auction, where the one who first adds blocks is the one who executes the contract and gets the fee. At equilibrium, costs negatively affect execution times, while the opposite holds concerning fees. However, this result does not capture the competition for other contracts; hence, we apply the Naïve Bayes method to classify SCs by considering a simulated database that comprises miners’ competition for several contracts. We observe that simultaneous competition generates patterns that differ from the ones expected by the auction solution. For example, miners’ valuation does not accelerate contracts’ execution, and high-cost smart contracts do not necessarily execute at last places. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Cheng2022103,
	author = {Cheng, Jieren and Yao, Xinzhi and Li, Hui and Lu, Hao and Xiong, Naixue and Luo, Ping and Liu, Le and Guo, Hao and Feng, Wen},
	title = {Cooperative Detection Method for DDoS Attacks Based on Blockchain},
	year = {2022},
	journal = {Computer Systems Science and Engineering},
	volume = {43},
	number = {1},
	pages = {103 – 117},
	doi = {10.32604/csse.2022.025668},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126957798&doi=10.32604%2fcsse.2022.025668&partnerID=40&md5=b16092f785e3a9a72cac1333d03a9bcc},
	abstract = {Distributed Denial of Service (DDoS) attacks is always one of the major problems for service providers. Using blockchain to detect DDoS attacks is one of the current popular methods. However, the problems of high time overhead and cost exist in the most of the blockchain methods for detecting DDoS attacks. This paper proposes a blockchain-based collaborative detection method for DDoS attacks. First, the trained DDoS attack detection model is encrypted by the Intel Software Guard Extensions (SGX), which provides high security for uploading the DDoS attack detection model to the blockchain. Secondly, the service provider uploads the encrypted model to Inter Planetary File System (IPFS) and then a corresponding Content-ID (CID) is generated by IPFS which greatly saves the cost of uploading encrypted models to the blockchain. In addition, due to the small amount of model data, the time cost of uploading the DDoS attack detection model is greatly reduced. Finally, through the blockchain and smart contracts, the CID is distributed to other service providers, who can use the CID to download the corresponding DDoS attack detection model from IPFS. Blockchain provides a decentralized, trusted and tamper-proof environment for service providers. Besides, smart contracts and IPFS greatly improve the distribution efficiency of the model, while the distribution of CID greatly improves the efficiency of the transmission on the blockchain. In this way, the purpose of collaborative detection can be achieved, and the time cost of transmission on blockchain and IPFS can be considerably saved. We designed a blockchain-based DDoS attack collaborative detection framework to improve the data transmission efficiency on the blockchain, and use IPFS to greatly reduce the cost of the distribution model. In the experiment, compared with most blockchain-based method for DDoS attack detection, the proposed model using blockchain distribution shows the advantages of low cost and latency. The remote authentication mechanism of Intel SGX provides high security and integrity, and ensures the availability of distributed models. © 2022 CRL Publishing. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Yan20221129,
	author = {Yan, Hao and Liu, Yanan and Qiu, Shuo and Hu, Shengzhou and Zhang, Weijian and Xia, Jinyue},
	title = {Towards public integrity audition for Cloud-IoT data based on blockchain},
	year = {2022},
	journal = {Computer Systems Science and Engineering},
	volume = {41},
	number = {3},
	pages = {1129 – 1142},
	doi = {10.32604/csse.2022.022317},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85119202513&doi=10.32604%2fcsse.2022.022317&partnerID=40&md5=4a76d39e4c41ba07386ec1b2821f67cd},
	abstract = {With the rapidly developing of Internet of Things (IoT), the volume of data generated by IoT systems is increasing quickly. To release the pressure of data management and storage, more and more enterprises and individuals prefer to integrate cloud service with IoT systems, in which the IoT data can be outsourced to cloud server. Since cloud service provider (CSP) is not fully trusted, a variety of methods have been proposed to deal with the problem of data integrity checking. In traditional data integrity audition schemes, the task of data auditing is usually performed by Third Party Auditor (TPA) which is assumed to be trustful. However, in real-life TPA is not trusted as people thought. Therefore, these schemes suffer from the underlying problem of single-point failure. Moreover, most of the traditional schemes are designed by RSA or bilinear map techniques which consume heavy computation and communication cost. To overcome these shortcomings, we propose a novel data integrity checking scheme for cloud-IoT data based on blockchain technique and homomorphic hash. In our scheme, the tags of all data blocks are computed by a homomorphic hash function and stored in blockchain. Moreover, each step within the process of data integrity checking is signed by the performer, and the signatures are stored in blockchain through smart contracts. As a result, each behavior for data integrity checking in our scheme can be traced and audited which improves the security of the scheme greatly. Furthermore, batch-audition for multiple data challenges is also supported in our scheme. We formalize the system model of our scheme and give the concrete construction. Detailed performance analyses demonstrate that our proposed scheme is efficient and practical without the trust-assumption of TPA. © 2022 CRL Publishing. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Hu20215,
	author = {Hu, Xing and Gao, Zhipeng and Xia, Xin and Lo, David and Yang, Xiaohu},
	title = {Automating User Notice Generation for Smart Contract Functions},
	year = {2021},
	journal = {Proceedings - 2021 36th IEEE/ACM International Conference on Automated Software Engineering, ASE 2021},
	pages = {5 – 17},
	doi = {10.1109/ASE51524.2021.9678552},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125480255&doi=10.1109%2fASE51524.2021.9678552&partnerID=40&md5=9dbc5b8cf52177307f95eea5b5e5a796},
	abstract = {Smart contracts have obtained much attention and are crucial for automatic financial and business transactions. For end-users who have never seen the source code, they can read the user notice shown in end-user client to understand what a transaction does of a smart contract function. However, due to time constraints or lack of motivation, user notice is often missing during the development of smart contracts. For end-users who lack the information of the user notices, there is no easy way for them to check the code semantics of the smart contracts. Thus, in this paper, we propose a new approach SMARTDOC to generate user notice for smart contract functions automatically. Our tool can help end-users better understand the smart contract and aware of the financial risks, improving the users' confidence on the reliability of the smart contracts. SMARTDOC exploits the Transformer to learn the representation of source code and generates natural language descriptions from the learned representation. We also integrate the Pointer mechanism to copy words from the input source code instead of generating words during the prediction process. We extract 7, 878 〈function, notice〉 pairs from 54, 739 smart contracts written in Solidity. Due to the limited amount of collected smart contract functions (i.e., 7, 878 functions), we exploit a transfer learning technique to utilize the learned knowledge to improve the performance of SMARTDOC. The learned knowledge obtained by the pre-training on a corpus of Java code, that has similar characteristics as Solidity code. The experimental results show that our approach can effectively generate user notice given the source code and significantly outperform the state-of-the-art approaches. To investigate human perspectives on our generated user notice, we also conduct a human evaluation and ask participants to score user notice generated by different approaches. Results show that SMARTDOC outperforms baselines from three aspects, naturalness, informativeness, and similarity.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@ARTICLE{Truong2022,
	author = {Truong, Hien and Hernández-Ramos, José L. and Martinez, Juan A. and Bernal Bernabe, Jorge and Li, Wenting and Marin Frutos, Agustin and Skarmeta, Antonio},
	title = {Enabling Decentralized and Auditable Access Control for IoT through Blockchain and Smart Contracts},
	year = {2022},
	journal = {Security and Communication Networks},
	volume = {2022},
	doi = {10.1155/2022/1828747},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132331995&doi=10.1155%2f2022%2f1828747&partnerID=40&md5=d795570bbe4e1cf339b3e34669ced996},
	abstract = {The increase in the interconnection of physical devices and the emergence of the 5 G paradigm foster the generation and distribution of massive amounts of data. The complexity associated with the management of these data requires a suitable access control approach that empowers citizens to control how their data are shared, so potential privacy issues can be mitigated. While well-known access control models are widely used in web and cloud scenarios, the IoT ecosystem needs to address the requirements of lightness, decentralization, and scalability to control the access to data generated by a huge number of heterogeneous devices. This work proposes CapBlock, a design that integrates a capability-based access control model and blockchain technology for a fully distributed evaluation of authorization policies and generation of access credentials using smart contracts. CapBlock is intended to manage the access to information in federated IoT environments where data need to be managed through access control policies defined by different data providers. The feasibility of CapBlock has been successfully evaluated in the scope of the EU research project IoTCrawler, which aims at building a secure search engine for IoT data in large-scale scenarios.  © 2022 Hien Truong et al.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Bian202133654,
	author = {Bian, Lingyu and Zhang, Linlin and Zhao, Kai and Wang, Hao and Gong, Shengjia},
	title = {Image-Based Scam Detection Method Using an Attention Capsule Network},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {33654 – 33665},
	doi = {10.1109/ACCESS.2021.3059806},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100912382&doi=10.1109%2fACCESS.2021.3059806&partnerID=40&md5=b5dcd74c271ecf680a47f08309f3bdfa},
	abstract = {In recent years, the rapid development of blockchain technology has attracted much attention from people around the world. Scammers take advantage of the pseudo-anonymity of blockchain to implement financial fraud. The Ponzi scheme, one of the main scam methods, has defrauded investors of large amounts of money, thereby harming their interests and hindering the application of blockchain. Unfortunately, the current detection technology typically largely relies on the source code of the contract or uses a single feature which does not fully represent the contract characteristics. In such a case, the detection of Ponzi schemes with high efficiency becomes urgent. In this paper, we propose an image-based scam detection method using an attention capsule network (SE-CapsNet) focused on Ethereum. The sequence of bytecode, the opcode frequency, and the application binary interface (ABI) call are extracted as features from the contract bytecode and ABI, further converted into grayscale images, and then mapped into three color channels to generate RGB images, which are used as the input of the model for detecting the Ponzi scheme contract. In addition, we employ fancy PCA for data augmentation to reduce the impact of imbalanced data on the detection results. Experimental results show that the image-based detection method using deep learning models can effectively detect contracts before transactions occur. Among them, our proposed SE-CapsNet obtains great detection results, with an F1 score of 98.38%.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 8; All Open Access, Gold Open Access}
}

@ARTICLE{Yuan2021,
	author = {Yuan, Ke and Yan, Yingjie and Xiao, Tong and Zhang, Wenchao and Zhou, Sufang and Jia, Chunfu},
	title = {Privacy-protection scheme of a credit-investigation system based on blockchain},
	year = {2021},
	journal = {Entropy},
	volume = {23},
	number = {12},
	doi = {10.3390/e23121657},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121207827&doi=10.3390%2fe23121657&partnerID=40&md5=6aab6999c85fa3eb800f0ec15fd64b17},
	abstract = {In response to the rapid growth of credit-investigation data, data redundancy among credit-investigation agencies, privacy leakages of credit-investigation data subjects, and data security risks have been reported. This study proposes a privacy-protection scheme for a credit-investigation system based on blockchain technology, which realizes the secure sharing of credit-investigation data among multiple entities such as credit-investigation users, credit-investigation agencies, and cloud service providers. This scheme is based on blockchain technology to solve the problem of islanding of credit-investigation data and is based on zero-knowledge-proof technology, which works by submitting a proof to the smart contract to achieve anonymous identity authentication, ensuring that the identity privacy of credit-investigation users is not disclosed; this scheme is also based on searchable-symmetric-encryption technology to realize the retrieval of the ciphertext of the credit-investigation data. A security analysis showed that this scheme guarantees the confidentiality, the availability, the tamper-proofability, and the ciphertext searchability of credit-investigation data, as well as the fairness and anonymity of identity authentication in the credit-investigation data query. An efficiency analysis showed that, compared with similar identity-authentication schemes, the proof key of this scheme is smaller, and the verification time is shorter. Compared with similar ciphertext-retrieval schemes, the time for this scheme to generate indexes and trapdoors and return search results is significantly shorter. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Rahmadika2023710,
	author = {Rahmadika, Sandi and Astillo, Philip Virgil and Choudhary, Gaurav and Duguma, Daniel Gerbi and Sharma, Vishal and You, Ilsun},
	title = {Blockchain-Based Privacy Preservation Scheme for Misbehavior Detection in Lightweight IoMT Devices},
	year = {2023},
	journal = {IEEE Journal of Biomedical and Health Informatics},
	volume = {27},
	number = {2},
	pages = {710 – 721},
	doi = {10.1109/JBHI.2022.3187037},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133760639&doi=10.1109%2fJBHI.2022.3187037&partnerID=40&md5=e793d29934c1de3e1456680f87925ce5},
	abstract = {The Internet of Medical Things (IoMT) has risen to prominence as a possible backbone in the health sector, with the ability to improve quality of life by broadening user experience while enabling crucial solutions such as near real-time remote diagnostics. However, privacy and security problems remain largely unresolved in the safety area. Various rule-based methods have been considered to recognize aberrant behaviors in IoMT and have demonstrated high accuracy of misbehavior detection appropriate for lightweight IoT devices. However, most of these solutions have privacy concerns, especially when giving context during misbehavior analysis. Moreover, falsified or modified context generates a high percentage of false positives and sometimes causes a by-pass in misbehavior detection. Relying on the recent powerful consolidation of blockchain and federated learning (FL), we propose an efficient privacy-preserving framework for secure misbehavior detection in lightweight IoMT devices, particularly in the artificial pancreas system (APS). The proposed approach employs privacy-preserving bidirectional long-short term memory (BiLSTM) and augments the security through integrating blockchain technology based on Ethereum smart contract environment. The effectiveness of the proposed model is bench-marked empirically in terms of sustainable privacy preservation, commensurate incentive scheme with an untraceability feature, exhaustiveness, and the compact results of a variant neural network approach. As a result, the proposed model has a 99.93% recall rate, showing that it can detect virtually all possible malicious events in the targeted use case. Furthermore, given an initial ether value of 100, the solution's average gas consumption and Ether spent are 84,456.5 and 0.03157625, respectively.  © 2022 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@ARTICLE{Wang2019127652,
	author = {Wang, Shangping and Wang, Yuying and Zhang, Yaling},
	title = {Blockchain-based fair payment protocol for deduplication cloud storage system},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {127652 – 127668},
	doi = {10.1109/ACCESS.2019.2939492},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077986348&doi=10.1109%2fACCESS.2019.2939492&partnerID=40&md5=3eeea8e9d1278dcd54382251fb859ed2},
	abstract = {Today more and more enterprises and individuals are outsourcing their data to cloud storage system. Data deduplication is one of the important technologies to reduce the storage cost of cloud storage system. In a cloud storage system with deduplication technology, the client can outsource the data files to the cloud storage server and pay for them. Fair payment is one of key issues in the cloud deduplication storage system. At present, a variety of secure deduplication encryption schemes have been designed to protect the privacy of client data. However, most existing fair payment solutions use traditional electronic cash systems to generate payment tokens, which requires a trusted authority to prevent double-spending. Trusted authorities will become bottlenecks in the payment system. Faced with this problem, in this paper, we propose a new decentralized fair payment protocol for cloud deduplication storage system by utilizing ethereum blockchain technology. The new protocol takes advantage of the decentralization of blockchain technology, allowing direct transactions without the participation of trusted third parties. In the new protocol, if a malicious situation occurs, the system can guarantee fair payment by pre-storing penalty money in the smart contract. Safety analysis and experimental analysis show that our new protocol is feasible. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Gold Open Access}
}

@ARTICLE{Khan2021,
	author = {Khan, Prince Waqas and Byun, Yung-Cheol},
	title = {Blockchain-based peer-to-peer energy trading and charging payment system for electric vehicles},
	year = {2021},
	journal = {Sustainability (Switzerland)},
	volume = {13},
	number = {14},
	doi = {10.3390/su13147962},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111137361&doi=10.3390%2fsu13147962&partnerID=40&md5=270d07b914335a18d732416f1d9a7c40},
	abstract = {The world is moving rapidly from carbon-producing vehicles to green transportation systems. Electric vehicles (EV) are a big step towards a friendly mode of transport. With the constant rise in the number of electric vehicles, we need a widespread and seamless charging infrastructure that supports seamless charging and billing. Some users generate electricity using solar panels and charge their electric vehicles. In contrast, some use charging stations, and they pay for vehicle charging. This raises the question of trust and transparency. There are many countries where laws are not strictly enforced to prevent fraud in payment systems. One of the preeminent problems presently existing with any of the trading systems is the lack of transparency. The service provider can overcharge the customer. Blockchain is a modern-day solution that mitigates trust and privacy issues. We have proposed a peer-to-peer energy trading and charging payment system for electric vehicles based on blockchain technology. Users who have excess electricity which they can sell to the charging stations through smart contracts. Electric vehicle users can pay the charging bills through electronic wallets. We have developed the electric vehicle’s automatic-payment system using the open-source platform Hyperledger fabric. The proposed system will reduce human interaction and increase trust, transparency, and privacy among EV participants. We have analyzed the resource utilization and also performed average transaction latency and throughput evaluation. This system can be helpful for the policymakers of smart cities. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 23; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Mao201973131,
	author = {Mao, Dianhui and Wang, Fan and Wang, Yalei and Hao, Zhihao},
	title = {Visual and User-Defined Smart Contract Designing System Based on Automatic Coding},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {73131 – 73143},
	doi = {10.1109/ACCESS.2019.2920776},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85067665985&doi=10.1109%2fACCESS.2019.2920776&partnerID=40&md5=4b65b0e235ab0bc6f9e8a3dc53fb0b12},
	abstract = {Smart contract applications based on Ethereum blockchain have been widely used in many fields. They are developed by professional developers using specialized programming languages like solidity. It requires high requirements on knowledge of the specialized field and the proficiency in contract programming. Thus, it is hard for normal users to design a usable smart contract based on their own demands. Most current studies about smart contracts focus on the security of coding while lack of friendly tools for users to design the specialized templates of contracts coding. This paper provides a visual and user-defined smart contract designing systems. It makes the development of domain-specific smart contracts simpler and visualization for contract users. The system implements the domain-specific features extraction about the crawled data sets of smart contract programs by TF-IDF and K-means++ clustering algorithm. Then, it achieves the automatic generation of unified basic function codes by Char-RNN (improved by LSTM) based on the domain-specific features. The system adopts Google Blockly and links the generated codes with UI controls. Finally, it provides a set of specialized templates of basic functions for users to design smart contracts by the friendly interface. It reduces the difficulty and costs of contract programming. The paper offers a case study to design contracts by users. The designed contracts were validated on the existing system to implement the food trading and traders' credit evaluation. The experimental results show that the designed smart contracts achieve good integration with the existing system and they can be deployed and compiled successfully. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 22; All Open Access, Gold Open Access}
}

@ARTICLE{Suliman201932,
	author = {Suliman, Ahmed and Husain, Zainab and Abououf, Menatallah and Alblooshi, Mansoor and Salah, Khaled},
	title = {Monetization of IoT data using smart contracts},
	year = {2019},
	journal = {IET Networks},
	volume = {8},
	number = {1},
	pages = {32 – 37},
	doi = {10.1049/iet-net.2018.5026},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060139631&doi=10.1049%2fiet-net.2018.5026&partnerID=40&md5=302ec166a36f385c7c02b9e79611d198},
	abstract = {In the era of the Internet of Things (IoT), smart connected devices have the ability to generate data that could be of interest to the public. This paves the way for an emerging market for monetized data exchanges, where IoT device owners can sell access to live data generated by their connected devices to interested users. Implementing a trusted, cost-efficient, automatic monetization solution of IoT data can be a challenging problem and usually involves intermediaries and centralised governance and management. Blockchain and smart contracts introduce a secure and trusted platform to carry out transactions in a highly trusted, secure, decentralised manner. In this study, they present a blockchain-solution and implementation using Ethereum smart contracts for monetizing IoT data with automated payment involving no intermediary. The authors discuss key aspects related to architectural design, entity relations, interactions among participants, logic flow, implementation and testing of the overall system functionality. © The Institution of Engineering and Technology 2018.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 76; All Open Access, Bronze Open Access}
}

@CONFERENCE{Angrish20181180,
	author = {Angrish, Atin and Craver, Benjamin and Hasan, Mahmud and Starly, Binil},
	title = {A Case Study for Blockchain in Manufacturing: "fabRec": A Prototype for Peer-to-Peer Network of Manufacturing Nodes},
	year = {2018},
	volume = {26},
	pages = {1180 – 1192},
	doi = {10.1016/j.promfg.2018.07.154},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052907630&doi=10.1016%2fj.promfg.2018.07.154&partnerID=40&md5=460e88ac96a9e9cadc026c50a345e5c1},
	abstract = {With product customization an emerging business opportunity, organizations must find ways to collaborate and enable sharing of information in an inherently trust-less network. In this paper, we propose - "FabRec": a decentralized approach to handle manufacturing information generated by various organizations using blockchain technology. We propose a system in which a decentralized network of manufacturing machines and computing nodes can enable automated transparency of an organization's capability, third party verification of such capability through a trail of past historic events and automated mechanisms to drive paperless contracts between participants using 'smart contracts'. Our system decentralizes critical information about the manufacturer and makes it available on a peer-to-peer network composed of fiduciary nodes to ensure transparency and data provenance through a verifiable audit trail. We present a testbed platform through a combination of manufacturing machines, system-on-chip platforms and computing nodes to demonstrate mechanisms through which a consortium of disparate organizations can communicate through a decentralized network. Our prototype testbed demonstrates the value of computer code residing on a decentralized network for verification of information on the blockchain and ways in which actions can be autonomously initiated in the physical world. This paper intends to expose system elements in preparation for much larger field tests through the working prototype and discusses the future potential of blockchain for manufacturing IT. © 2018 The Author(s).},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 87; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Tolmach2022,
	author = {Tolmach, Palina and Li, Yi and Lin, Shang-Wei},
	title = {Property-Based Automated Repair of DeFi Protocols},
	year = {2022},
	journal = {ACM International Conference Proceeding Series},
	doi = {10.1145/3551349.3559560},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85146926405&doi=10.1145%2f3551349.3559560&partnerID=40&md5=57417b52763e638b5190e8a97d12a486},
	abstract = {Programming errors enable security attacks on smart contracts, which are used to manage large sums of financial assets. Automated program repair (APR) techniques aim to reduce developers' burden of manually fixing bugs by automatically generating patches for a given issue. Existing APR tools for smart contracts focus on mitigating typical smart contract vulnerabilities rather than violations of functional specification. However, in decentralized financial (DeFi) smart contracts, the inconsistency between intended behavior and implementation translates into the deviation from the underlying financial model, resulting in monetary losses for the application and its users. In this work, we propose DeFinery - a technique for automated repair of a smart contract that does not satisfy a user-defined correctness property. To explore a larger set of diverse patches while providing formal correctness guarantees w.r.t. the intended behavior, we combine search-based patch generation with semantic analysis of an original program for inferring its specification. Our experiments in repairing 9 real-world and benchmark smart contracts prove that DeFinery efficiently generates high-quality patches that cannot be found by other existing tools.  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{John William2023,
	author = {John William, Alfred Daniel and Rajendran, Santhosh and Pranam, Pradish and Berry, Yosuva and Sreedharan, Anuj and Gul, Junaid and Paul, Anand},
	title = {Blockchain Technologies: Smart Contracts for Consumer Electronics Data Sharing and Secure Payment},
	year = {2023},
	journal = {Electronics (Switzerland)},
	volume = {12},
	number = {1},
	doi = {10.3390/electronics12010208},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145822521&doi=10.3390%2felectronics12010208&partnerID=40&md5=7ff8fd453367790027aab47331830684},
	abstract = {Blockchain may be an optimal solution when a detailed and transparent record of assets is necessary. It is imperative to manage and safeguard digital interactions or maintain a decentralized and shared system of records in applications, such as those used for electricity production, transmission, distribution, and consumption and those used for data sharing and secure payments. Such applications can benefit from blockchain technology to resolve these problems. In the proposed blockchain-based consumer electronics data sharing and safe payment framework, an innovative IoT meter detects monthly consumption and transmits the data to a decentralized application that is stored in the blockchain. This decentralized platform will generate the bill and provide incentives for legitimate consumers. Finally, the end-to-end latency and throughput were used to evaluate the performance of the proposed approach. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Jurgelaitis2023,
	author = {Jurgelaitis, Mantas and Čeponienė, Lina and Butkus, Karolis and Butkienė, Rita and Drungilas, Vaidotas},
	title = {MDA-Based Approach for Blockchain Smart Contract Development},
	year = {2023},
	journal = {Applied Sciences (Switzerland)},
	volume = {13},
	number = {1},
	doi = {10.3390/app13010487},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145714815&doi=10.3390%2fapp13010487&partnerID=40&md5=85f26cbffdf95d3e87eef085b8b2ba6c},
	abstract = {Blockchain smart contracts can support the decentralisation of business processes, but due to smart contracts’ specifics, their development is a complicated process. Introducing model-driven development principles in smart contract development can facilitate requirement specification, design, and implementation activities. This paper presents a model-driven development method MDAsmartCD (Model-Driven Architecture-based Smart Contract Development) to alleviate smart contract development by supporting the complete MDA life cycle, covering the definition of Computation-Independent Model, Platform-Independent Model, and two instances of Platform-Specific Models. In MDAsmartCD, model transformations (model-to-model and model-to-text) are used to produce smart contract code in the Hyperledger Fabric platform Go and the Ethereum platform Solidity programming languages. The method application was demonstrated by implementing the smart contract for the hackathon solution and executing the generated Solidity and Go smart contracts in the workflow of issuing certificates for hackathon participants. During the execution of the workflow, both deployed smart contracts behaved identically and recorded analogous results in respective blockchain data storages. This demonstrated that the MDAsmartCD method enables the generation of compilable and executable smart contract code, ready for deployment on a blockchain platform. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Zhou2022,
	author = {Zhou, Qian and Lai, Chengzhe and Guo, Qili and Ma, Haoyan and Zheng, Dong},
	title = {A novel privacy protection scheme for internet of things based on blockchain and privacy set intersection technique},
	year = {2022},
	journal = {Journal of Cloud Computing},
	volume = {11},
	number = {1},
	doi = {10.1186/s13677-022-00375-6},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85144161293&doi=10.1186%2fs13677-022-00375-6&partnerID=40&md5=db0edb8b93cc1c409f70be102062442f},
	abstract = {In the era of big data, an ocean of data generated by Internet of Things (IoT) devices will be analyzed and processed by cloud computing. However, outsourcing of data can lead to leakage of user privacy to those unreliable service providers. In this paper, we propose a novel privacy-preserving scheme for IoT device by employing privacy set intersection (PSI) and blockchain technique to achieve data privacy. First, a homomorphic encryption PSI technique based on 0-1 encoding is proposed, which well hides the set base to ensure data privacy. Second, combining blockchain structure and smart contract, the proposed scheme can improve the efficiency of data sharing by storing the shared data on a blockchain. Third, the security analysis shows that the scheme has extremely high control over the individual data and can ensure the security and privacy of the data. Finally, we compare the functionality with other relevant schemes and demonstrate that our scheme functions well with low communication and computational overhead. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Albert2019390,
	author = {Albert, Elvira and Correas, Jesús and Gordillo, Pablo and Román-Díez, Guillermo and Rubio, Albert},
	title = {SafeVM: A safety verifier for ethereum smart contracts},
	year = {2019},
	journal = {ISSTA 2019 - Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {390 – 393},
	doi = {10.1145/3293882.3338999},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85070602983&doi=10.1145%2f3293882.3338999&partnerID=40&md5=b6d166b361011ac413de8a01dcf71326},
	abstract = {Ethereum smart contracts are public, immutable and distributed and, as such, they are prone to vulnerabilities sourcing from programming mistakes of developers. This paper presents SAFEVM, a verification tool for Ethereum smart contracts that makes use of state-of-the-art verification engines for C programs. SAFEVM takes as input an Ethereum smart contract (provided either in Solidity source code, or in compiled EVM bytecode), optionally with assert and require verification annotations, and produces in the output a report with the verification results. Besides general safety annotations, SAFEVM handles the verification of array accesses: it automatically generates SV-COMP verification assertions such that C verification engines can prove safety of array accesses. Our experimental evaluation has been undertaken on all contracts pulled from etherscan.io (more than 24,000) by using as back-end verifiers CPAchecker, SeaHorn and VeryMax. © 2019 Association for Computing Machinery.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 15; All Open Access, Green Open Access}
}

@ARTICLE{Wang20231805,
	author = {Wang, Jin and Ou, Wei and Alfarraj, Osama and Tolba, Amr and Kim, Gwang-Jun and Ren, Yongjun},
	title = {Block Verification Mechanism Based on Zero-Knowledge Proof in Blockchain},
	year = {2023},
	journal = {Computer Systems Science and Engineering},
	volume = {45},
	number = {2},
	pages = {1805 – 1819},
	doi = {10.32604/csse.2023.029622},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143817417&doi=10.32604%2fcsse.2023.029622&partnerID=40&md5=1437c05c35260ac35a198869f9fcb72d},
	abstract = {Since transactions in blockchain are based on public ledger verification, this raises security concerns about privacy protection. And it will cause the accumulation of data on the chain and resulting in the low efficiency of block verification, when the whole transaction on the chain is verified. In order to improve the efficiency and privacy protection of block data verification, this paper proposes an efficient block verification mechanism with privacy protection based on zeroknowledge proof (ZKP), which not only protects the privacy of users but also improves the speed of data block verification. There is no need to put the whole transaction on the chain when verifying block data. It just needs to generate the ZKP and root hash with the transaction information, then save them to the smart contract for verification. Moreover, the ZKP verification in smart contract is carried out to realize the privacy protection of the transaction and efficient verification of the block. When the data is validated, the buffer accepts the complete transaction, updates the transaction status in the cloud database, and packages up the chain. So, the ZKP strengthens the privacy protection ability of blockchain, and the smart contracts save the time cost of block verification. © 2023 CRL Publishing. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Tian2022450,
	author = {Tian, Zhenzhou and Tian, Jie and Wang, Zhongmin and Chen, Yanping and Xia, Hong and Chen, Lingwei},
	title = {Landscape estimation of solidity version usage on Ethereum via version identification},
	year = {2022},
	journal = {International Journal of Intelligent Systems},
	volume = {37},
	number = {1},
	pages = {450 – 477},
	doi = {10.1002/int.22633},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113734583&doi=10.1002%2fint.22633&partnerID=40&md5=fa3c3083cd897e1a2155fb75f6bc12d4},
	abstract = {The creative introduction of the smart contracts in Ethereum, which are Turing-complete programs, boosted blockchain to the second generation. Meantime, the specifically designed young and fast-evolving programming languages, such as Solidity, become the key factors behind smart contracts being the breeding ground of ubiquitous defects. As many contract defects occur within certain compiler versions, knowing the specific compiler version used to generate the contract's bytecode, facilitates the design of more targeted defect detection approaches, and provides ways to estimate the risks faced of invoking it. To this end, we propose VSmart (compiler Version identification for Smart contract), which takes in the bytecode of the smart contract to be analyzed and outputs the major compiler version used to produce it. The basic idea is to leverage deep neural networks to grasp version-indicative features from contracts' normalized opcode sequences, and train classifiers on a data set consisting of 131,546 smart contracts with ground-truth labels we collected from Etherscan. The performance evaluation conducted shows that VSmart achieves nearly 98% accuracy in identifying major Solidity compiler versions. Further, on the basis of VSmart, we perform an empirical study on the distribution of the Solidity compiler versions on a wild data set consisting of 15,326,672 nontrivial smart contracts actually deployed on the Ethereum blockchain. The landscape estimation results show that the Solidity version distribution is rather imbalanced, with Solidity 0.4 being the most popular one; and the developers' Solidity usage practices conflict with the official's suggestion of always using the latest version, while they tend to gradually switch to newer versions. © 2021 Wiley Periodicals LLC},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Bronze Open Access}
}

@ARTICLE{Sadiq20217000,
	author = {Sadiq, Ayesha and Javed, Muhammad Umar and Khalid, Rabiya and Almogren, Ahmad and Shafiq, Muhammad and Javaid, Nadeem},
	title = {Blockchain Based Data and Energy Trading in Internet of Electric Vehicles},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {7000 – 7020},
	doi = {10.1109/ACCESS.2020.3048169},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099101225&doi=10.1109%2fACCESS.2020.3048169&partnerID=40&md5=7261ab6f0e498984a407bd879b70d67d},
	abstract = {The drastic increase in real-time vehicle generated data of various types has imparted a great concept of data trading in vehicular networks. Whereas immense usage of Electric Vehicles (EVs) as mobile energy carriers have supported distributed energy trading due to their bidirectional charging and discharging capabilities. The trustless environment of Internet of Electric Vehicles (IoEV), including fuel vehicles and EVs, encounters trading disputes and conflicting interests among trading parties. To address these challenges, we exploit consortium blockchain to maintain transparency and trust in trading activities. Smart contracts are used to tackle trading disputes and illegal actions. Data duplication problem occurs when a dishonest user sell previously traded data multiple times for financial gain. Therefore, data duplication validation is done through previously stored hash-list at roadside units (RSUs) employed with bloom filters for efficient data lookup. Removing data duplication at an earlier stage reduces storage cost. Moreover, an elliptic curve bilinear pairing based digital signature scheme is used to ensure the reliability and integrity of traded data. To ensure persistent availability of traded data, InterPlanetary File System (IPFS) is used, which provides fault-tolerant and a reliable data storage without any single point of failure. On the other hand, the energy trading transactions among EVs face some security and privacy protection challenges. An adversary can infer the energy trading records of EVs, and launch the data linkage attacks. To address this issue, an account generation technique is used that hides the energy trading trends. The new account generation for an EV depends upon its traded volume of energy. The experimental results verify the efficiency of the proposed data and energy trading scheme in IoEV with the reliable and secure data storage. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 37; All Open Access, Gold Open Access}
}

@CONFERENCE{Qasse202135,
	author = {Qasse, Ilham and Mishra, Shailesh and Hamdaqa, Mohammad},
	title = {IContractBot: A Chatbot for Smart Contracts' Specification and Code Generation},
	year = {2021},
	journal = {Proceedings - 2021 IEEE/ACM 3rd International Workshop on Bots in Software Engineering, BotSE 2021},
	pages = {35 – 38},
	doi = {10.1109/BotSE52550.2021.00015},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112865562&doi=10.1109%2fBotSE52550.2021.00015&partnerID=40&md5=78981d50db4448e61b3e1dd933a67cf5},
	abstract = {Recently, Blockchain technology adoption has expanded to many application areas due to the evolution of smart contracts. However, developing smart contracts is non-trivial and challenging due to the lack of tools and expertise in this field. A promising solution to overcome this issue is to use Model-Driven Engineering (MDE), however, using models still involves a learning curve and might not be suitable for non-technical users. To tackle this challenge, chatbot or conversational interfaces can be used to assess the non-technical users to specify a smart contract in gradual and interactive manner. In this paper, we propose iContractBot, a chatbot for modeling and developing smart contracts. Moreover, we investigate how to integrate iContractBot with iContractML, a domainspecific modeling language for developing smart contracts, and instantiate intention models from the chatbot. The iContractBot framework provides a domain-specific language (DSL) based on the user intention and performs model-to-text transformation to generate the smart contract code. A smart contract use case is presented to demonstrate how iContractBot can be utilized for creating models and generating the deployment artifacts for smart contracts based on a simple conversation.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@CONFERENCE{Puggioni2020,
	author = {Puggioni, Edoardo and Shaghaghi, Arash and Doss, Robin and Kanhere, Salil S.},
	title = {Towards Decentralized IoT Updates Delivery Leveraging Blockchain and Zero-Knowledge Proofs},
	year = {2020},
	journal = {2020 IEEE 19th International Symposium on Network Computing and Applications, NCA 2020},
	doi = {10.1109/NCA51143.2020.9306689},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099732103&doi=10.1109%2fNCA51143.2020.9306689&partnerID=40&md5=4d9555e51a033b164b2e90e2a53cee92},
	abstract = {Internet of Things (IoT) devices are being deployed in huge numbers around the world, and often present serious vulnerabilities. Accordingly, delivering regular software updates is critical to secure IoT devices. Manufactures face two predominant challenges in providing software updates to IoT devices: 1) scalability of the current client-server model and 2) integrity of the distributed updates-exacerbated due to the devices' computing power and lightweight cryptographic primitives. Motivated by these limitations, we propose CrowdPatching, a blockchain-based decentralized protocol, allowing manufacturers to delegate the delivery of software updates to self-interested distributors in exchange for cryptocurrency. Manufacturers announce updates by deploying a smart contract (SC), which in turn will issue cryptocurrency payments to any distributor who provides an unforgeable proof-of-delivery. The latter is provided by IoT devices authorizing the SC to issue payment to a distributor when the required conditions are met. These conditions include the requirement for a distributor to generate a zero-knowledge proof, generated with a novel proving system called zk-SNARKs. Compared with related work, CrowdPatching protocol offers three main advantages. First, the number of distributors can scale indefinitely by enabling the addition of new distributors at any time after the initial distribution by manufacturers (i.e., redistribution among the distributor network). The latter is not possible in existing protocols and is not account for. Secondly, we leverage the recent common integration of gateway or Hub in IoT deployments in our protocol to make CrowdPatching feasible even for the more constraint IoT devices. Thirdly, the trustworthiness of distributors is considered in our protocol, rewarding the honest distributors' engagements. We provide both informal and formal security analysis of CrowdPatching using Tamarin Prover.  © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access}
}

@CONFERENCE{Wüstholz20201398,
	author = {Wüstholz, Valentin and Christakis, Maria},
	title = {Harvey: A greybox fuzzer for smart contracts},
	year = {2020},
	journal = {ESEC/FSE 2020 - Proceedings of the 28th ACM Joint Meeting European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages = {1398 – 1409},
	doi = {10.1145/3368089.3417064},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097168930&doi=10.1145%2f3368089.3417064&partnerID=40&md5=e21b219b17d9867c7969050d428a6c55},
	abstract = {We present Harvey, an industrial greybox fuzzer for smart contracts, which are programs managing accounts on a blockchain. Greybox fuzzing is a lightweight test-generation approach that effectively detects bugs and security vulnerabilities. However, greybox fuzzers randomly mutate program inputs to exercise new paths; this makes it challenging to cover code that is guarded by narrow checks. Moreover, most real-world smart contracts transition through many different states during their lifetime, e.g., for every bid in an auction. To explore these states and thereby detect deep vulnerabilities, a greybox fuzzer would need to generate sequences of contract transactions, e.g., by creating bids from multiple users, while keeping the search space and test suite tractable. In this paper, we explain how Harvey alleviates both challenges with two key techniques. First, Harvey extends standard greybox fuzzing with a method for predicting new inputs that are more likely to cover new paths or reveal vulnerabilities in smart contracts. Second, it fuzzes transaction sequences in a targeted and demand-driven way. We have evaluated our approach on 27 real-world contracts. Our experiments show that our techniques significantly increase Harvey's effectiveness in achieving high coverage and detecting vulnerabilities, in most cases orders-of-magnitude faster. © 2020 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 42; All Open Access, Green Open Access}
}

@ARTICLE{Seven2020175713,
	author = {Seven, Serkan and Yao, Gang and Soran, Ahmet and Onen, Ahmet and Muyeen, S.M.},
	title = {Peer-to-peer energy trading in virtual power plant based on blockchain smart contracts},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {175713 – 175726},
	doi = {10.1109/ACCESS.2020.3026180},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099563034&doi=10.1109%2fACCESS.2020.3026180&partnerID=40&md5=09379c4b79d7714ff0a404760d96c702},
	abstract = {A novel Peer-to-peer (P2P) energy trading scheme for a Virtual Power Plant (VPP) is proposed by using Smart Contracts on Ethereum Blockchain Platform. The P2P energy trading is the recent trend the power society is keen to adopt carrying out several trial projects as it eases to generate and share the renewable energy sources in a distributed manner inside local community. Blockchain and smart contracts are the up-and-coming phenomena in the scene of the information technology used to be considered as the cutting-edge research topics in power systems. Earlier works on P2P energy trading including and excluding blockchain technology were focused mainly on the optimization algorithm, Information and Communication Technology, and Internet of Things. Therefore, the financial aspects of P2P trading in a VPP framework is focused and in that regard a P2P energy trading mechanism and bidding platform are developed. The proposed scheme is based on public blockchain network and auction is operated by smart contract addressing both cost and security concerns. The smart contract implementation and execution in a VPP framework including bidding, withdrawal, and control modules developments are the salient feature of this work. The proposed architecture is validated using realistic data with the Ethereum Virtual Machine (EVM) environment of Ropsten Test Network. This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 57; All Open Access, Gold Open Access}
}

@ARTICLE{Kumar20221,
	author = {Kumar, Randhir and Kumar, Prabhat and Aljuhani, Ahamed and Islam, A.K.M.N. and Jolfaei, Alireza and Garg, Sahil},
	title = {Deep Learning and Smart Contract-Assisted Secure Data Sharing for IoT-Based Intelligent Agriculture},
	year = {2022},
	journal = {IEEE Intelligent Systems},
	pages = {1–8},
	doi = {10.1109/MIS.2022.3201553},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85137871657&doi=10.1109%2fMIS.2022.3201553&partnerID=40&md5=ade7b4da455501c80041eeb68080d0f8},
	abstract = {The recent development of Internet of Things (IoT) and Unmanned Aerial Vehicles has revolutionized traditional agriculture with intelligence and automation. In a typical Intelligent Agriculture (IA) ecosystem, massive and real-time data are generated, analyzed, and sent to the Cloud Server (CS) for the purpose of addressing complex agricultural issues, such as yield prediction, water feed calculation, and so on. This helps farmer and associated stakeholders to take correct decision that improves the yield and quality of agricultural product. However, the distributed nature of IA entities and the usage of insecure wireless communication open various challenges related to data sharing, monitoring, storage, and further makes the entire IA ecosystem vulnerable to various potential attacks. In this article, we exploit deep learning and smart contract to propose a new IoT-enabled IA framework for enabling secure data sharing among its various entities. Specifically, first we develop new authentication and key management scheme to ensure secure data transmission in IoT-enabled IA. The encrypted transactions are then used by the CS to analyze and further detect intrusions by a novel deep learning architecture. In CS, the smart contract (SC)-based consensus mechanism is executed on legitimate transactions that verifies and adds the formed blocks into blockchain by a peer-to-peer CSs network. In comparison to existing competing security solutions, a rigorous comparative research demonstrates that the proposed approach provides greater security and more utility characteristics. Author},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Subathra2022,
	author = {Subathra, G. and Antonidoss, A. and Singh, Bhupesh Kumar},
	title = {Decentralized Consensus Blockchain and IPFS-Based Data Aggregation for Efficient Data Storage Scheme},
	year = {2022},
	journal = {Security and Communication Networks},
	volume = {2022},
	doi = {10.1155/2022/3167958},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134568603&doi=10.1155%2f2022%2f3167958&partnerID=40&md5=97d8de0b291cf39c48c526bf5ca1313b},
	abstract = {By the development and advancement of blockchain technique, Internet of Things (IoT) proliferation driven devices and the application of blockchain-enabled IoT alter the view and operating infrastructure of the smart networks. The blockchain is responsible for supporting decentralized systems and offers secured means of authentication, management, and access to IoT system thereby deploying smart contracts offered by Ethereum. The increasing demand and the blockchain expansion generate huge volume of sensitive data. The growing demand and expansion of blockchain-IoT systems is generating large volume of sensitive data. Furthermore, distributed denial-of-service (DDoS) attacks are regarded as the most promising threats for smart contracts in the blockchain-based systems. Therefore, there is a need to detect and classify the attack type and the data should be stored in server more securely with the use of blockchain and data aggregation method. For this purpose, this presented technique aims at introducing decentralized consensus blockchain and Interplanetary file system (IPFS) based data aggregation for effective classification and data storage. The attack is detected using meta-hyperparameter random forest (MHP-RF) classifier. Once the attack is detected, the transaction information is stored in server securely by means of smart contract-based blockchain system. The transaction handling stage classifies the transaction type as normal or abnormal one which then followed by execution of business logic by smart contract thereby appending the transaction of blockchain in the network cloud. The consensus blockchain technique is employed with the use of PoW-enabled scheme integrated with Elgamal-based data aggregation. Therefore, the system security is improved and the intrusion is prevented greatly. The performance analysis of the system is analyzed in terms of accuracy, precision, recall, F-score, Encryption time, decryption time, execution time, and space complexity. The attained outcomes are compared with traditional approaches to prove the effectiveness of proposed strategy. The proposed system is said to be effective in time consumption, classifier performance, and in overcoming space complexity issues.  © 2022 G. Subathra et al.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access}
}

@ARTICLE{Ersotelos2021,
	author = {Ersotelos, Nikolaos and Bottarelli, Mirko and Al-Khateeb, Haider and Epiphaniou, Gregory and Alhaboby, Zhraa and Pillai, Prashant and Aggoun, Amar},
	title = {Blockchain and iomt against physical abuse: Bullying in schools as a case study},
	year = {2021},
	journal = {Journal of Sensor and Actuator Networks},
	volume = {10},
	number = {1},
	doi = {10.3390/jsan10010001},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107977799&doi=10.3390%2fjsan10010001&partnerID=40&md5=c5dce7e2233f3d907fedd67095a74231},
	abstract = {By law, schools are required to protect the well-being of students against problems such as on-campus bullying and physical abuse. In the UK, a report by the Office for Education (OfE) showed 17% of young people had been bullied during 2017–2018. This problem continues to prevail with consequences including depression, anxiety, suicidal thoughts, and eating disorders. Additionally, recent evidence suggests this type of victimisation could intensify existing health complications. This study investigates the opportunities provided by Internet of Medical Things (IoMT) data towards next-generation safeguarding. A new model is developed based on blockchain technology to enable real-time intervention triggered by IoMT data that can be used to detect stressful events, e.g., when bullying takes place. The model utilises private permissioned blockchain to manage IoMT data to achieve quicker and better decision-making while revolutionising aspects related to compliance, double-entry, confidentiality, and privacy. The feasibility of the model and the interaction between the sensors and the blockchain was simulated. To facilitate a close approximation of an actual IoMT environment, we clustered and decomposed existing medical sensors to their attributes, including their function, for a variety of scenarios. Then, we demonstrated the performance and capabilities of the emulator under different loads of sensor-generated data. We argue to the suitability of this emulator for schools and medical centres to conduct feasibility studies to address sensor data with disruptive data processing and management technologies. © 2020 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Maslin2019249,
	author = {Maslin, Madeleine and Watt, Millicent and Yong, Christopher},
	title = {Research methodologies to support the development of blockchain standards},
	year = {2019},
	journal = {Journal of ICT Standardization},
	volume = {7},
	number = {3},
	pages = {249 – 268},
	doi = {10.13052/jicts2245-800X.734},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075671235&doi=10.13052%2fjicts2245-800X.734&partnerID=40&md5=ae734ec876348d048c9bbc6afedc4403},
	abstract = {This paper dissects the research methodologies implemented by the Research Team for the Smart Contracts Working Group (TC-307/IT-041 Blockchain and Distributed Ledger Technologies) in developing standards to inform best practice in the design and use of blockchain and distributed ledger technologies. In doing so, it explores the origins of blockchain standardisation and outlines the high-level methodology for conducting and delivering research in this rapidly evolving space. Using three case studies, this paper shows how different tasks give rise to, and benefit from, specialised methodologies. These case studies also highlight a number of challenges and opportunities, and demonstrate how a flexible research approach can increase efficiency and generate findings that are likely to influence blockchain standardisation at a global level. Case Study 1 describes our research into the legal status of smart contracts and the challenge of delivering clear findings about unclear subject matter. Case Study 2, which involved examining the sufficiency of existing regulatory frameworks in the supply chain and trade facilitation context, illustrates how rigid formatting specifications can impact the content of findings. In contrast, Case Study 3 concerns a project to incorporate the United Nations Sustainable Development Goals into new and existing Standards and shows how researchers’ knowledge can be harnessed as a valuable source of information in its own right. Finally, this paper extrapolates practical lessons for researchers who are interested in developing standards for emerging technologies, or simply undertaking much needed research into this area. © 2019 the Author(s). All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Bronze Open Access}
}

@ARTICLE{Zichichi2020100384,
	author = {Zichichi, Mirko and Ferretti, Stefano and D'Angelo, Gabriele},
	title = {A Framework Based on Distributed Ledger Technologies for Data Management and Services in Intelligent Transportation Systems},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {100384 – 100402},
	doi = {10.1109/ACCESS.2020.2998012},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85086302008&doi=10.1109%2fACCESS.2020.2998012&partnerID=40&md5=057689ea191d7dd90cb5d295bcf623c5},
	abstract = {Data are becoming the cornerstone of many businesses and entire systems infrastructure. Intelligent Transportation Systems (ITS) are no different. The ability of intelligent vehicles and devices to acquire and share environmental measurements in the form of data is leading to the creation of smart services for the benefit of individuals. In this paper, we present a system architecture to promote the development of ITS using distributed ledgers and related technologies. Thanks to these, it becomes possible to create, store and share data generated by users through the sensors on their devices or vehicles, while on the move. We propose an architecture based on Distributed Ledger Technologies (DLTs) to offer features such as immutability, traceability and verifiability of data. IOTA, a promising DLT for IoT, is used together with Decentralized File Storages (DFSes) to store and certify data (and their related metadata) coming from vehicles or by the users' devices themselves (smartphones). Ethereum is then exploited as the smart contract platform that coordinates the data sharing through access control mechanisms. Privacy guarantees are provided by the usage of distributed key management systems and Zero Knowledge Proof. We provide experimental results of a testbed based on real traces, in order to understand if DLT and DFS technologies are ready to support complex services, such as those that pertain to ITS. Results clearly show that, while the viability of the proposal cannot be rejected, further work is needed on the responsiveness of DLT infrastructures. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 32; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Narayanam2021,
	author = {Narayanam, Krishnasuri and Goel, Seep and Singh, Abhishek and Shrinivasan, Yedendra and Selvam, Parameswaram},
	title = {Blockchain based accounts payable platform for goods trade},
	year = {2021},
	journal = {IEEE International Conference on Blockchain and Cryptocurrency, ICBC 2021},
	doi = {10.1109/ICBC51069.2021.9461053},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114493698&doi=10.1109%2fICBC51069.2021.9461053&partnerID=40&md5=601d2a3cf6e1a96cbe3b23471dcb5f10},
	abstract = {Goods trade is a supply chain transaction that involves shippers buying goods from suppliers and carriers providing goods transportation. Shippers are issued invoices from suppliers and carriers. Shippers carry out goods receiving and invoice processing before payment processing of bills for suppliers and carriers, where invoice processing includes tasks like processing claims and adjusting the bill payments. Goods receiving involves verification of received goods by the Shipper's receiving team. Invoice processing is carried out by the Shipper's accounts payable team, which in turn is verified by the accounts receivable teams of suppliers and carriers. This paper presents a blockchain-based accounts payable system that generates claims for the deficiency in the goods received and accordingly adjusts the payment in the bills for suppliers and carriers. Primary motivations for these supply chain organizations to adopt blockchain-based accounts payable systems are to eliminate the process redundancies (accounts payable vs. accounts receivable), to reduce the number of disputes among the transacting participants, and to accelerate the accounts payable processes via optimizations in the claims generation and blockchain-based dispute reconciliation.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access}
}

@CONFERENCE{Li2019410,
	author = {Li, Yuhong and Rahmani, Rahim and Fouassier, Nicolas and Stenlund, Peik and Ouyang, Kun},
	title = {A blockchain-based architecture for stable and trustworthy smart grid},
	year = {2019},
	journal = {Procedia Computer Science},
	volume = {155},
	pages = {410 – 416},
	doi = {10.1016/j.procs.2019.08.057},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074714876&doi=10.1016%2fj.procs.2019.08.057&partnerID=40&md5=679fe279e950bfd529167a8172cfddcb},
	abstract = {Smart Grid represents an efficient power transmission, distribution and management system. However, solutions for Smart Grid have raised security and privacy problems. Moreover, with the introduction of renewable energy resources, such as rooftop solar panels and small biogas plants, more and more electricity consumers are involved in the energy generation system. This may cause the power system unstable and/or the waste of the energy. Blockchain is a promising technology for solving these problems in the future energy system on account of its distributed trust, anonymity, data integrity and availability. In this paper, we propose a Blockchain-based architecture for Smart Grid. By using the proposed architecture, electricity consumers can be fully involved in the energy system and tracing the details of the energy they have consumed or generated. At the same time, the stability of the energy system can be kept, reducing the waste of the energy and potential hazard to the electrical equipment. © 2019 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/) Peer-review under responsibility of the Conference Program Chairs.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Gold Open Access}
}

@ARTICLE{Ulloa2022469,
	author = {Ulloa, Roberth and Gallegos, Pablo},
	title = {Design of a Blockchain Architecture and Use of Smart Contracts to Improve Processes in Notary Office},
	year = {2022},
	journal = {Communications in Computer and Information Science},
	volume = {1535 CCIS},
	pages = {469 – 483},
	doi = {10.1007/978-3-031-03884-6_34},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128492453&doi=10.1007%2f978-3-031-03884-6_34&partnerID=40&md5=428644329a58a73b539a09ee55f1808c},
	abstract = {The present investigation proposes the use of the blockchain as a replacement mechanism for the current notarial system, the use of smart contracts is applied for this purpose, in which all the terms or clauses of a transaction are detailed, as in a traditional contract, but with new capabilities and security mechanisms specific to blockchain due to its native encryption algorithms, without the intervention of third parties, the proposed architecture establishes the processes of consensus and distribution of the general ledger in each of the nodes, distributed in the different certification entities or organizations, as well as each of the components that intervene during the process of generating a new transaction that will begin with the agreement between a seller and a buyer on a good, whether a vehicle, a house, a land, etc., also seeking to eliminate the intervention of several state entities in the notarial processes, in addition to complying go fully all the clauses of the contracts generated. © 2022, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access}
}

@ARTICLE{Ge2021,
	author = {Ge, Xianyun},
	title = {Smart Payment Contract Mechanism Based on Blockchain Smart Contract Mechanism},
	year = {2021},
	journal = {Scientific Programming},
	volume = {2021},
	doi = {10.1155/2021/3988070},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121584119&doi=10.1155%2f2021%2f3988070&partnerID=40&md5=6d109f4674cb678348f6a7f928afce2e},
	abstract = {In recent years, blockchain technology has become a hot topic in various industries. With the development and maturity of blockchain technology, it has been applied to finance, law, etc., with its advantages of decentralization, openness, information security, and concealment. The application scenarios of industry are becoming more and more abundant. Compared with the traditional TPA payment contract form, the smart contract mechanism based on blockchain technology is obviously more efficient, convenient, and safe. Against this background, we design a smart payment contract suitable for cloud storage by studying Ethereum. The relationship clause in the smart payment contract should be regulated around the contract law. The smart contract payment linkage clause can be classified into three forms, including conditional effective type, contract joint type, and contract link type, which correspond to the contract law. Therefore, the contract legal system for smart contract payment linkage clauses should follow typified thinking. Based on blockchain technology, smart contracts not only reduce the number of interactions in contract execution but also allow users to stop paying for cloud services when data is lost or damaged. The precise method is to generate each node with a private chain and place the smart contract on the private chain. With the decentralization of the blockchain private chain, the advantages of read-only data, and traceability of information, the storage of smart payment contract data is more secure. Both parties to the transaction are more trustworthy. Therefore, the proposed system has a safe and efficient smart contract payment mechanism, which brings a good user experience to users, which proves the significance and value of this research.  © 2021 Xianyun Ge.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Chang2019286,
	author = {Chang, Jialiang and Gao, Bo and Xiao, Hao and Sun, Jun and Cai, Yan and Yang, Zijiang},
	title = {sCompile: Critical Path Identification and Analysis for Smart Contracts},
	year = {2019},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11852 LNCS},
	pages = {286 – 304},
	doi = {10.1007/978-3-030-32409-4_18},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076130429&doi=10.1007%2f978-3-030-32409-4_18&partnerID=40&md5=b7df7870d48d149f9d409d1598bca355},
	abstract = {Ethereum smart contracts are an innovation built on top of the blockchain technology, which provides a platform for automatically executing contracts in an anonymous, distributed, and trusted way. The problem is magnified by the fact that smart contracts, unlike ordinary programs, cannot be patched easily once deployed. It is important for smart contracts to be checked against potential vulnerabilities. In this work, we propose an alternative approach to automatically identify critical program paths (with multiple function calls including inter-contract function calls) in a smart contract, rank the paths according to their criticalness, discard them if they are infeasible or otherwise present them with user friendly warnings for user inspection. We identify paths which involve monetary transaction as critical paths, and prioritize those which potentially violate important properties. For scalability, symbolic execution techniques are only applied to top ranked critical paths. Our approach has been implemented in a tool called sCompile, which has been applied to 36,099 smart contracts. The experiment results show that sCompile is efficient, i.e., 5 s on average for one smart contract. Furthermore, we show that many known vulnerabilities can be captured if user inspects as few as 10 program paths generated by sCompile. Lastly, sCompile discovered 224 unknown vulnerabilities with a false positive rate of 15.4% before user inspection. © 2019, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 29; All Open Access, Green Open Access}
}

@ARTICLE{Jiao202075,
	author = {Jiao, Jiao and Lin, Shang-Wei and Sun, Jun},
	title = {A generalized formal semantic framework for smart contracts},
	year = {2020},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {12076 LNCS},
	pages = {75 – 96},
	doi = {10.1007/978-3-030-45234-6_4},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084253762&doi=10.1007%2f978-3-030-45234-6_4&partnerID=40&md5=87f403470ed992d358ef88a8149b575e},
	abstract = {Smart contracts can be regarded as one of the most popular blockchain-based applications. The decentralized nature of the blockchain introduces vulnerabilities absent in other programs. Furthermore, it is very difficult, if not impossible, to patch a smart contract after it has been deployed. Therefore, smart contracts must be formally verified before they are deployed on the blockchain to avoid attacks exploiting these vulnerabilities. There is a recent surge of interest in analyzing and verifying smart contracts. While most of the existing works either focus on EVM bytecode or translate Solidity contracts into programs in intermediate languages for analysis and verification, we believe that a direct executable formal semantics of the high-level programming language of smart contracts is necessary to guarantee the validity of the verification. In this work, we propose a generalized formal semantic framework based on a general semantic model of smart contracts. Furthermore, this framework can directly handle smart contracts written in different high-level programming languages through semantic extensions and facilitates the formal verification of security properties with the generated semantics. © The Author(s) 2020.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Kamal2021491,
	author = {Kamal, Zainab Ali and Fareed, Rana},
	title = {Data retrieval based on the smart contract within the blockchain},
	year = {2021},
	journal = {Periodicals of Engineering and Natural Sciences},
	volume = {9},
	number = {4},
	pages = {491 – 507},
	doi = {10.21533/pen.v9i4.2353},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121392920&doi=10.21533%2fpen.v9i4.2353&partnerID=40&md5=1167c13308613d9660eedaf51001d5c8},
	abstract = {Blockchain Technology Appears To Be The Ideal Solution For Storing Data In A Transparent And Decentralized Manner. It Also Allows Open Access To Data And Enhances Its Immutable Nature. This Technology Has Helped Prove Its Usefulness In Several Industries So Far, However, Distributed Ledger Technology Does Not Work As A Pure Database. Therefore, Some Problems Occur In Accessing Data. Querying Data In The Blockchain Leads To Performance And Bandwidth Problems. This Primarily Occurs Because The Blockchain Does Not Have A Primary Query Language, Unlike Regular Databases. The Distributed Nature Of The Blockchain Is In This Case An Obstacle. In This Paper, A Safe And Fast Method Will Be Proposed To Retrieve Consistent Data From The Blockchain-Based On The Smart Contract That Will Be Opened After Completing The Transaction Procedures. All Nodes Will Sign The Proposed Transaction (By Adding A Special Hash To Each Node Resulting From The Transaction Information And Node Data). Upon Completion Of Transaction Procedures, A Smart Contract Will Be Opened (In Which A Qr Is Placed) Resulting From Converting The Signatures In The Transaction To Qr When The Smart Contract Data Is Retrieved, The Qr For Each Transaction Will Be Used All Node Signatures And Transaction Data Will Be Extracted.The Data Will Be Retrieved By The Qr Generated For Each Transaction After It Is Stored In All Nodes Servers Participating In The System. A New Method Was Proposed To Generate A Hash For Each Node Present In The System. The Proposed Method Was Tested In Terms Of Time And Complexity, And The Algorithm Was Statistically Analyzed, And All The Results Proved Successful. © The Author 2021. This work is licensed under a Creative Commons Attribution License (https://creativecommons.org/licenses/by/4.0/) that allows others to share and adapt the material for any purpose (even commercially), in any medium with an acknowledgement of the work's authorship and initial publication in this journal.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Muneeb202210719,
	author = {Muneeb, Muhammad and Raza, Zeeshan and Haq, Irfan Ul and Shafiq, Omair},
	title = {SmartCon: A Blockchain-Based Framework for Smart Contracts and Transaction Management},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {10719 – 10730},
	doi = {10.1109/ACCESS.2021.3135562},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121762454&doi=10.1109%2fACCESS.2021.3135562&partnerID=40&md5=0a1fabaf14d5d69455fdc996c26018a0},
	abstract = {A smart contract can be used for automating business processes triggered by specific events caused by IoT sensors, data feeds, or other applications. A blockchain-based smart contract management system is an innovative technology foreseen to automate future business-to-business (B2B) processes. By optimizing business workflow operations, especially in multi-party arrangements, blockchain can play central role in business process re-engineering. In this paper we present a multi-organizational smart contract management system in which a user can create, deploy, and execute smart contracts. This research article consists of two parts; in the first part, we have compared existing smart contract management systems based on different characteristics that can play a vital role in selecting a particular system for a specific business need. In the second part, we have proposed a framework for a blockchain-based smart contract management system. It is a unified architecture that supports both DAO and organizational level blockchain-based smart contract execution. There are two types of separate blockchains used in the proposed framework; SBlockchain and TBlockchain. SBlockchain is used to store smart contracts, whereas all the data generated by the smart contracts stores inside the TBlockchain. In addition, each smart contract has some terms and clauses which are necessary for some event execution. Various components of the framework and their implementation have been described in detail with the help of relevant use-cases. © 2022 Institute of Electrical and Electronics Engineers Inc.. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@CONFERENCE{Chapman2019319,
	author = {Chapman, Patrick and Xu, Dianxiang and Deng, Lin and Xiong, Yin},
	title = {Deviant: A mutation testing tool for solidity smart contracts},
	year = {2019},
	journal = {Proceedings - 2019 2nd IEEE International Conference on Blockchain, Blockchain 2019},
	pages = {319 – 324},
	doi = {10.1109/Blockchain.2019.00050},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078704483&doi=10.1109%2fBlockchain.2019.00050&partnerID=40&md5=0922705ce4ee3b4704106f640be54818},
	abstract = {Solidity is a widely used scripting language for developing smart contracts in blockchain applications. Quality assurance of Solidity contracts is of critical importance because bugs can lead to considerable loss of assets. As software testing is a common practice for quality assurance, many Solidity projects have included built-in tests. It is unclear, however, what level of quality assurance these built-in tests can achieve. This paper presents Deviant, a mutation testing tool for Solidity smart contracts. It automatically generates mutants of a given Solidity project and runs all mutants against the given tests to evaluate their effectiveness. To simulate various faults in Solidity smart contracts, Deviant provides mutation operators for all the unique features of Solidity according to the Solidity fault taxonomy, in addition to the traditional programming constructs. We have used Deviant to evaluate the effectiveness of the tests for three Solidity projects. The results indicate that these tests have not yet achieved high mutation scores and that a test suite adequate for the statement and branch coverage criteria of Solidity smart contracts does not necessarily provide a high-level assurance of code quality. Such observations offer important guidelines for Solidity developers to implement more effective tests in order to deliver trustworthy code and reduce the risk of financial loss. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 16; All Open Access, Green Open Access}
}

@ARTICLE{Agung2022666,
	author = {Agung, Anak Agung Gde and Handayani, Rini},
	title = {Blockchain for smart grid},
	year = {2022},
	journal = {Journal of King Saud University - Computer and Information Sciences},
	volume = {34},
	number = {3},
	pages = {666 – 675},
	doi = {10.1016/j.jksuci.2020.01.002},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85079517628&doi=10.1016%2fj.jksuci.2020.01.002&partnerID=40&md5=cc81a0cb367f6eec4440995b766b05a6},
	abstract = {The demand for electricity increases rapidly along with the advancement of the industrial age. To ensure efficient distribution of the electricity, maintain low losses and high level of quality, and the security of electricity supply, the smart grid concept was proposed. The concept enables a small, individual scale to generate electricity and sell it to the grid. However, the concept adds complexity to the existing system, such as how a transaction between these generators and consumers are conducted, verified and recorded. This paper proposes the blockchain as a tool to manage transactions in the smart grid. Transactions are performed with smart contracts, and the network acts as a transaction verifier. The blockchain provides immutability of the transactions, which ensure every transaction between generators and consumers will always be executed. It also provides immutability to transaction history, which can be used for audit or solving a transaction dispute. © 2020 The Authors},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 37; All Open Access, Gold Open Access}
}

@ARTICLE{Sober2022,
	author = {Sober, Michael and Scaffino, Giulia and Schulte, Stefan and Kanhere, Salil S.},
	title = {A blockchain-based IoT data marketplace},
	year = {2022},
	journal = {Cluster Computing},
	doi = {10.1007/s10586-022-03745-6},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138550707&doi=10.1007%2fs10586-022-03745-6&partnerID=40&md5=2eb9a589f502444cf7b096a9141881ac},
	abstract = {The (IoT) is growing steadily, and so is the number of data that is generated by (IoT) devices. This makes it difficult to find and leverage relevant data (and data sources) without a data marketplace. Such a marketplace provides a platform to enable different parties, e.g., sensor operators and service providers, to trade their data. Today, most data marketplaces are based on centralized solutions, which may become a single point of failure and come with expensive infrastructure, trust problems, and privacy issues. Therefore, we propose the application of blockchain technology to implement a data marketplace for the IoT. Within the proposed marketplace, smart contracts are used to implement various functionalities and enforce the rules of the data exchange. The marketplace also includes a proxy, a broker, and (GUIs) to enable data trading. To show the applicability of the proposed data marketplace, we analyze the costs arising from the utilization of smart contracts. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Philip20224031,
	author = {Philip, Abin Oommen and Saravanaguru, RA K},
	title = {Smart contract based digital evidence management framework over blockchain for vehicle accident investigation in IoV era},
	year = {2022},
	journal = {Journal of King Saud University - Computer and Information Sciences},
	volume = {34},
	number = {7},
	pages = {4031 – 4046},
	doi = {10.1016/j.jksuci.2022.06.001},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85131781818&doi=10.1016%2fj.jksuci.2022.06.001&partnerID=40&md5=1196d6aff8d0eb9345fb1def0f9be296},
	abstract = {Digital collection and maintenance of evidence corresponding to an accident is of utmost relevance as vehicles become connected and part of Internet of things ecosystem. A conceptual evidence management framework is proposed examining the future of accident investigation forensics in the era of connected vehicles. The framework discusses how evidence generated from vehicles involved in incident along with supporting evidence from nearby vehicles CCTVs and road users can be collected and managed over blockchain using smart contracts in a vehicle to everything connected environment. The management of evidence over blockchain serves as an immutable and auditable means to investigate and settle cases post an accident among the stakeholders. Dynamic access control over evidence data and reports based on location of incident and vehicle involved is implemented with the help of smart contracts. The cost of deploying and carrying out transactions using the smart contracts is evaluated over both public and private Ethereum blockchain. Mechanism and cost involved in storing evidence on chain versus off chain using Inter Planetary File System in most optimised manner saving memory and execution cost is compared and presented. The smart contract codes are deployed on Rinkeby test network and can be accessed using address mentioned. © 2022 The Author(s)},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Gold Open Access}
}

@ARTICLE{Chang2021295,
	author = {Chang, Ray-I. and Wei, Lien-Chen and Wang, Chia-Hui and Tseng, Yu-Kai},
	title = {Blockchain for bounded-error-pruned content protection},
	year = {2021},
	journal = {ICT Express},
	volume = {7},
	number = {3},
	pages = {295 – 299},
	doi = {10.1016/j.icte.2021.08.013},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120627507&doi=10.1016%2fj.icte.2021.08.013&partnerID=40&md5=2d20da0ddd6f5e8ca57015b63e49295f},
	abstract = {IoT content usually comes from power-constrained sensors and requires applying different levels of protection. We design a bounded-error-pruned IoT content market (BIoTCM) framework with preserving privacy protection (BEPDPP) scheme using blockchain smart contract. According to payment level applied in smart contract of BIoTCM, our BEPDPP will prune original data within a given level of bounded-error to provide different resolutions of content for consumers. As the real data is intrinsically hidden, content protection is provided with privacy-preserving. Experimental results generated by five different types of IoT content demonstrate that our content protection solution is cost-effective in sensor lifetime. © 2021 The Korean Institute of Communications and Information Sciences (KICS)},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Ivanov202199,
	author = {Ivanov, Nikolay and Yan, Qiben},
	title = {System-Wide Security for Offline Payment Terminals},
	year = {2021},
	journal = {Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST},
	volume = {399 LNICST},
	pages = {99 – 119},
	doi = {10.1007/978-3-030-90022-9_6},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120083137&doi=10.1007%2f978-3-030-90022-9_6&partnerID=40&md5=79993b5e7dbd1dae7620782fa52db8b3},
	abstract = {Most self-service payment terminals require network connectivity for processing electronic payments. The necessity to maintain network connectivity increases costs, introduces cybersecurity risks, and significantly limits the number of places where the terminals can be installed. Leading payment service providers have proposed offline payment solutions that rely on algorithmically generated payment tokens. Existing payment token solutions, however, require complex mechanisms for authentication, transaction management, and most importantly, security risk management. In this paper, we present VolgaPay, a blockchain-based system that allows merchants to deploy secure offline payment terminal infrastructure that does not require collection and storage of any sensitive data. We design a novel payment protocol which mitigates security threats for all the participants of VolgaPay, such that the maximum loss from gaining full access to any component by an adversary incurs only a limited scope of harm. We achieve significant enhancements in security, operation efficiency, and cost reduction via a combination of polynomial multi-hash chain micropayment channels and blockchain grafting for off-chain channel state transition. We implement the VolgaPay payment system, and with thorough evaluation and security analysis, we demonstrate that VolgaPay is capable of delivering a fast, secure, and cost-efficient solution for offline payment terminals. © 2021, ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access}
}

@ARTICLE{Hasan2021151944,
	author = {Hasan, Haya R. and Salah, Khaled and Jayaraman, Raja and Yaqoob, Ibrar and Omar, Mohammed and Ellahham, Samer},
	title = {Blockchain-Enabled Telehealth Services Using Smart Contracts},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {151944 – 151959},
	doi = {10.1109/ACCESS.2021.3126025},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85119719950&doi=10.1109%2fACCESS.2021.3126025&partnerID=40&md5=aeaeb7053f0ce2a1ad2b499b59f818a6},
	abstract = {Telehealth has gained a huge traction during the Coronavirus (COVID-19) pandemic. Telehealth enables physicians and medical care providers to remotely care for patients and monitor their symptoms. Today's telehealth systems fall short in providing transparent, immutable, traceable, auditable, secure, and trustworthy services. In addition, they are centralized and subject to the single point of control and failure. In this paper, we propose a private blockchain-based solution to overcome the aforementioned challenges. We demonstrate how specifically three important telehealth services; namely, teleconsultation, drug administration, and medical testing can be enhanced using blockchain technology. Our proposed solution also ensures integrity, immutability, accountability, and non-repudiation for telehealth transactions initiated by multiple actors. For storing and keeping track of large-size digital content, such as images and audio and video recordings of telehealth service sessions, our proposed solution is integrated with off-chain storage systems including cloud storage or a decentralized storage system as that of the Interplanetary File System (IPFS). The registered participants are provided with access privileges based on their roles to ensure that restrictions are enforced on-chain. Smart contracts are developed to maintain data provenance and generate reliable alerts and notifications. The implementation and testing details of the algorithms are presented. We discuss, compare, and analyze the security features of our solution.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@ARTICLE{Wang2022,
	author = {Wang, Shenling and Zhang, Yifang and Guo, Yu},
	title = {A Blockchain-Empowered Arbitrable Multimedia Data Auditing Scheme in IoT Cloud Computing},
	year = {2022},
	journal = {Mathematics},
	volume = {10},
	number = {6},
	doi = {10.3390/math10061005},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129674042&doi=10.3390%2fmath10061005&partnerID=40&md5=acb9277fdb5c523775a4f3ac7ca83418},
	abstract = {As increasing clients tend to outsource massive multimedia data generated by Internet of Things (IoT) devices to the cloud, data auditing is becoming crucial, as it enables clients to verify the integrity of their outsourcing data. However, most existing data auditing schemes cannot guarantee 100% data integrity and cannot meet the security requirement of practical multimedia services. Moreover, the lack of fair arbitration leads to clients not receiving compensation in a timely manner when the outsourced data is corrupted by the cloud service provider (CSP). In this work, we propose an arbitrable data auditing scheme based on the blockchain. In our scheme, clients usually only need to conduct private audits, and public auditing by a smart contract is triggered only when verification fails in private auditing. This hybrid auditing design enables clients to save audit fees and receive compensation automatically and in a timely manner when the outsourced data are corrupted by the CSP. In addition, by applying the deterministic checking technique based on a bilinear map accumulator, our scheme can guarantee 100% data integrity. Furthermore, our scheme can prevent fraudulent claims when clients apply for compensation from the CSP. We analyze the security strengths and complete the prototype’s implementation. The experimental results show that our blockchain-based data auditing scheme is secure, efficient, and practical. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Nunez-Gomez202175231,
	author = {Nunez-Gomez, Carlos and Caminero, Blanca and Carrion, Carmen},
	title = {HIDRA: A Distributed Blockchain-Based Architecture for Fog/Edge Computing Environments},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {75231 – 75251},
	doi = {10.1109/ACCESS.2021.3082197},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107056236&doi=10.1109%2fACCESS.2021.3082197&partnerID=40&md5=931d0a7d12c9c2ea775ad1d1ca894363},
	abstract = {Nowadays, the fog computing paradigm is being consolidated as a solution for processing the explosion of data generated by lots of common IoT devices connected to the Internet. In contrast to cloud computing, fog computing achieves efficient data processing without incurring large latencies or data transfers to/from the cloud. The distributed nature of fog computing makes the resource orchestration a challenge. Commonly used centralized solutions are of limited utility in this context. Moreover, fog nodes are usually resource constrained, so the implementation of the management modules should be carefully designed in order not to cause excessive overheads. On the other hand, blockchain has proven its utility beyond cryptocurrencies, to support distributed and reliable information storage. When combined with smart contracts it can provide a distributed computer where all the nodes independently and equally contribute to a common global system state, which must be agreed by consensus. This also provides inherent desirable features, such as immutability and transparency. In this work, a novel architecture called HIDRA is presented, aimed at resource orchestration in fog computing environments based on a Ethereum blockchain implementation. A prototype implementation on a testbed composed of single-board computers has been carried out. Results show the low overhead introduced into the system and its ability to perform a coordinated action among fog nodes without the intervention of any central authority.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 11; All Open Access, Gold Open Access}
}

@ARTICLE{Ji202190029,
	author = {Ji, Suhwan and Kim, Dohyung and Im, Hyeonseung},
	title = {Evaluating Countermeasures for Verifying the Integrity of Ethereum Smart Contract Applications},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {90029 – 90042},
	doi = {10.1109/ACCESS.2021.3091317},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85117592995&doi=10.1109%2fACCESS.2021.3091317&partnerID=40&md5=a86bd4698d7505012231970378c78f96},
	abstract = {Blockchain technology, which provides digital security in a distributed manner, has evolved into a key technology that can build efficient and reliable decentralized applications (called DApps) beyond the function of cryptocurrency. The characteristics of blockchain such as immutability and openness, however, have made DApps more vulnerable to various security risks, and thus it has become of great significance to validate the integrity of DApps before they actually operate upon blockchain. Recently, research on vulnerability in smart contracts (a building block of DApps) has been actively conducted, and various vulnerabilities and their countermeasures were reported. However, the effectiveness of such countermeasures has not been studied well, and no appropriate methods have been proposed to evaluate them. In this paper, we propose a software tool that can easily perform comparative studies by adding existing/new countermeasures and labeled smart contract codes. The proposed tool demonstrates verification performance using various statistical indicators, which helps to identify the most effective countermeasures for each type of vulnerability. Using the proposed tool, we evaluated state-of-the-art countermeasures with 237 labeled benchmark codes. The results indicate that for certain types of vulnerabilities, some countermeasures show evenly good performance scores on various metrics. However, it is also observed that countermeasures that detect the largest number of vulnerable codes typically generate much more false positives, resulting in very low precision and accuracy. Consequently, under given constraints, different countermeasures may be recommended for detecting vulnerabilities of interest. We believe that the proposed tool could effectively be utilized for a future verification study of smart contract applications and contribute to the development of practical and secure smart contract applications. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Zhang20222066,
	author = {Zhang, Yaoyu and Zhang, Jiarui and Zhang, Han},
	title = {The Automatic Generation of Smart Contract Based on Configuration in the Field of Government Services},
	year = {2022},
	journal = {IEICE Transactions on Information and Systems},
	volume = {E105D},
	number = {12},
	pages = {2066 – 2074},
	doi = {10.1587/transinf.2022EDP7016},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85144503858&doi=10.1587%2ftransinf.2022EDP7016&partnerID=40&md5=601d26369762a68f6cc2a19b893172ee},
	abstract = {With the development of blockchain technology, the automatic generation of smart contract has become a hot research topic. The existing smart contract automatic generation technology still has improvement spaces in complex process, third-party specialized tools required, specific the compatibility of code and running environment. In this paper, we propose an automatic smart contract generation method, which is domainoriented and configuration-based. It is designed and implemented with the application scenarios of government service. The process of configuration, public state database definition, code generation and formal verification are included. In the Hyperledger Fabric environment, the applicability of the generated smart contract code is verified. Furthermore, its quality and security are formally verified with the help of third-party testing tools. The experimental results show that the quality and security of the generated smart contract code meet the expect standards. The automatic smart contract generation will "elegantly"be applied on the work of anti-disclosure, privacy protection, and prophecy processing in government service. To effectively enable develop "programmable government". © 2022 The Institute of Electronics.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Jawdhari2021834,
	author = {Jawdhari, Hayder A. and Abdullah, Alharith A.},
	title = {novel blockchain architecture based on network functions virtualization (NFV) with auto smart contracts},
	year = {2021},
	journal = {Periodicals of Engineering and Natural Sciences},
	volume = {9},
	number = {4},
	pages = {834 – 844},
	doi = {10.21533/pen.v9i4.2441},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121372869&doi=10.21533%2fpen.v9i4.2441&partnerID=40&md5=26a5ab4c47358ad73eff6d42c60e54d7},
	abstract = {Network Function Virtualization (NFV) is considered to be a hopeful technology for supporting blockchain with many features like flexible networks and intelligent equipment. NFV decreases the expenses incurred on the maintenance and operation of assets that are generated through expenses, in addition to capital expenditures based on the isolate the physical devices from the main tasks executed by that equipment. Blockchain currency transfers or technology is the most powerful security tool that ensures the security of data. The prominent challenges in NFV are the processes of transition, vendor compatibility, network management, rapid growth, and security. The software industry and skills of networking are experiencing fast expansion and deployment of the Network Functions Virtualization (NFV) approach, jointly in blockchain and cloud networks. In this paper, a novel method is offered to virtualize the work of the blockchain based on the NFV with auto work of the smart contract between virtual nodes based on cloud computing. By blending NFV with Blockchain, all of the above-mentioned challenges have been overcome by moving to software environments through creating virtual nodes, as well as smooth interaction among them and managing the transactions between nodes and clients, indicating ideal network management. Through the proposed work, a throughput of up to 20% is obtained by applying NFV compared to not applying NFV to the blockchain. In addition, the costs of the hardware are eliminated and eventually a secure environment is used which distances the system from virtual attacks. © The Author 2021. This work is licensed under a Creative Commons Attribution License (https://creativecommons.org/licenses/by/4.0/) that allows others to share and adapt the material for any purpose (even commercially), in any medium with an acknowledgement of the work' authorship and initial publication in this journal.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access}
}

@ARTICLE{Petroni2018363,
	author = {Petroni, Benedito Cristiano A. and de Moraes, Elisângela Mônaco and Gonçalves, Rodrigo Franco},
	title = {Big data analytics for logistics and distributions using blockchain},
	year = {2018},
	journal = {IFIP Advances in Information and Communication Technology},
	volume = {536},
	pages = {363 – 369},
	doi = {10.1007/978-3-319-99707-0_45},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053276306&doi=10.1007%2f978-3-319-99707-0_45&partnerID=40&md5=04e1595f2783accc0447ffe73d6cdd6b},
	abstract = {The volume of data generated is increasing. Companies capture large amounts of bytes of information about customers, vendors, products, sensory components, and especially their manufacturing operations. However, important problems, such as the Supply Chain Management processes, present difficulties regarding the security, integrity and validity of information generated in different databases. Blockchain technology presents itself as a disruptive process control technology where, through Smart Contracts, it provides transaction reliability and assures the parties involved that its purpose is strictly adhered to. Meanwhile, Big Data is offered as a solution to analyze all the information originated from the operations generated. In this article, as a contribution, possibilities of information generation will be presented, with the interaction of Blockchain, Cyber Physical Systems, Internet of Things technologies in function of the Supply Chain Management processes, so that they can later be analyzed through Big Data, giving users better controls and decision management in favor of improving their business. © 2018, IFIP International Federation for Information Processing.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Green Open Access}
}

@ARTICLE{Subramanian2021162459,
	author = {Subramanian, Ganesan and Sreekantan Thampy, Anand},
	title = {Implementation of Blockchain Consortium to Prioritize Diabetes Patients' Healthcare in Pandemic Situations},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {162459 – 162475},
	doi = {10.1109/ACCESS.2021.3132302},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120914608&doi=10.1109%2fACCESS.2021.3132302&partnerID=40&md5=ffd8a30f5768d03981a47ce06cd73f1c},
	abstract = {Diabetes is a metabolic disorder caused by high blood sugar levels, which can harm the kidneys, the heart, the eyes, and blood vessels. During the Covid-19 pandemic, diabetes patients were most affected. In the existing healthcare system, medical data is available in paper form or through a central server. Accessing the data from the central system and sharing it with all stakeholders would be a critical task during the pandemic. This research work deals with the design and implementation of a diabetes blockchain consortium. It can help all healthcare stakeholders to efficiently prioritize the needs of diabetes patients during a pandemic, such as oxygen beds, vaccinations, diabetes compensation, telemedicine, 5G-integrated remote location support, and other related records. The Ethereum sandbox simulation design is utilized to secure diabetes patients' healthcare records. The Interplanetary file system (IPFS) encrypts health data and sends it to the blockchain to ensure the privacy of personal healthcare information. The NEM symbol blockchain is used to develop this consortium as a proof-of-concept (PoC) model. Each stakeholder in a consortium is assigned NEM generated QR code to track records as a distributed ledger. A smart contract designed to run the diabetes blockchain application. Attribute-based encryption (ABE) authenticates users and restricts malicious nodes. Certainly, this research suggests aggregation of transactions and blocks in the blockchain, which would increase transaction speed, minimize transaction fees, and consume less power in a future blockchain design. © 2021 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 9; All Open Access, Gold Open Access}
}

@ARTICLE{Malamas2020134393,
	author = {Malamas, Vangelis and Kotzanikolaou, Panayiotis and Dasaklis, Thomas K. and Burmester, Mike},
	title = {A Hierarchical Multi Blockchain for Fine Grained Access to Medical Data},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {134393 – 134412},
	doi = {10.1109/ACCESS.2020.3011201},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85089307081&doi=10.1109%2fACCESS.2020.3011201&partnerID=40&md5=983e9ca5f904c34cf8b5ca0a22255a3b},
	abstract = {The health care ecosystem involves various interconnected stakeholders with different, and sometimes conflicting security and privacy needs. Sharing medical data, sometimes generated by remote medical devices, is a challenging task. Although several solutions exist in the literature covering functional requirements such as interoperability and scalability, as well as security privacy requirements such as fine-grained access control and data privacy, balancing between them is not a trivial task as off-the-shelf solutions do not exist. On one hand, centralized cloud architectures provide scalability and interoperable access, but make strong trust assumptions. On the other, decentralized blockchain based solutions favor data privacy and independent trust management, but typically do not support dynamic changes of the underlying trust domains. To cover this gap, in this paper, we present a novel hierarchical multi expressive blockchain architecture. At the top layer, a proxy blockchain enables independently managed trust authorities to interoperate. End-users from different health care domains, such as hospitals or device manufacturers are able to access and securely exchange medical data, provided that a commonly agreed domain-wise access policy is enforced. At the bottom layer, one or more domain blockchains allow each domain (e.g. a hospital or device manufacturer) to enforce their policy and allow fine-grained access control with attribute-based encryption. This architecture is designed to provide the autonomous management of trusted medical data/devices and the transactions of mutually untrusted stakeholders, as well as an inherent forensics mechanism tailored for granular auditing. Smart contracts are used to enforce decentralized policies. Ciphertext-policy attribute based encryption (CP-ABE) is used to distribute the decryption process among end users and the system, as well as support an efficient credential revocation mechanism. We demonstrate the efficiency of the proposed architecture through a proof of concept implementation. Finally we analyse the major security and performance characteristics. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 21; All Open Access, Gold Open Access}
}

@ARTICLE{Leal2021,
	author = {Leal, Fátima and Chis, Adriana E. and Caton, Simon and González–Vélez, Horacio and García–Gómez, Juan M. and Durá, Marta and Sánchez–García, Angel and Sáez, Carlos and Karageorgos, Anthony and Gerogiannis, Vassilis C. and Xenakis, Apostolos and Lallas, Efthymios and Ntounas, Theodoros and Vasileiou, Eleni and Mountzouris, Georgios and Otti, Barbara and Pucci, Penelope and Papini, Rossano and Cerrai, David and Mier, Mariola},
	title = {Smart Pharmaceutical Manufacturing: Ensuring End-to-End Traceability and Data Integrity in Medicine Production},
	year = {2021},
	journal = {Big Data Research},
	volume = {24},
	doi = {10.1016/j.bdr.2020.100172},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099646510&doi=10.1016%2fj.bdr.2020.100172&partnerID=40&md5=023dc76d4de89f666e767d060ae7c124},
	abstract = {Production lines in pharmaceutical manufacturing generate numerous heterogeneous data sets from various embedded systems which control the multiple processes of medicine production. Such data sets should arguably ensure end-to-end traceability and data integrity in order to release a medicine batch, which is uniquely identified and tracked by its batch number/code. Consequently, auditable computerised systems are crucial on pharmaceutical production lines, since the industry is becoming increasingly regulated for product quality and patient health purposes. This paper describes the EU-funded SPuMoNI project, which aims to ensure the quality of large amounts of data produced by computerised production systems in representative pharmaceutical environments. Our initial results include significant progress in: (i) end-to-end verification taking advantage of blockchain properties and smart contracts to ensure data authenticity, transparency, and immutability; (ii) data quality assessment models to identify data behavioural patterns that can violate industry practices and/or international regulations; and (iii) intelligent agents to collect and manipulate data as well as perform smart decisions. By analysing multiple sensors in medicine production lines, manufacturing work centres, and quality control laboratories, our approach has been initially evaluated using representative industry-grade pharmaceutical manufacturing data sets generated at an IT environment with regulated processes inspected by regulatory and government agencies. © 2021 The Author(s)},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 23; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Sako20221,
	author = {Sako, Kentaro and Matsuo, Shiníchiro and Mori, Tatsuya},
	title = {Distributed Random Number Generation Method on Smart Contracts},
	year = {2022},
	journal = {ACM International Conference Proceeding Series},
	pages = {1 – 10},
	doi = {10.1145/3559795.3559796},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141631158&doi=10.1145%2f3559795.3559796&partnerID=40&md5=077e1f860bf700eddff3ce5857f0821c},
	abstract = {We propose N-choice game (NCG), a decentralized pseudo-random number generation method that can be executed on smart contracts. Of the M participants, one is a dealer, and the rest are players, each with a different role. Each participant randomly chooses one value between 0 and N - 1 and receives a score determined by the NCG rule. The amount of reward each participant receives is determined by the score. The values chosen by the participants are combined and hashed into a pseudo-random number. The NCG framework is designed to achieve the following three goals: (1) Incentivize participants to provide random choices, (2) Evaluate the level of randomness in the decentralized environment, and (3) Establish high performance. We implement the NCG framework in Solidity and evaluate its performance. Our extensive experiments revealed that unless more than 90% of NCG players collide, the generated random numbers have high randomness that can pass the NIST randomness test. The experiments also demonstrated that the throughput of random number generation in NCG was 129 times faster than in the existing framework, Random Bit Generator [2].  © 2022 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Manikandan2022,
	author = {Manikandan, Kayalvizhi and Sriramulu, Ramamoorthy},
	title = {Optimized Path Planning Strategy to Enhance Security under Swarm of Unmanned Aerial Vehicles},
	year = {2022},
	journal = {Drones},
	volume = {6},
	number = {11},
	doi = {10.3390/drones6110336},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141740434&doi=10.3390%2fdrones6110336&partnerID=40&md5=e35fec61ce3728075bb22c96d9d743e9},
	abstract = {Unmanned Aerial Vehicles (UAVs) are widely deployed in military surveillance operations, especially the quadcopter UAVs which are easy to operate and considerably quieter. However, UAVs encounter problems in secure path planning during navigation and are prone to cyber security attacks. Further, due to the UAV battery capacity, the operating time for surveillance is limited. In this paper, we propose a novel Resilient UAV Path Optimization Algorithm (RUPOA) which provides an optimal path under security attacks such as denial-of-service (DoS) and Man-in-the-Middle (MITM) attacks. The performance efficiency of the proposed path planning algorithm is compared with the existing path planning algorithms based on execution time. To achieve secure path planning in UAVs and to mitigate security attacks, a blockchain-aided security solution is proposed. To prevent security attacks, smart contracts are generated where the devices are registered with gasLimit. The blockchain consensus mechanism allows for secure and tamper-free transmission of data between the Ground Control Station (GCS) and a swarm of UAVs. The performance efficiency of the blockchain model is evaluated based on network latency which is the total execution time across the blockchain network. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Ren2019,
	author = {Ren, Qilei and Man, Ka Lok and Li, Muqing and Gao, Bingjie and Ma, Jieming},
	title = {Intelligent design and implementation of blockchain and Internet of things–based traffic system},
	year = {2019},
	journal = {International Journal of Distributed Sensor Networks},
	volume = {15},
	number = {8},
	doi = {10.1177/1550147719870653},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071716319&doi=10.1177%2f1550147719870653&partnerID=40&md5=e7fa9f95387e85ca70529f0df10ea279},
	abstract = {With the continuous development of Internet of things, all kinds of smart systems are quickly evolving to make our day-to-day life smoother and safer. Like many other sectors, transportation has entered a period of rapid change. Intelligent Traffic System is one of the fastest-growing fields within the smart systems, which is expected to increase road safety, mitigate traffic congestion, and enable fuel efficiency. The main functionalities of Intelligent Traffic System are as follows: (1) monitoring real-time traffic conditions in specific areas, (2) locating traffic emergencies (i.e. traffic accidents) in specific areas, and (3) dynamic monitoring and managing the continuous use in public transit services (i.e. change in car lanes) that may lead to changes in macro traffic conditions. This article will use the above-mentioned functionalities of the Intelligent Traffic System as underlying simulative scenarios, to design and to implement a smart transportation system based on Internet of things and blockchain—both share inherent distributed technology characteristics—combining both Internet of things sensor nodes and distributed ledger technology, to (1) record the changes in intelligent transportation systems and (2) set up a credit-token mechanism for paying the use and misuses in public transit services accordingly. The Intelligent Traffic System described in this article is intended to be used as experimental project only, given the terms and conditions as depicted in the simulated scenario. In real-life traffic scenarios, it may generate more complex system and data security issues, which will be elaborated and analyzed at the end of this article. Intelligent Traffic System is a comprehensive smart system; it can significantly change and reinvent the wheel for traffic conditions. Based on the system development as discussed in this article, there are still a lot of demands and challenges that need to be addressed in the future. Such topic scope will be explored in depth in our subsequent research. © The Author(s) 2019.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 14; All Open Access, Gold Open Access}
}

@CONFERENCE{Bose2022161,
	author = {Bose, Priyanka and Das, Dipanjan and Chen, Yanju and Feng, Yu and Kruegel, Christopher and Vigna, Giovanni},
	title = {SAILFISH: Vetting Smart Contract State-Inconsistency Bugs in Seconds},
	year = {2022},
	journal = {Proceedings - IEEE Symposium on Security and Privacy},
	volume = {2022-May},
	pages = {161 – 178},
	doi = {10.1109/SP46214.2022.9833721},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135946737&doi=10.1109%2fSP46214.2022.9833721&partnerID=40&md5=0fe6d9ab7280df7c8012d9bf90625031},
	abstract = {This paper presents SAILFISH, a scalable system for automatically finding state-inconsistency bugs in smart contracts. To make the analysis tractable, we introduce a hybrid approach that includes (i) a light-weight exploration phase that dramatically reduces the number of instructions to analyze, and (ii) a precise refinement phase based on symbolic evaluation guided by our novel value-summary analysis, which generates extra constraints to over-approximate the side effects of whole-program execution, thereby ensuring the precision of the symbolic evaluation. We developed a prototype of SAILFISH and evaluated its ability to detect two state-inconsistency flaws, viz., reentrancy and transaction order dependence (TOD) in Ethereum smart contracts. Our experiments demonstrate the efficiency of our hybrid approach as well as the benefit of the value summary analysis. In particular, we show that SAILFISH outperforms five state-of the-art smart contract analyzers (SECURIFY, MYTHRIL, OYENTE, SEREUM and VANDAL) in terms of performance, and precision. In total, SAILFISH discovered 47 previously unknown vulnerable smart contracts out of 89,853 smart contracts from ETHERSCAN.  © 2022 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Green Open Access}
}

@ARTICLE{Pajooh20211,
	author = {Pajooh, Houshyar Honar and Rashid, Mohammad and Alam, Fakhrul and Demidenko, Serge},
	title = {Hyperledger fabric blockchain for securing the edge internet of things},
	year = {2021},
	journal = {Sensors (Switzerland)},
	volume = {21},
	number = {2},
	pages = {1 – 29},
	doi = {10.3390/s21020359},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099093011&doi=10.3390%2fs21020359&partnerID=40&md5=738d883e9886755a820bc488b73473d2},
	abstract = {Providing security and privacy to the Internet of Things (IoT) networks while achieving it with minimum performance requirements is an open research challenge. Blockchain technology, as a distributed and decentralized ledger, is a potential solution to tackle the limitations of the current peer-to-peer IoT networks. This paper presents the development of an integrated IoT system implementing the permissioned blockchain Hyperledger Fabric (HLF) to secure the edge computing devices by employing a local authentication process. In addition, the proposed model provides traceability for the data generated by the IoT devices. The presented solution also addresses the IoT systems’ scalability challenges, the processing power and storage issues of the IoT edge devices in the blockchain network. A set of built-in queries is leveraged by smart-contracts technology to define the rules and conditions. The paper validates the performance of the proposed model with practical implementation by measuring performance metrics such as transaction throughput and latency, resource consumption, and network use. The results show that the proposed platform with the HLF implementation is promising for the security of resource-constrained IoT devices and is scalable for deployment in various IoT scenarios. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 31; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Zhao20221,
	author = {Zhao, Zhihua and Hao, Zhihao and Wang, Guancheng and Mao, Dianhui and Zhang, Bob and Zuo, Min and Yen, Jerome and Tu, Guangjian},
	title = {Sentiment Analysis of Review Data Using Blockchain and LSTM to Improve Regulation for a Sustainable Market},
	year = {2022},
	journal = {Journal of Theoretical and Applied Electronic Commerce Research},
	volume = {17},
	number = {1},
	pages = {1 – 19},
	doi = {10.3390/jtaer17010001},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123085549&doi=10.3390%2fjtaer17010001&partnerID=40&md5=f5441b3970695b39621fcc4c4f64d8aa},
	abstract = {E-commerce has developed greatly in recent years, as such, its regulations have become one of the most important research areas in order to implement a sustainable market. The analysis of a large amount of reviews data generated in the shopping process can be used to facilitate regulation: since the review data is short text and it is easy to extract the features through deep learning methods. Through these features, the sentiment analysis of the review data can be carried out to obtain the users’ emotional tendency for a specific product. Regulators can formulate reasonable regulation strategies based on the analysis results. However, the data has many issues such as poor reliability and easy tampering at present, which greatly affects the outcome and can lead regulators to make some unreasonable regulatory decisions according to these results. Blockchain provides the possibility of solving these problems due to its trustfulness, transparency and unmodifiable features. Based on these, the blockchain can be applied for data storage, and the Long short-term memory (LSTM) network can be employed to mine reviews data for emotional tendencies analysis. In order to improve the accuracy of the results, we designed a method to make LSTM better understand text data such as reviews containing idioms. In order to prove the effectiveness of the proposed method, different experiments were used for verification, with all results showing that the proposed method can achieve a good outcome in the sentiment analysis leading to regulators making better decisions. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Gold Open Access}
}

@ARTICLE{Loukil201868,
	author = {Loukil, Faiza and Ghedira-Guegan, Chirine and Boukadi, Khouloud and Benharkat, Aïcha Nabila},
	title = {Towards an End-to-End IoT Data Privacy-Preserving Framework Using Blockchain Technology},
	year = {2018},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11233 LNCS},
	pages = {68 – 78},
	doi = {10.1007/978-3-030-02922-7_5},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055828294&doi=10.1007%2f978-3-030-02922-7_5&partnerID=40&md5=3810f8ebc94a2925d22dff38531d47f1},
	abstract = {Internet of Things-based environments collect and generate huge amounts of data about users, their activities, and their surroundings, which can disclose some sensitive information and threaten their privacy. Hence, the user’s collected and handled data by IoT-based applications need to be exploited and secured in an appropriate way to protect personal data and user’s privacy. Therefore, we aim at improving the data ownership, transparency, and auditability for users. To this end, we propose an end-to-end privacy-preserving framework for the IoT data using blockchain technology. The smart contract use in our framework will hence enforce the privacy requirement compliance according to the user’s (i.e., data owner) privacy preferences and end-user’s (i.e., data consumer) requests. To do so, we detail the design of the system architecture by introducing its core components and functionalities and highlight through an example of how it operates in a real-world use-case. © 2018, Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 12; All Open Access, Green Open Access}
}

@ARTICLE{Zichichi2022,
	author = {Zichichi, Mirko and Ferretti, Stefano and Rodríguez-Doncel, Víctor},
	title = {Decentralized Personal Data Marketplaces: How Participation in a DAO Can Support the Production of Citizen-Generated Data},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {16},
	doi = {10.3390/s22166260},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85136681490&doi=10.3390%2fs22166260&partnerID=40&md5=eb09411c5a708832fe60eebe4b8093bf},
	abstract = {Big Tech companies operating in a data-driven economy offer services that rely on their users’ personal data and usually store this personal information in “data silos” that prevent transparency about their use and opportunities for data sharing for public interest. In this paper, we present a solution that promotes the development of decentralized personal data marketplaces, exploiting the use of Distributed Ledger Technologies (DLTs), Decentralized File Storages (DFS) and smart contracts for storing personal data and managing access control in a decentralized way. Moreover, we focus on the issue of a lack of efficient decentralized mechanisms in DLTs and DFSs for querying a certain type of data. For this reason, we propose the use of a hypercube-structured Distributed Hash Table (DHT) on top of DLTs, organized for efficient processing of multiple keyword-based queries on the ledger data. We test our approach with the implementation of a use case regarding the creation of citizen-generated data based on direct participation and the involvement of a Decentralized Autonomous Organization (DAO). The performance evaluation demonstrates the viability of our approach for decentralized data searches, distributed authorization mechanisms and smart contract exploitation. © 2022 by the authors.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 2; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Kumar20221,
	author = {Kumar, Prabhat and Kumar, Randhir and Kumar, Abhinav and Franklin, A. Antony and Garg, Sahil and Singh, Satinder},
	title = {Blockchain and Deep Learning for Secure Communication in Digital Twin Empowered Industrial IoT Network},
	year = {2022},
	journal = {IEEE Transactions on Network Science and Engineering},
	pages = {1–13},
	doi = {10.1109/TNSE.2022.3191601},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135209094&doi=10.1109%2fTNSE.2022.3191601&partnerID=40&md5=c66137380c4d693aba7dabf769459e7e},
	abstract = {The rapid expansion of the Industrial Internet of Things (IIoT) necessitates the digitization of industrial processes in order to increase network efficiency. The integration of Digital Twin (DT) with IIoT digitizes physical objects into virtual representations to improve data analytics performance. Nevertheless, DT empowered IIoT generates a massive amount of data that is mostly sent to the cloud or edge servers for real-time analysis. However, unreliable public communication channels and lack of trust among participating entities causes various types of threats and attacks on the ongoing communication. Motivated from the aforementioned discussion, we present a blockchain and Deep Learning (DL) integrated framework for delivering decentralized data processing and learning in IIoT network. The framework first present a new DT model that facilitates construction of a virtual environment to simulate and replicate security-critical processes of IIoT. Second, we propose a blockchain-based data transmission scheme that uses smart contracts to ensure integrity and authenticity of data. Finally, the DL scheme is designed to apply the Intrusion Detection System (IDS) against valid data retrieved from blockchain. In DL scheme, a Long Short Term Memory-Sparse AutoEncoder (LSTMSAE) technique is proposed to learn the spatial-temporal representation. The extracted characteristics are further used by the proposed Multi-Head Self-Attention (MHSA)-based Bidirectional Gated Recurrent Unit (BiGRU) algorithm to learn long-distance features and accurately detect attacks. The practical implementation of our proposed framework proves considerable enhancement of communication security and data privacy in DT empowered IIoT network. IEEE},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 4; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Nagayama2022333,
	author = {Nagayama, Ryunosuke and Banno, Ryohei and Shudo, Kazuyuki},
	title = {Trail: An Architecture for Compact UTXO-Based Blockchain and Smart Contract},
	year = {2022},
	journal = {IEICE Transactions on Information and Systems},
	volume = {105},
	number = {2},
	pages = {333 – 343},
	doi = {10.1587/transinf.2021EDP7139},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124673042&doi=10.1587%2ftransinf.2021EDP7139&partnerID=40&md5=f771a703dc252d5da1cf2924bdd77974},
	abstract = {In Bitcoin and Ethereum, nodes require a large storage capacity7 to maintain all of the blockchain data such as transactions. As of September 2021, the storage size of the Bitcoin blockchain has expanded to 355 GB, and it has increased by approximately 50 GB every year over the last five years. This storage requirement is a major hurdle to becoming a block proposer or validator. We propose an architecture called Trail that allows nodes to hold all blocks in a small storage and to generate and validate blocks and transactions. A node in Trail holds all blocks without transactions, UTXOs or account balances. The block size is approximately 8 kB, which is 100 times smaller than that of Bitcoin. On the other hand, a client who issues transactions needs to hold proof of its assets. Thus, compared to traditional blockchains, clients must store additional data. We show that proper data archiving can keep the account device storage size small. Then, we propose a method of executing smart contracts in Trail using a threshold signature. Trail allows more users to be block proposers and validators and improves the decentralization and security of the blockchain.  © 2022 The Institute of Electronics, Information and Communication Engineers.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Rathore2023,
	author = {Rathore, Neeraj Kumar and Khan, Yunus and Kumar, Sudesh and Singh, Pawan and Varma, Sunita},
	title = {An evolutionary algorithmic framework cloud based evidence collection architecture},
	year = {2023},
	journal = {Multimedia Tools and Applications},
	doi = {10.1007/s11042-023-14838-8},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85150337132&doi=10.1007%2fs11042-023-14838-8&partnerID=40&md5=d38cf5c91040ee8d3ccb6776c0b3bd0d},
	abstract = {Forensic in cloud computing is an advancement of evolutionary modern forensic science that protects against cyber criminals. Single centralize point compilation and storage of data, however, overcome the authenticity of digital evidence. In order to address this serious issue, this article suggests a evolutionary modern algorithm automated forensic platform leveraging infrastructure as a cloud service (IaaS) based on Blockchain concept. This proposed forensic structural design, evidence collection of evidence and stored on a blockchain which is circulated around several peer blocks. Secure Block Verification Mechanism (SBVM) is proposed to Safeguarding the device from unauthorised users. Using the Backtracking Search Optimization Algorithm search optimization algorithm for strengthening of the cloud environment, secret keys are optimally generated. On the bases of level of confidentiality, all data is stored and encrypted at cloud authentication server. Confidentiality-based Algebraically Homomorphic Cryptosystems learning is presented with a fast-forwarding algorithm for encryption. A block in the SDN controller is created for every data and information is stored in the cloud service provider and the history is recorded as metadata data about data. A hash based tree is constructed in each block by Secure Hash Algorithm version - 3 of 512 bits. By implementing graph theory-based graph neural networks in Smart Contracts, our framework enables users to track their data (GNNSC). Finally, the construction of a evidence graph using blockchain data enables evidence analysis. Experiments was carried out in a Python programming and blockchain integrated cloud environment with network simulator-3.30 (for Software Defined Network). As part of result our newly designed forensic architecture using blochchain (FAuB) good results in terms of evidence response time, insertion times of cloud evidence, verification time of evidence, computational overhead of evidence, hashes calculation time, keys generations times of evidence, evidence encryption time, evidence decryptions time, and total overall change rate of evidence, according to a comprehensive comparative study. © 2023, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Nishida2022507,
	author = {Nishida, Yuki and Saito, Hiromasa and Chen, Ran and Kawata, Akira and Furuse, Jun and Suenaga, Kohei and Igarashi, Atsushi},
	title = {Helmholtz: A Verifier for Tezos Smart Contracts Based on Refinement Types},
	year = {2022},
	journal = {New Generation Computing},
	volume = {40},
	number = {2},
	pages = {507 – 540},
	doi = {10.1007/s00354-022-00167-1},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130842269&doi=10.1007%2fs00354-022-00167-1&partnerID=40&md5=80ae3a40a610527dbcffcdd98ae829e3},
	abstract = {A smart contract is a program executed on a blockchain, based on which many cryptocurrencies are implemented, and is being used for automating transactions. Due to the large amount of money that smart contracts deal with, there is a surging demand for a method that can statically and formally verify them. This article describes our type-based static verification tool Helmholtz for Michelson, which is a statically typed stack-based language for writing smart contracts that are executed on the blockchain platform Tezos. Helmholtz is designed on top of our extension of Michelson’s type system with refinement types. Helmholtz takes a Michelson program annotated with a user-defined specification written in the form of a refinement type as input; it then typechecks the program against the specification based on the refinement type system, discharging the generated verification conditions with the SMT solver Z3. We briefly introduce our refinement type system for the core calculus Mini-Michelson of Michelson, which incorporates the characteristic features such as compound datatypes (e.g., lists and pairs), higher-order functions, and invocation of another contract. Helmholtz successfully verifies several practical Michelson programs, including one that transfers money to an account and that checks a digital signature. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Górski2022,
	author = {Górski, Tomasz},
	title = {Continuous delivery of blockchain distributed applications},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {1},
	doi = {10.3390/s22010128},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85121647313&doi=10.3390%2fs22010128&partnerID=40&md5=756512018ac605b0d6a44dfc9740b00a},
	abstract = {Ensuring a production-ready state of the application under development is the imminent feature of the Continuous Delivery (CD) approach. In a blockchain network, nodes communicate and store data in a distributed manner. Each node executes the same business application but operates in a distinct execution environment. The literature lacks research focusing on continuous practices for blockchain and Distributed Ledger Technology (DLT). Specifically, it lacks such works with support for both design and deployment. The author has proposed a solution that takes into account the continuous delivery of a business application to diverse deployment environments in the DLT network. As a result, two continuous delivery pipelines have been implemented using the Jenkins automation server. The first pipeline prepares a business application whereas the second one generates complete node deployment packages. As a result, the framework ensures the deployment package in the actual version of the business application with the node-specific up-to-date version of deployment configuration files. The Smart Contract Design Pattern has been used when building a business application. The modeling aspect of blockchain network installation has required using Unified Modeling Language (UML) and the UML Profile for Distributed Ledger Deployment. The refined model-to-code transformation generates deployment configurations for nodes. Both the business application and deployment configurations are stored in the GitHub repositories. For the sake of verification, tests have been conducted for the electricity consumption and supply management system designed for prosumers of renewable energy. © 2021 by the author. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 8; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Majeed2021155634,
	author = {Majeed, Umer and Khan, Latif U. and Yousafzai, Abdullah and Han, Zhu and Park, Bang Ju and Hong, Choong Seon},
	title = {ST-BFL: A Structured Transparency Empowered Cross-Silo Federated Learning on the Blockchain Framework},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {155634 – 155650},
	doi = {10.1109/ACCESS.2021.3128622},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120086907&doi=10.1109%2fACCESS.2021.3128622&partnerID=40&md5=7c5ea9efc3c3530648e2acc7c11256bb},
	abstract = {Federated Learning (FL) relies on on-device training to avoid the migration of devices' data to a centralized server to address privacy leakage. Moreover, FL is feasible for scenarios (e.g., autonomous cars) where an enormous amount of data is generated every day. Transferring only local model updates in the case of FL is highly communication-efficient compared to transferring all data in the case of centralized machine learning (ML). Although FL offers many advantages, it also has some challenges. A malicious aggregation server can infer device information via local model updates. Another downside of FL is the centralized aggregation server that can malfunction due to an attack or physical damage. To address these issues, we propose a novel Structured Transparency empowered cross-silo Federated Learning on the Blockchain (ST-BFL) framework. In ST-BFL, homomorphic encryption, FL-aggregators, FL-verifiers, and smart contract are employed, which satisfy various structured transparency components, such as input privacy, output privacy, output verification, and flow governance. We present the framework architecture, algorithms, and sequence diagram of our ST-BFL framework to show how different entities interact in ST-BFL for the FL process. We also present a simplified class diagram of ST-BFL's smart contract for an FL task. Finally, we perform a simulation to analyze our framework from the perspective of aggregation time, accuracy, and storage size. The qualitative and quantitative evaluation shows that ST-BFL has the same accuracy as traditional FL. However, ST-BFL provides input privacy, output privacy, input verification, output verification, and flow governance at the expense of relatively higher computation and communication costs than traditional FL.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Gold Open Access}
}

@ARTICLE{Shi2023,
	author = {Shi, Chaochen and Xiang, Yong and Yu, Jiangshan and Sood, Keshav and Gao, Longxiang},
	title = {Machine translation-based fine-grained comments generation for solidity smart contracts},
	year = {2023},
	journal = {Information and Software Technology},
	volume = {153},
	doi = {10.1016/j.infsof.2022.107065},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138475019&doi=10.1016%2fj.infsof.2022.107065&partnerID=40&md5=350864ba93309ad422e52ffc24721f3e},
	abstract = {Context.: As self-executing programs on blockchain platforms, smart contracts can build a trusted environment between multi-parties. However, participants who lack programming knowledge usually have difficulties understanding smart contracts by reading the source code. It brings them difficulties and risks when interacting with decentralized applications. Objective.: We aim to translate the smart contract source code into natural language descriptions as fine-grained in-line comments to help people better understand, learn and operate smart contracts. Method.: We propose an automated translation approach for smart contracts written in Solidity, termed SolcTrans, based on an Syntax Tree (AST) and formal grammar. We have investigated representative Solidity smart contracts, identified the AST parsing paths and core attributes used for translation, and proposed corresponding translation templates for special statements. Then, we leveraged reinforcement learning to train a Probabilistic Context-Free Grammar-based syntax synthesizer used to generate comprehensible English sentences as comments. Result.: The experimental results show that SolcTrans outperforms four state-of-the-art neural machine translation models under currently available training data and is less affected by lengths of code snippets and translation outputs. We also conducted a human evaluation among 20 volunteers and asked them to score the generated comments. The results demonstrate that SolcTrans performs well on three metrics: Accuracy, Readability, and Instructiveness. Conclusion.: Our approach produces high-quality fine-grained comments for smart contract source code under the small training dataset, which creates a paradigm for future studies. © 2022 Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Bronze Open Access}
}

@ARTICLE{Kumari2022,
	author = {Kumari, Aparna and Sukharamwala, Urvi Chintukumar and Tanwar, Sudeep and Raboaca, Maria Simona and Alqahtani, Fayez and Tolba, Amr and Sharma, Ravi and Aschilean, Ioan and Mihaltan, Traian Candin},
	title = {Blockchain-Based Peer-to-Peer Transactive Energy Management Scheme for Smart Grid System},
	year = {2022},
	journal = {Sensors},
	volume = {22},
	number = {13},
	doi = {10.3390/s22134826},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132809420&doi=10.3390%2fs22134826&partnerID=40&md5=9b075eb4dad88fab08b8a8f66fa7e015},
	abstract = {In Smart Grid (SG), Transactive Energy Management (TEM) is one of the most promising approaches to boost consumer participation in energy generation, energy management, and establishing decentralized energy market models using Peer-to-Peer (P2P). In P2P, a prosumer produces electric energy at their place using Renewable Energy Resources (RES) such as solar energy, wind energy, etc. Then, this generated energy is traded with consumers (who need the energy) in a nearby locality. P2P facilitates energy exchange in localized micro-energy markets of the TEM system. Such decentralized P2P energy management could cater to diverse prosumers and utility business models. However, the existing P2P approaches suffer from several issues such as single-point-of-failure, network bandwidth, scalability, trust, and security issues. To handle the aforementioned issues, this paper proposes a Decentralized and Transparent P2P Energy Trading (DT-P2PET) scheme using blockchain. The proposed DT-P2PET scheme aims to reduce the grid’s energy generation and management burden while also increasing profit for both consumers and prosumers through a dynamic pricing mechanism. The DT-P2PET scheme uses Ethereum-blockchain-based Smart Contracts (SCs) and InterPlanetary File System (IPFS) for the P2P energy trading. Furthermore, a recommender mechanism is also introduced in this study to increase the number of prosumers. The Ethereum SCs are designed and deployed to perform P2P in real time in the proposed DT-P2PET scheme. The DT-P2PET scheme is evaluated based on the various parameters such as profit generation (for prosumer and consumer both), data storage cost, network bandwidth, and data transfer rate in contrast to the existing approaches. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 8; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Geng2022559,
	author = {Geng, Jian and Yu, Shaoyuan and Chen, Ailin and Wang, Hao and Yan, Bo and Li, Liang and Song, Lei and Wang, Qirun},
	title = {Evidence Mechanism of Power Dispatching Instruction Based on Blockchain},
	year = {2022},
	journal = {Computer Systems Science and Engineering},
	volume = {43},
	number = {2},
	pages = {559 – 571},
	doi = {10.32604/csse.2022.026948},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129106029&doi=10.32604%2fcsse.2022.026948&partnerID=40&md5=23a869738e4a09b5f3129fc7077333b5},
	abstract = {With the development and application of energy Internet technology, the collaborative interaction of "source network, load and storage" has become the development trend of power grid dispatching. The large-scale access of renewable energy on the load side, the unified management of adjustable loads, and the participation of multiple parties in energy operations have put forward requirements for the safety, credibility, openness, and transparency of the load dispatching environment. Under the environment of carbon emission reduction, the paper proposed an architecture of the scheduling data blockchain, based on the in-depth study of blockchain. Moreover, smart contracts are used to realize the application scenario of load dispatching instruction evidence on the blockchain. The content and storage mode of scheduling instruction evidence on blockchain are studied. And different storage modes are adopted according to the actual needs. And the smart contract system realizes the evidence generation of power dispatching instruction. This is the basis for the normal circulation of power dispatching instruction evidence. The research significance of this paper is highlighted as follows. The data and information generated in the power dispatching process are stored as evidence. On the one hand, it can provide a basis for settlement between power production and dispatching companies and power users. On the other hand, it can prepare for distributed transactions in the power grid under the environment of carbon emission reduction. © 2022 CRL Publishing. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Hybrid Gold Open Access}
}

@CONFERENCE{Gao201923,
	author = {Gao, Jianbo and Liu, Han and Liu, Chao and Li, Qingshan and Guan, Zhi and Chen, Zhong},
	title = {EASYFLOW: Keep ethereum away from overflow},
	year = {2019},
	journal = {Proceedings - 2019 IEEE/ACM 41st International Conference on Software Engineering: Companion, ICSE-Companion 2019},
	pages = {23 – 26},
	doi = {10.1109/ICSE-Companion.2019.00029},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071837509&doi=10.1109%2fICSE-Companion.2019.00029&partnerID=40&md5=9b52e43fc04df10090a9065837379a73},
	abstract = {While Ethereum smart contracts enabled a wide range of blockchain applications, they are extremely vulnerable to different forms of security attacks. Due to the fact that transactions to smart contracts commonly involve cryptocurrency transfer, any successful attacks can lead to money loss or even financial disorder. In this paper, we focus on the overflow attacks in Ethereum, mainly because they widely rooted in many smart contracts and comparatively easy to exploit. We have developed EASYFLOW, an overflow detector at Ethereum Virtual Machine level. The key insight behind EASYFLOW is a taint analysis based tracking technique to analyze the propagation of involved taints. Specifically, EASYFLOW can not only divide smart contracts into safe contracts, manifested overflows, well-protected overflows and potential overflows, but also automatically generate transactions to trigger potential overflows. In our preliminary evaluation, EASYFLOW managed to find potentially vulnerable Ethereum contracts with little runtime overhead. A demo video of EASYFLOW is at https://youtu.be/QbUJkQI0L6o. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 20; All Open Access, Green Open Access}
}

@ARTICLE{Akkaoui2020113467,
	author = {Akkaoui, Raifa and Hei, Xiaojun and Cheng, Wenqing},
	title = {EdgeMediChain: A Hybrid Edge Blockchain-Based Framework for Health Data Exchange},
	year = {2020},
	journal = {IEEE Access},
	volume = {8},
	pages = {113467 – 113486},
	doi = {10.1109/ACCESS.2020.3003575},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85087644656&doi=10.1109%2fACCESS.2020.3003575&partnerID=40&md5=f6f44ec27a6a020598260a2c60cc6082},
	abstract = {Recently, researchers around the world in medical institutions and pharmaceutical companies are demanding a wider access to healthcare data for secondary use in order to provide enhanced and personalized medical services. For this purpose, healthcare information exchange between health authorities can be leveraged as a fundamental concept to meet these demands and enable the discovery of new insights and cures. However, health data are highly sensitive and private information that requires strong authentication and authorization procedures to manage the access to them. In this regard, the cloud paradigm has been used in these e-healthcare solutions, but they remain inefficient due to their inability to adapt to the expanding volume of data generated from body sensors and their vulnerability against cyberattacks. Hence, collaborative and distributed data governance supported by edge computing and blockchain promises enormous potentials in improving the performance and security of the whole system. In this paper, we present a secure and efficient data management framework, named 'EdgeMediChain', for sharing health data. The proposed architecture leverages both edge computing and blockchain to facilitate and provide the necessary requirements for a healthcare ecosystem in terms of scalability, security, as well as privacy. The Ethereum-based testbed evaluations show the effectiveness of EdgeMediChain in terms of execution time with a reduction of nearly 84.75% for 2000 concurrent transactions, higher throughput compared to a traditional blockchain, and scalable ledger storage with a linear growth rate. © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 43; All Open Access, Gold Open Access}
}

@CONFERENCE{Lahbib2019,
	author = {Lahbib, Asma and Toumi, Khalifa and Laouiti, Anis and Martin, Steven},
	title = {DRMF: A Distributed Resource Management Framework for Industry 4.0 Environments},
	year = {2019},
	journal = {2019 IEEE 18th International Symposium on Network Computing and Applications, NCA 2019},
	doi = {10.1109/NCA.2019.8935019},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077970641&doi=10.1109%2fNCA.2019.8935019&partnerID=40&md5=e6b32b32f0883860bdc85f296d617b7f},
	abstract = {While smart factories are becoming widely recognized as a fundamental concept of Industry 4.0, their implementation has posed several challenges insofar that they generate, process, and exchange vast amounts of security critical and privacy sensitive data, which makes them attractive targets of attacks and unauthorized access. Security requirements in such scenario include integrity, confidentiality, traceability and notarization of exchanged data in the one hand plus access control, privacy and trust in the other one. In this context, we design a distributed resource management framework using the emerging smart contracts technology for Industry 4.0 applications and more specifically for smart factories environments. This last, named DRMF, utilizes three Ethereum smart contracts specifically a Governance Contract (GC), an Access Contract (AC) and a Lookup Contract (LC) that are respectively responsible for the registration of new joining entities as well as those requesting consensus partaking permissions, second the dynamic access authorization and third the mapping between the required services and contracts ensuring their management. Using the blockchain technology, this framework is expected to achieve distributed, flexible, verifiable and trustworthy access control in addition to a transparent, traceable and notarized resource usage and sharing. Results from a real implementation plus performance evaluation prove the proposed concept and demonstrate its feasibility. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Green Open Access}
}

@ARTICLE{Uriarte2021,
	author = {Uriarte, Rafael Brundo and Zhou, Huan and Kritikos, Kyriakos and Shi, Zeshun and Zhao, Zhiming and De Nicola, Rocco},
	title = {Distributed service-level agreement management with smart contracts and blockchain},
	year = {2021},
	journal = {Concurrency and Computation: Practice and Experience},
	volume = {33},
	number = {14},
	doi = {10.1002/cpe.5800},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083963791&doi=10.1002%2fcpe.5800&partnerID=40&md5=9399a227fdd0cfc1fb6df7d1205e70b2},
	abstract = {The current cloud market is dominated by a few providers, which offer cloud services in a take-it-or-leave-it manner. However, the dynamism and uncertainty of cloud environments may require the change over time of both application requirements and service capabilities. The current service-level agreement (SLA) management solutions cannot easily guarantee a trustworthy, distributed SLA adaptation due to the centralized authority of the cloud provider who could also misbehave to pursue individual goals. To address the above issues, we propose a novel SLA management framework, which facilitates the specification and enforcement of dynamic SLAs that enable one to describe how, and under which conditions, the offered service level can change over time. The proposed framework relies on a two-level blockchain architecture. At the first level, the smart SLA is transformed into a smart contract that dynamically guides service provisioning. At the second level, a permissioned blockchain is built through a federation of monitoring entities to generate objective measurements for the smart SLA/contract assessment. The scalability of this permissioned blockchain is also thoroughly evaluated. The proposed framework enables creating open distributed clouds, which offer manageable and dynamic services, and facilitates cost reduction for cloud consumers, while it increases flexibility in resource management and trust in the offered cloud services. © 2020 The Authors. Concurrency and Computation: Practice and Experience published by John Wiley & Sons, Ltd.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 20; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Pericàs-Gornals2022,
	author = {Pericàs-Gornals, Rosa and Mut-Puigserver, Macià and Payeras-Capellà, M. Magdalena},
	title = {Highly private blockchain-based management system for digital COVID-19 certificates},
	year = {2022},
	journal = {International Journal of Information Security},
	doi = {10.1007/s10207-022-00598-3},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135251071&doi=10.1007%2fs10207-022-00598-3&partnerID=40&md5=1c19865b23a4a0bd1e3a34eb0ef61f43},
	abstract = {As a result of the declaration of the COVID-19 pandemic, several proposals of blockchain-based solutions for digital COVID-19 certificates have been presented. Considering that health data have high privacy requirements, a health data management system must fulfil several strict privacy and security requirements. On the one hand, confidentiality of the medical data must be assured, being the data owner (the patient) the actor that maintain control over the privacy of their certificates. On the other hand, the entities involved in the generation and validation of certificates must be supervised by a regulatory authority. This set of requirements are generally not achieved together in previous proposals. Moreover, it is required that a digital COVID-19 certificate management protocol provides an easy verification process and also strongly avoid the risk of forgery. In this paper we present the design and implementation of a protocol to manage digital COVID-19 certificates where individual users decide how to share their private data in a hierarchical system. In order to achieve this, we put together two different technologies: the use of a proxy re-encryption (PRE) service in conjunction with a blockchain-based protocol. Additionally, our protocol introduces an authority to control and regulate the centers that can generate digital COVID-19 certificates and offers two kinds of validation of certificates for registered and non-registered verification entities. Therefore, the paper achieves all the requirements, that is, data sovereignty, high privacy, forgery avoidance, regulation of entities, security and easy verification. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Leite2021260,
	author = {Leite, Nuno and Santos, Alexandre and Lopes, Nuno},
	title = {Assuring m2m secure transactions via blockchain and smart contracts},
	year = {2021},
	journal = {Journal of Communications Software and Systems},
	volume = {17},
	number = {3},
	pages = {260 – 269},
	doi = {10.24138/jcomss-2021-0034},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114729297&doi=10.24138%2fjcomss-2021-0034&partnerID=40&md5=2f7b038d389fa58399827fca42ffc71a},
	abstract = {The need to ensure the confidentiality and integrity of data generated in industrial systems and applications has been increasingly highlighted over the years, due to the clear as well as urgent requirements of not disclosing sensible proprietary information, and ensuring that data is kept immutable since it is generated. Based on these background requirements, this paper discusses a system that promotes data privacy and immutability in industrial weighing systems. In this sense, the proposed solution includes a protocol definition for a secure IoT (Internet of Things) communication and an architecture for a blockchainbased platform that: I) automates the process of complying with standardized weighing guidelines; and ii) increases data traceability, promoting both its confidentiality and immutability. Additionally, to demonstrate the proposed system's compliance with the established goals, a proof of concept was assembled, and functional tests conducted. The main conclusions withdrawn from the results obtained show that: I) the process of registering and verifying weighing guidelines is properly automated by means of Machine-to-Machine secure transactions; ii) the solution is able to ensure that the data registered is authentic and iii) that it has been transmitted without any eavesdropping, can not be erased and is kept private.  © 2021 CCIS.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@CONFERENCE{Park2018912,
	author = {Park, Daejun and Zhang, Yi and Saxena, Manasvi and Daian, Philip and Roşu, Grigore},
	title = {A formal verification tool for ethereum VM bytecode},
	year = {2018},
	journal = {ESEC/FSE 2018 - Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages = {912 – 915},
	doi = {10.1145/3236024.3264591},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056473667&doi=10.1145%2f3236024.3264591&partnerID=40&md5=0abbc417e85d389993abafc045bea158},
	abstract = {In this paper, we present a formal verification tool for the Ethereum Virtual Machine (EVM) bytecode. To precisely reason about all possible behaviors of the EVM bytecode, we adopted KEVM, a complete formal semantics of the EVM, and instantiated the Kframework's reachability logic theorem prover to generate a correctby- construction deductive verifier for the EVM. We further optimized the verifier by introducing EVM-specific abstractions and lemmas to improve its scalability. Our EVM verifier has been used to verify various high-profile smart contracts including the ERC20 token, Ethereum Casper, and DappHub MakerDAO contracts. © 2018 Association for Computing Machinery.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 68; All Open Access, Bronze Open Access}
}

@ARTICLE{Grover2019771,
	author = {Grover, Purva and Kar, Arpan Kumar and Janssen, Marijn and Ilavarasan, P. Vigneswara},
	title = {Perceived usefulness, ease of use and user acceptance of blockchain technology for digital transactions–insights from user-generated content on Twitter},
	year = {2019},
	journal = {Enterprise Information Systems},
	volume = {13},
	number = {6},
	pages = {771 – 800},
	doi = {10.1080/17517575.2019.1599446},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063968921&doi=10.1080%2f17517575.2019.1599446&partnerID=40&md5=159a8e7ed189fe585e1286833f37a060},
	abstract = {Although blockchain has attracted a great deal of attention from academia and industry there is a lack of studies on acceptance drivers. This study explores blockchain acceptance by mining the collective intelligence of users on Twitter. It maps blockchain user acceptance drivers to technology acceptance constructs. The analysis shows that users are attracted by security, privacy, transparency, trust and traceability aspects provided by blockchain. On Twitter more discussions on blockchain benefits than on drawbacks. Initial coin offering (ICO) is extensively discussed. The study provides guidelines for managers and concludes by presenting the limitations of the study along with future research directions. © 2019, © 2019 Informa UK Limited, trading as Taylor & Francis Group.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 90; All Open Access, Green Open Access}
}

@CONFERENCE{Fotiou2018256,
	author = {Fotiou, Nikos and Polyzos, George C.},
	title = {Smart Contracts for the Internet of Things: Opportunities and Challenges},
	year = {2018},
	journal = {2018 European Conference on Networks and Communications, EuCNC 2018},
	pages = {256 – 260},
	doi = {10.1109/EuCNC.2018.8443212},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053510593&doi=10.1109%2fEuCNC.2018.8443212&partnerID=40&md5=0efd3ecd69201db93d29e5d0db4d8bee},
	abstract = {With the Internet of Things (IoT), Things are expected to live in different 'domains' and 'contexts' during their lifetime. Information generated by and associated with Things should be manageable by multiple, diverse stakeholders accordingly. Moreover, the scope of the information related to Things can range from private and confidential to public and auditable. Identification, security, and interoperability in this vivid environment are expected to be challenging. In this paper we discuss how smart contracts and blockchain technologies create the potential for a viable solution. To this end, we present smart contract-based solutions that improve security and information management, we identify new opportunities and challenges, and we provide security recommendations and guidelines. © 2018 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 20; All Open Access, Green Open Access}
}

@CONFERENCE{Gupta2020138,
	author = {Gupta, Pooja and Dedeoglu, Volkan and Najeebullah, Kamran and Kanhere, Salil S. and Jurdak, Raja},
	title = {Energy-aware Demand Selection and Allocation for Real-time IoT Data Trading},
	year = {2020},
	journal = {Proceedings - 2020 IEEE International Conference on Smart Computing, SMARTCOMP 2020},
	pages = {138 – 147},
	doi = {10.1109/SMARTCOMP50058.2020.00038},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097333856&doi=10.1109%2fSMARTCOMP50058.2020.00038&partnerID=40&md5=2f9bfa64a19c227c50a04a421aefce3c},
	abstract = {Personal IoT data is a new economic asset that individuals can trade to generate revenue on the emerging data marketplaces. Typically, marketplaces are centralized systems that raise concerns of privacy, single point of failure, little transparency and involve trusted intermediaries to be fair. Furthermore, the battery-operated IoT devices limit the amount of IoT data to be traded in real-time that affects buyer/seller satisfaction and hence, impacting the sustainability and usability of such a marketplace. This work proposes to utilize blockchain technology to realize a trusted and transparent decentralized marketplace for contract compliance for trading IoT data streams generated by battery-operated IoT devices in real-time. The contribution of this paper is two-fold: (1) we propose an autonomous blockchain-based marketplace equipped with essential functionalities such as agreement framework, pricing model and rating mechanism to create an effective marketplace framework without involving a mediator, (2) we propose a mechanism for selection and allocation of buyers' demands on seller's devices under quality and battery constraints. We present a proof-of-concept implementation in Ethereum to demonstrate the feasibility of the framework. We investigated the impact of buyer's demand on the battery drainage of the IoT devices under different scenarios through extensive simulations. Our results show that this approach is viable and benefits the seller and buyer for creating a sustainable marketplace model for trading IoT data in real-time from battery-powered IoT devices. © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 10; All Open Access, Green Open Access}
}

@CONFERENCE{Jiang2018259,
	author = {Jiang, Bo and Liu, Ye and Chan, W.K.},
	title = {ContractFuzzer: Fuzzing smart contracts for vulnerability detection},
	year = {2018},
	journal = {ASE 2018 - Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
	pages = {259 – 269},
	doi = {10.1145/3238147.3238177},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056546946&doi=10.1145%2f3238147.3238177&partnerID=40&md5=b4ad7c663344353c510e326dcffe8426},
	abstract = {Decentralized cryptocurrencies feature the use of blockchain to transfer values among peers on networks without central agency. Smart contracts are programs running on top of the blockchain consensus protocol to enable people make agreements while minimizing trusts. Millions of smart contracts have been deployed in various decentralized applications. The security vulnerabilities within those smart contracts pose significant threats to their applications. Indeed, many critical security vulnerabilities within smart contracts on Ethereum platform have caused huge financial losses to their users. In this work, we present ContractFuzzer, a novel fuzzer to test Ethereum smart contracts for security vulnerabilities. ContractFuzzer generates fuzzing inputs based on the ABI specifications of smart contracts, defines test oracles to detect security vulnerabilities, instruments the EVM to log smart contracts runtime behaviors, and analyzes these logs to report security vulnerabilities. Our fuzzing of 6991 smart contracts has flagged more than 459 vulnerabilities with high precision. In particular, our fuzzing tool successfully detects the vulnerability of the DAO contract that leads to $60 million loss and the vulnerabilities of Parity Wallet that have led to the loss of $30 million and the freezing of $150 million worth of Ether. © 2018 Association for Computing Machinery.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 283; All Open Access, Green Open Access}
}

@CONFERENCE{Brahem2019186,
	author = {Brahem, Amina and Messai, Nizar and Sam, Yacine and Bhiri, Sami and Devogele, Thomas and Gaaloul, Walid},
	title = {Blockchain's Fame Reaches the Execution of Personalized Touristic Itineraries},
	year = {2019},
	journal = {Proceedings - 2019 IEEE 28th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises, WETICE 2019},
	pages = {186 – 191},
	doi = {10.1109/WETICE.2019.00047},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071661096&doi=10.1109%2fWETICE.2019.00047&partnerID=40&md5=eb5e3edf4baf6c5c5057e1ca45424ebe},
	abstract = {Blockchain trends cover more and more tech domains making it one of the most used technologies in the last few years. This is due to two essential aspects. First, it is a distributed peer-to-peer network where there is no need for third part to execute operations between peers. Second, blockchain implements mechanisms to make the most data sensitive operations executed in a trusted way. Regarding these attractive aspects, we intend in this work to use the blockchain technology for the implementation of touristic itineraries. We consider the latter as process choreographies involving different participants. We intend to model and execute the touristic itineraries generated from a personalized trip planner called CART in raw XML format in a way that respects this collaborative aspect and resolves the problem of trust. We will propose a pattern and its transformation rules to reconstruct the itineraries presented in declarative annotations such as XML to smart contracts written in some smart contract-specific programming language called Solidity. Experimental results show promising perspectives of the deployment of the proposed solution to execute touristic plans. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 3; All Open Access, Green Open Access}
}

@CONFERENCE{Yang20211,
	author = {Yang, Zhen and Keung, Jacky and Yu, Xiao and Gu, Xiaodong and Wei, Zhengyuan and Ma, Xiaoxue and Zhang, Miao},
	title = {A Multi-Modal Transformer-based Code Summarization Approach for Smart Contracts},
	year = {2021},
	journal = {IEEE International Conference on Program Comprehension},
	volume = {2021-May},
	pages = {1 – 12},
	doi = {10.1109/ICPC52881.2021.00010},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113206073&doi=10.1109%2fICPC52881.2021.00010&partnerID=40&md5=2860e9454cf1be5944e6f85a47ccee01},
	abstract = {Code comment has been an important part of computer programs, greatly facilitating the understanding and maintenance of source code. However, high-quality code comments are often unavailable in smart contracts, the increasingly popular programs that run on the blockchain. In this paper, we propose a Multi-Modal Transformer-based (MMTrans) code summarization approach for smart contracts. Specifically, the MMTrans learns the representation of source code from the two heterogeneous modalities of the Abstract Syntax Tree (AST), i.e., Structure-based Traversal (SBT) sequences and graphs. The SBT sequence provides the global semantic information of AST, while the graph convolution focuses on the local details. The MMTrans uses two encoders to extract both global and local semantic information from the two modalities respectively, and then uses a joint decoder to generate code comments. Both the encoders and the decoder employ the multi-head attention structure of the Transformer to enhance the ability to capture the long-range dependencies between code tokens. We build a dataset with over 300K <method, comment> pairs of smart contracts, and evaluate the MMTrans on it. The experimental results demonstrate that the MMTrans outperforms the state-of-The-Art baselines in terms of four evaluation metrics by a substantial margin, and can generate higher quality comments.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 17; All Open Access, Green Open Access}
}

@ARTICLE{Belkeziz2021661,
	author = {Belkeziz, Radia and Jarir, Zahi},
	title = {Using Blockchain in the Internet of Things Coordination},
	year = {2021},
	journal = {International Journal of Advanced Computer Science and Applications},
	volume = {12},
	number = {8},
	pages = {661 – 669},
	doi = {10.14569/IJACSA.2021.0120877},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118771301&doi=10.14569%2fIJACSA.2021.0120877&partnerID=40&md5=b60cb9ef6462501e0a1bdd3a2681fb3d},
	abstract = {Now-a-days, the Internet of Things (IoT) has generated enormous interest from industry to create distributed and innovative solutions. However, achieving this goal is a tedious task and presents several open challenges as the literature points out. One of the most complex is the IoT coordination service. Unfortunately, most research works give rarely importance to this service in their models or architectures proposals. Wherefore our current contribution deals with this open issue and proposes a solution capable of implementing advanced processes that can be based on orchestration, choreography or both mechanisms. More over and to conduct efficiently both coordination mechanisms when sharing knowledge or tasks between connected objects, we integrate smart contacts to guarantee the modalities of behavior change in the coordination mechanism. Smart contracts are a safe way to decide the coordination mechanism based on the state of the system environment. To prove our approach, we have built a technical architecture based on a multi-agent system to abstract connected objects of IoT systems, blockchain technology, and the frameworks and languages required for collaboration processes such as BPMN, BPEL and BPEL4CHOR. Carbon leakage as a case study is used for experimentation. © 2021. International Journal of Advanced Computer Science and Applications. All Rights Reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Guo2021,
	author = {Guo, Yu and Wang, Shenling and Huang, Jianhui},
	title = {A blockchain-assisted framework for secure and reliable data sharing in distributed systems},
	year = {2021},
	journal = {Eurasip Journal on Wireless Communications and Networking},
	volume = {2021},
	number = {1},
	doi = {10.1186/s13638-021-02041-y},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112828376&doi=10.1186%2fs13638-021-02041-y&partnerID=40&md5=12dd0344f24c15892e2a9861b3a568d0},
	abstract = {The explosive growth of big data is pushing forward the paradigm of cloud-based data store today. Among other, distributed storage systems are widely adopted due to their superior performance and continuous availability. However, due to the potentially wide attacking surfaces of the public cloud, outsourcing data store inevitably raises new concerns on user privacy exposure and unauthorized data access. Besides, directly introducing a centralized third-party authority for query authorization management does not work because it still can be compromised. In this paper, we propose a blockchain-assisted framework that can support trustworthy data sharing services. In particular, data owners allow to outsource their sensitive data to distributed systems in encrypted form. By leveraging smart contracts of blockchain, a data owner can distribute secret keys for authorized users without extra round interaction to generate the permitted search tokens. Meanwhile, such blockchain-assisted framework naturally solves the trust issues of query authorization. Besides, we devise a secure local index framework to support encrypted keyword search with forward privacy and mitigate blockchain overhead. To validate our design, we implement the prototype and deploy it at Amazon Cloud. Extensive experiments demonstrate the security, efficiency, and effectiveness of the blockchain-assisted design. © 2021, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{López-Pimentel2021,
	author = {López-Pimentel, Juan Carlos and Morales-Rosales, Luis Alberto and Monroy, Raúl},
	title = {Rootlogchain: Registering log-events in a blockchain for audit issues from the creation of the root},
	year = {2021},
	journal = {Sensors},
	volume = {21},
	number = {22},
	doi = {10.3390/s21227669},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85119107862&doi=10.3390%2fs21227669&partnerID=40&md5=17f5db6565976656416950283396ff53},
	abstract = {Logging system activities are required to provide credibility and confidence in the systems used by an organization. Logs in computer systems must be secured from the root user so that they are true and fair. This paper introduces RootLogChain, a blockchain-based audit mechanism that is built upon a security protocol to create both a root user in a blockchain network and the first log; from there, all root events are stored as logs within a standard blockchain mechanism. RootLogChain provides security constructs so as to be deployed in a distributed context over a hostile environment, such as the internet. We have developed a prototype based on a microservice architecture, validating it by executing different stress proofs in two scenarios: one with compliant agents and the other without. In such scenarios, several compliant and non-compliant agents try to become a root and register the events within the blockchain. Non-compliant agents simulate eavesdropper entities that do not follow the rules of the protocol. Our experiments show that the mechanism guarantees the creation of one and only one root user, integrity, and authenticity of the transactions; it also stores all events generated by the root within a blockchain. In addition, for audit issues, the traceability of the transaction logs can be consulted by the root. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access, Green Open Access}
}

@ARTICLE{Bruschi2021103758,
	author = {Bruschi, Francesco and Rana, Vincenzo and Pagani, Alessio and Sciuto, Donatella},
	title = {Tunneling Trust into the Blockchain: A Merkle Based Proof System for Structured Documents},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {103758 – 103771},
	doi = {10.1109/ACCESS.2020.3028498},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111589718&doi=10.1109%2fACCESS.2020.3028498&partnerID=40&md5=1ff537ca172f121318b940f3a673b685},
	abstract = {The idea of Smart contracts foresees the possibility of automating contractual clauses using hardware and software tools and devices. One of the main perspectives of their implementation is the automation of interactions such as bets, collaterals, prediction markets, insurances. As blockchain platforms, such as Ethereum, offer very strong guarantees of untampered, deterministic execution, that can be exploited as smart contracts substrate, the problem of how to provide reliable information from the 'outside world' into the contracts becomes central. In this article, we propose a system based on a Merkle tree representation of structured documents (such as all XML), with which it is possible to generate compact proofs on the content of web documents. The proofs can then be efficiently checked on-chain by a smart contract, to trigger contract action. We provide an end-to-end proof of concept, applying it to real use case scenarios, which allows us to give an estimate of the costs.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Gold Open Access}
}

@ARTICLE{Naaz2022128697,
	author = {Naaz, Adeeba and Pavan Kumar B, T.V. and Francis, Maria and Kataoka, Kotaro},
	title = {Integrating Threshold Opening With Threshold Issuance of Anonymous Credentials Over Blockchains for a Multi-Certifier Communication Model},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {128697 – 128720},
	doi = {10.1109/ACCESS.2022.3225439},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85144012597&doi=10.1109%2fACCESS.2022.3225439&partnerID=40&md5=eaa5fe9aa6137ae4a29717a3e76af4df},
	abstract = {Authentication while maintaining anonymity when availing a service over the internet is a significant privacy challenge. Anonymous credentials (AC) address this by providing the user with a credential issued by a trusted entity that convinces the service provider (SP) that the user is authenticated but reveals no other information. The existing AC schemes assume a single trusted authority (certifier) that validates all the user attributes. In practice, however, a user may require different attributes to be attested by different certifiers. This means that the user has to get multiple credentials, increasing the burden on the SP who has to verify each one of them. Moreover, complete anonymity can be misused. We propose a decentralized threshold revocable anonymous credential (DTRAC) scheme over blockchains that supports - a) attestation of attributes by multiple certifiers, and b) anonymity revocation through a set of distributed openers, by integrating threshold opening to the state-of-the-art threshold anonymous credential issuance scheme, Coconut [35]. DTRAC generates a single credential on attributes that are attested by multiple certifiers, freeing the SP from the hassle of verifying multiple credentials. We analyze the security of DTRAC formally in the universal composability (UC) framework. We also implement a prototype on Ethereum using smart contracts and give a detailed analysis of its performance. We compare the verification time for credentials with attributes attested by multiple certifiers in both DTRAC and Coconut and see that in terms of execution time and gas consumption, DTRAC performs significantly better than Coconut. It also scales better, with the performance gain of DTRAC over Coconut increasing linearly with the number of certifiers.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Jiang20227988,
	author = {Jiang, Jiajia and Zhang, Yushu and Zhu, Youwen and Dong, Xuewen and Wang, Liangmin and Xiang, Yong},
	title = {DCIV: Decentralized cross-chain data integrity verification with blockchain},
	year = {2022},
	journal = {Journal of King Saud University - Computer and Information Sciences},
	volume = {34},
	number = {10},
	pages = {7988 – 7999},
	doi = {10.1016/j.jksuci.2022.07.015},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135185498&doi=10.1016%2fj.jksuci.2022.07.015&partnerID=40&md5=16873ddd19bcc3558245ef9146e9a3bc},
	abstract = {In recent years, blockchain holds promise to impact a wide range of application areas, but it still suffers from technical challenges such as security and scalability. The increase in the number of transactions puts blockchains under data storage pressure. The emergence of cross-chain technologies connects different blockchains and relieves the data storage pressure. However, the existing research generally focuses on the technical realization of cross chain, lacking in-depth research on consistency issues like data integrity verification of cross-chain interaction. In this paper, we propose a decentralized cross-chain data integrity verification scheme (DCIV) from the point of view of governing the chain by chain. We adopt supervision chain to audit the integrity of data in cross-chain interaction. We preprocess the off-chain original data in the form of Merkle tree. Before cross-chain interaction, we process the data with KZG polynomial commitment. During the auditing period, the supervision chain generates a challenge and verifies the integrity of cross-chain data. In particular, we add audit digests into the structure of transactions in blockchain to reduce the storage burden during auditing. Theoretical and experimental analyses demonstrate that DCIV can verify the integrity of data in cross-chain interaction, achieving secure and accurate cross-chain data sharing. © 2022 The Author(s)},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@ARTICLE{Jin20224611,
	author = {Jin, Hai and Wang, Zeli and Wen, Ming and Dai, Weiqi and Zhu, Yu and Zou, Deqing},
	title = {Aroc: An Automatic Repair Framework for On-Chain Smart Contracts},
	year = {2022},
	journal = {IEEE Transactions on Software Engineering},
	volume = {48},
	number = {11},
	pages = {4611 – 4629},
	doi = {10.1109/TSE.2021.3123170},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118551536&doi=10.1109%2fTSE.2021.3123170&partnerID=40&md5=73083337ffcb95931528230e54b0432d},
	abstract = {Ongoing smart contract attack events have seriously impeded the practical application of blockchain. Although lots of researches have been conducted, they mostly focus on off-chain vulnerability detection. However, smart contracts cannot be modified once they have been deployed on-chain, thus existing techniques cannot protect those deployed contracts from being attacked. To mitigate this problem, we propose a general smart contract repairer named Aroc, which can automatically patch vulnerable deployed contracts without changing the contract codes. The core insight of Aroc is to generate patch contracts to abort malicious transactions in advance. Taking the three most serious bug types (i.e., reentrancy, arithmetic bugs, and unchecked low-level checks) as examples, we present how Aroc automatically repairs them on-chain. We conduct abundant evaluations on four kinds of datasets to evaluate the effectiveness and efficiency of Aroc. In particular, Aroc can repair 95.95% of the vulnerable contracts with an average correctness ratio of 93.32%. Meanwhile, Aroc introduces acceptable additional overheads to smart contract users and blockchain miners. When compared with the state-of-the-art techniques, Aroc introduces either fewer execution overheads or contract codes.  © 1976-2012 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Šipek20221283,
	author = {Šipek, Matija and Žagar, Martin and Mihaljević, Branko and Drašković, Nikola},
	title = {Application of Blockchain Technology for Educational Platform},
	year = {2022},
	journal = {Lecture Notes in Networks and Systems},
	volume = {319},
	pages = {1283 – 1287},
	doi = {10.1007/978-3-030-85540-6_165},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85115634537&doi=10.1007%2f978-3-030-85540-6_165&partnerID=40&md5=d493b85118bfef8abcb664a85dcc6a34},
	abstract = {Nowadays, huge amounts of data are generated every second, and a quantity of that data can be defined as sensitive. Blockchain technology has private, secure, transparent and decentralized exchange of data as ‘native’. It is adaptable and can be used in a wide range of Internet-based interactive systems in academic and industrial settings. The essential part of programmable distributed ledgers such as Ethereum, Polkadot, Cardano and other Web 3.0 technologies are smart contracts. Smart contracts are programs executed on the global blockchain, the code is public as well as all of the data managed within the transactions, thus creating a system that is reliable and cannot be cheated if designed properly. In this paper, in order to make the educational system more transparent and versatile we will describe an educational learning platform designed as a distributed system. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@CONFERENCE{Andesta2020405,
	author = {Andesta, Erfan and Faghih, Fathiyeh and Fooladgar, Mahdi},
	title = {Testing Smart Contracts Gets Smarter},
	year = {2020},
	journal = {2020 10h International Conference on Computer and Knowledge Engineering, ICCKE 2020},
	pages = {405 – 412},
	doi = {10.1109/ICCKE50421.2020.9303670},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101486179&doi=10.1109%2fICCKE50421.2020.9303670&partnerID=40&md5=7878bea1715730b7254d33b1bc1a8602},
	abstract = {Smart contracts are immutable, verifiable, and autonomous pieces of code that can be deployed and ran on blockchain networks like Ethereum. Due to the immutability nature of blockchain, no change is possible on a deployed smart contract or a verified transaction. On the other hand, there are millions of dollars carried by smart contracts in Ethereum blockchain, and hence, a faulty smart contract can lead to a huge monetary loss. Therefore, it is important for smart contract developers to fully test and check the correctness of their code before deploying it on the blockchain. In this paper, we propose a testing mechanism for smart contracts in the Solidity language, based on mutation testing. We analyzed a comprehensive list of known bugs in Solidity smart contracts and designed 10 classes of mutation operators inspired by the real faults. Our experimental results show that our proposed mutation operators can regenerate 10 out of 15 famous faulty smart contracts, which have resulted in millions of dollars loss. We also have extended the Universal Mutator tool with our mutation operators to generate mutants for smart contracts written in Solidity, automatically. © 2020 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Green Open Access}
}

@ARTICLE{Spoto2022,
	author = {Spoto, Fausto and Migliorini, Sara and Gambini, Mauro and Benini, Andrea},
	title = {On the use of generic types for smart contracts},
	year = {2022},
	journal = {Cluster Computing},
	doi = {10.1007/s10586-022-03688-y},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85136825252&doi=10.1007%2fs10586-022-03688-y&partnerID=40&md5=6e41f1eec673f21e31cc9438fca1e7b9},
	abstract = {This paper shows that generic types (generics) are useful for writing more abstract and more general smart contracts, but this comes with some security risks, reporting a concrete security issue found while using generics for writing smart contracts that implement shared entities for the Hotmoka blockchain. That issue can be used to steal the remuneration of validator nodes. This paper proposes a patch based on appropriate code rewriting. Namely, smart contracts are pieces of code that are deployed and executed in the context of a blockchain infrastructure in order to automatically enforce some effects when particular events occur. The writing of smart contracts is a complex and critical activity that can benefit from the use of high-level features of programming languages, and generics is one of them. In many programming languages, such as Java, generics are implemented by erasure, i.e. replaced by their upper bound type during compilation into bytecode. This is safe at source level, since the compiler takes care of checking that types are correct, before erasure. However, the erased types of the generated bytecode are consequently weaker. In a permissionless blockchain, where every user can call the bytecode of smart contracts installed by other users, these weaker types pose a risk of attack. © 2022, The Author(s).},
	type = {Article},
	publication_stage = {Article in press},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Valencia-Payan20234703,
	author = {Valencia-Payan, Cristian and Grass-Ramírez, José Fernando and Ramirez-Gonzalez, Gustavo and Corrales, Juan Carlos},
	title = {Smart Contract to Traceability of Food Social Selling},
	year = {2023},
	journal = {Computers, Materials and Continua},
	volume = {74},
	number = {3},
	pages = {4703 – 4728},
	doi = {10.32604/cmc.2023.031554},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145350428&doi=10.32604%2fcmc.2023.031554&partnerID=40&md5=8e42e5be0f0deaf7d5d7584800174c05},
	abstract = {Traditionally, food sustainability has been considered solely in the stage of agricultural production. However, globalization, the expansion of the food production industry, and the emergence of supermarket chains that control the retail food market require specific significant changes in supply chains in the food sector and, therefore, we need to address the economic, social, and environmental impacts of these events. On the other hand, social selling has increased rapidly in recent years, with a further boom, following current events related to the coronavirus disease (COVID-19). This explosion of social sales, where there are usually no control and regulation entities, can bring problems associated with mishandling items. In this paper, we expose how Blockchain technology supports the traceability of social sales by validating the data provided by the chain participants such as digital health passports, production and transport data in the sale process; the proposed solution generates recommendations on productmanagement considering the agreements previously made by the network actors. To evaluate the proposed smart contracts, we useHyperledger Caliper, obtaining an average throughput of 12.6 transactions per second and an average latency of 0.3 s for the asset update process. We also use a study case to evaluate the proposed project platform's selling-transport stage using Internet of Things (IoT) sensors. © 2023 Tech Science Press. All rights reserved.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@CONFERENCE{Annessi2021229,
	author = {Annessi, Robert and Fast, Ethan},
	title = {Improving Security for Users of Decentralized Exchanges Through Multiparty Computation},
	year = {2021},
	journal = {Proceedings - 2021 IEEE International Conference on Blockchain, Blockchain 2021},
	pages = {229 – 236},
	doi = {10.1109/Blockchain53845.2021.00038},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125639731&doi=10.1109%2fBlockchain53845.2021.00038&partnerID=40&md5=85e5f3f325cfde5888965c778b260aa0},
	abstract = {Decentralized cryptocurrency exchanges offer compelling security benefits over centralized exchanges: users control their funds and avoid the risk of an exchange hack or malicious operator. However, because user assets are fully accessible by a secret key, decentralized exchanges pose significant internal security risks for trading firms and automated trading systems, where a compromised system can result in total loss of funds. Centralized exchanges mitigate this risk through API key based security policies that allow professional users to give individual traders or automated systems specific and customizable access rights such as trading or withdrawal limits. Such policies, however, are not compatible with decentralized exchanges, where all exchange operations require a signature generated by the owner's secret key. This paper introduces a protocol based upon multiparty computation that allows for the creation of API keys and security policies that can be applied to any existing decentralized exchange. Our protocol works with both ECDSA and EdDSA signature schemes and prioritizes efficient computation and communication. We have deployed this protocol on Nash exchange, as well as around several Ethereum-based automated market maker smart contracts, where it secures the trading accounts and wallets of thousands of users. © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Green Open Access}
}

@ARTICLE{Wang2019109439,
	author = {Wang, Shangping and Tang, Xixi and Zhang, Yaling and Chen, Juanjuan},
	title = {Auditable Protocols for Fair Payment and Physical Asset Delivery Based on Smart Contracts},
	year = {2019},
	journal = {IEEE Access},
	volume = {7},
	pages = {109439 – 109453},
	doi = {10.1109/ACCESS.2019.2933860},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083199360&doi=10.1109%2fACCESS.2019.2933860&partnerID=40&md5=6cb8a85992841aaa4a0a6a4ce67c188d},
	abstract = {With the rapid development of electronic information technology, online transaction will gradually surpass traditional market transaction, among which online payment and asset delivery become the focus of attention. But in fact, due to the incomplete third-party payment mechanism and the intrusion risk of various charging Trojan, it is easy to cause a trust crisis. The existing centralized framework often leads to information asymmetry between the two parties. Therefore, how to realize the fairness of payment and the auditability of assets in the distributed system is a challenging problem. The emerging blockchain technology provides a new method with its openness, transparency and verifiability. Existing researches do not provide a complete shopping model for consumers, most of which focuses on payments or only on asset delivery. In this paper, we propose an auditable fair payment and physical asset delivery protocol based on smart contracts. Three types of smart contracts are designed to achieve reliable and fair payment among merchants, consumers and logistics companies. The traceability and auditability of blockchain provide an effective method to audit assets and data sharing in the whole transportation. In view of the phenomenon of goods being switched, the way of 'pre-verification' is added. In order to prevent the illegal elements to fake pickup code, induce consumers to conduct illegal operations, cause property loss, in our system the pickup codes are generated by consumers to reduce the risk of fraud. In addition, our plan designs a complete return process for the first time, providing better service experience and higher efficiency for consumers. Finally, all the contracts involved in the scheme are implemented and deployed on the ethereum test network. The results of security analysis and evaluation showed that our scheme was improved in cost, with high security and availability.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 16; All Open Access, Gold Open Access}
}

@ARTICLE{Haga202287477,
	author = {Haga, Shinya and Omote, Kazumasa},
	title = {Blockchain-Based Autonomous Notarization System Using National eID Card},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {87477 – 87489},
	doi = {10.1109/ACCESS.2022.3199744},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85136649814&doi=10.1109%2fACCESS.2022.3199744&partnerID=40&md5=501dc6ae80016c67d88e3a6594784c11},
	abstract = {In recent years, the spread of information and communication technology has led to the emergence of e-government, which is the electronic replacement of government services. E-government is said to be compatible with blockchain technology, which has led to various studies on the possibility. Notarization, one of the functions of the government, has particularly been examined for the potential adoption of blockchain technology. However, because the notary public must authenticate the document's contents during the notarization process, they have been difficult to replace with smart contracts. In this study, we focus only on fixed date notarizations and propose a fully automated notarization system by combining a national eID card with Public Key Infrastructure and smart contracts. A fixed date is a notarization that allows a notary public to guarantee that a document existed, regardless of the authenticity of the document's content. Therefore, it can be replaced by a smart contract. Specifically, our proposed system automatically authenticates the creator and the document for electronic documents signed with a national eID card and uses the transaction receipt generated when the information is stored on the blockchain as a certificate of notarization. Verification of the signed data is done inside the blockchain by smart contracts, which eliminates the need for a verification authority. We further demonstrate the effectiveness of the proposed method in a Japanese use case as proof of concept.  © 2022 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Gold Open Access}
}

@CONFERENCE{Abdallah2019400,
	author = {Abdallah, Salam and Nizamuddin, Nishara and Khalil, Ashraf},
	title = {Blockchain for improved safety of smart buildings},
	year = {2019},
	journal = {Multi Conference on Computer Science and Information Systems, MCCSIS 2019 - Proceedings of the International Conferences on ICT, Society and Human Beings 2019, Connected Smart Cities 2019 and Web Based Communities and Social Media 2019},
	pages = {400 – 404},
	doi = {10.33965/csc2019_201908c051},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073148874&doi=10.33965%2fcsc2019_201908c051&partnerID=40&md5=a11ffc4daf73bc382257987671298597},
	abstract = {In this paper, we propose a blockchain powered automated self-incited fire detection sensors connected to smart buildings. This solution is based on utilizing Ethereum smart contracts to coordinate and monitor the interaction between the service providers, smart connected devices, and the end users. The smart contracts monitor the status of the fire detecting sensors; interact with a service provider according to pre-negotiated contract terms and conditions, and carries out the maintenance task in an automated fashion. When a failure occurs within the device, an internal sensor which indicates the failure generates a request for service on the blockchain. This transaction informs the service provider about the nature of the failure, identifying the specific device. The service provider can respond to the service request in a timely manner. Upon completion, the sensor reading indicates the completion of the maintenance/repair work carried out and can release payment to the service provider on the blockchain. Moreover, the proposed solution automates the payment process between the client and the service provider. © 2019 IADIS Press. All rights reserved.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 1; All Open Access, Bronze Open Access}
}

@CONFERENCE{Hegeds201835,
	author = {Hegeds, Péter},
	title = {Towards analyzing the complexity landscape of solidity based ethereum smart contracts},
	year = {2018},
	journal = {Proceedings - International Conference on Software Engineering},
	pages = {35 – 39},
	doi = {10.1145/3194113.3194119},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051626875&doi=10.1145%2f3194113.3194119&partnerID=40&md5=8cc85cba1eeb7205a0f8135acf639aef},
	abstract = {The blockchain based decentralized cryptocurrency platforms are one of the hottest topics in tech at the moment. Though most of the interest is generated by cryptocurrency related activities, it is becoming apparent that a much wider spectrum of applications can leverage the blockchain technology. The primary concepts enabling such general use of the blockchain are the so-called smart contracts, which are special programs that run on the blockchain. One of the most popular blockchain platforms that supports smart contracts are Ethereum. As smart contracts typically handle money, ensuring their low number of faults and vulnerabilities are essential. To aid smart contract developers and help maturing the technology, we need analysis tools and studies for smart contracts. As an initiative for this, we propose the adoption of some well-known OO metrics for Solidity smart contracts. Furthermore, we analyze more than 10,000 smart contracts with our prototype tool. The results suggest that smart contract programs are short, not overly complex and either quite well-commented or not commented at all. Moreover, smart contracts could benefit from an external library and dependency management mechanism, as more than 80% of the defined libraries in Solidity files code the same functionalities. © 2018 ACM.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 22; All Open Access, Green Open Access}
}

@ARTICLE{Villarreal20235629,
	author = {Villarreal, Edgar R. Dulce and Garcia-Alonso, Jose and Moguel, Enrique and Alegria, Julio Ariel Hurtado},
	title = {Blockchain for Healthcare Management Systems: A Survey on Interoperability and Security},
	year = {2023},
	journal = {IEEE Access},
	volume = {11},
	pages = {5629 – 5652},
	doi = {10.1109/ACCESS.2023.3236505},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147281305&doi=10.1109%2fACCESS.2023.3236505&partnerID=40&md5=6485c98d74ac7a50746ef7d647c4f07f},
	abstract = {n recent years it has been shown that the secure exchange of medical information significantly benefits people's life quality, improving their care and treatment. The interoperability of the entire healthcare ecosystem is a constant challenge, and even more, with all the risks posed to the security of healthcare information. Blockchain technology is emerging as one of the main alternatives when it comes to finding a balance in the healthcare ecosystem. However, the constant development of new Blockchain technologies and the evolution of healthcare systems make it difficult to find established proposals. From an architectural point of view, the design of blockchain-based solutions requires trade-offs e.g., security and interoperability. This paper focuses on two main objectives, in the first one, it was carried out a Systematic Literature Review for exploring architectural mechanisms used to support the interoperability and security of Blockchain-based Health Management Systems. Taking into account of results, a series of scenarios were generated where these mechanisms can be used along with their context, issues, and various architectural concerns (interoperability and security). In the second objective, a high-level architecture and its validation were proposed through an experiment for the whole process of developing a Domain Specific Language, using the Model Driven Engineering methodology for specific Smart Contracts.  © 2013 IEEE.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0; All Open Access, Gold Open Access}
}

@ARTICLE{Aloqaily2022884,
	author = {Aloqaily, Moayad and Bouachir, Ouns and Özkasap, Öznur and Ali, Faizan Safdar},
	title = {SynergyGrids: blockchain-supported distributed microgrid energy trading},
	year = {2022},
	journal = {Peer-to-Peer Networking and Applications},
	volume = {15},
	number = {2},
	pages = {884 – 900},
	doi = {10.1007/s12083-021-01199-y},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85117355675&doi=10.1007%2fs12083-021-01199-y&partnerID=40&md5=2e3db88f3c98f094c78f7db7c265f398},
	abstract = {Growing intelligent cities is witnessing an increasing amount of local energy generation through renewable energy resources. Energy trade among the local energy generators (aka prosumers) and consumers can reduce the energy consumption cost and also reduce the dependency on conventional energy resources, not to mention the environmental, economic, and societal benefits. However, these local energy sources might not be enough to fulfill energy consumption demands. A hybrid approach, where consumers can buy energy from both prosumers (that generate energy) and also from prosumer of other locations, is essential. A centralized system can be used to manage this energy trading that faces several security issues and increase centralized development cost. In this paper, a hybrid energy trading system coupled with a smart contract named SynergyGrids has been proposed as a solution, that reduces the average cost of energy and load over the utility grids. To the best of our knowledge, this work is the first attempt to create a hybrid energy trading platform over the smart contract for energy demand prediction. An hourly energy data set has been utilized for testing and validation purposes. The trading system shows 17.8% decrease in energy cost for consumers and 76.4% decrease in load over utility grids when compared with its counterparts. © 2021, The Author(s).},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 6; All Open Access, Green Open Access, Hybrid Gold Open Access}
}

@ARTICLE{Albert2020,
	author = {Albert, Elvira and Grossman, Shelly and Rinetzky, Noam and Rodríguez-Núñez, Clara and Rubio, Albert and Sagiv, Mooly},
	title = {Taming callbacks for smart contract modularity},
	year = {2020},
	journal = {Proceedings of the ACM on Programming Languages},
	volume = {4},
	number = {OOPSLA},
	doi = {10.1145/3428277},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097572089&doi=10.1145%2f3428277&partnerID=40&md5=077d36f64d9716d700dac2370b939a83},
	abstract = {Callbacks are an effective programming discipline for implementing event-driven programming, especially in environments like Ethereum which forbid shared global state and concurrency. Callbacks allow a callee to delegate the execution back to the caller. Though effective, they can lead to subtle mistakes principally in open environments where callbacks can be added in a new code. Indeed, several high profile bugs in smart contracts exploit callbacks. We present the first static technique ensuring modularity in the presence of callbacks and apply it to verify prominent smart contracts. Modularity ensures that external calls to other contracts cannot affect the behavior of the contract. Importantly, modularity is guaranteed without restricting programming. In general, checking modularity is undecidable-even for programs without loops. This paper describes an effective technique for soundly ensuring modularity harnessing SMT solvers. The main idea is to define a constructive version of modularity using commutativity and projection operations on program segments. We believe that this approach is also accessible to programmers, since counterexamples to modularity can be generated automatically by the SMT solvers, allowing programmers to understand and fix the error. We implemented our approach in order to demonstrate the precision of the modularity analysis and applied it to real smart contracts, including a subset of the 150 most active contracts in Ethereum. Our implementation decompiles bytecode programs into an intermediate representation and then implements the modularity checking using SMT queries. Overall, we argue that our experimental results indicate that the method can be applied to many realistic contracts, and that it is able to prove modularity where other methods fail. © 2020 Owner/Author.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 7; All Open Access, Bronze Open Access}
}

@CONFERENCE{Anjana201983,
	author = {Anjana, Parwat Singh and Kumari, Sweta and Peri, Sathya and Rathor, Sachin and Somani, Archit},
	title = {An Efficient Framework for Optimistic Concurrent Execution of Smart Contracts},
	year = {2019},
	journal = {Proceedings - 27th Euromicro International Conference on Parallel, Distributed and Network-Based Processing, PDP 2019},
	pages = {83 – 92},
	doi = {10.1109/EMPDP.2019.8671637},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063875625&doi=10.1109%2fEMPDP.2019.8671637&partnerID=40&md5=d739ee512c8d47e1f9ab15356e94d63d},
	abstract = {Blockchain platforms such as Ethereum and several others execute complex transactions in blocks through user-defined scripts known as smart contracts. Normally, a block of the chain consists of multiple transactions of smart contracts which are added by a miner. To append a correct block into the blockchain, miners execute these transactions of smart contracts sequentially. Later the validators serially re-execute the smart contract transactions of the block. If the validators agree with the final state of the block as recorded by the miner, then the block is said to be validated. It is then added to the blockchain using a consensus protocol. In Ethereum and other blockchains that support cryptocurrencies, a miner gets an incentive every time such a valid block successfully added to the blockchain. In most of the current day blockchains the miners and validators execute the smart contract transactions serially. In the current era of multi-core processors, by employing the serial execution of the transactions, the miners and validators fail to utilize the cores properly and as a result, have poor throughput. By adding concurrency to smart contracts execution, we can achieve better efficiency and higher throughput. In this paper, we develop an efficient framework to execute the smart contract transactions concurrently using optimistic Software Transactional Memory systems (STMs). Miners execute smart contract transactions concurrently using multi-threading to generate the final state of blockchain. STM is used to take care of synchronization issues among the transactions and ensure atomicity. Now when the validators also execute the transactions (as a part of validation) concurrently using multi-threading, then the validators may get a different final state depending on the order of execution of conflicting transactions. To avoid this, the miners also generate a block graph of the transactions during the concurrent execution and store it in the block. This graph captures the conflict relations among the transactions and is generated concurrently as the transactions are executed by different threads. The miner proposes a block which consists of set of transactions, block graph, hash of the previous block, and final state of each shared data-objects. Later, the validators re-execute the same smart contract transactions concurrently and deterministically with the help of block graph given by the miner to verify the final state. If the validation is successful then proposed block appended into the blockchain and miner gets incentive otherwise discard the proposed block. We execute the smart contract transactions concurrently using Basic Time stamp Ordering (BTO) and Multi-Version Time stamp Ordering (MVTO) protocols as optimistic STMs. BTO and MVTO miner achieves 3.6x and 3.7x average speedups over serial miner respectively. Along with, BTO and MVTO validator outperform average 40.8x and 47.1x than serial validator respectively. © 2019 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 27; All Open Access, Green Open Access}
}

@CONFERENCE{Torres2021103,
	author = {Torres, Christof Ferreira and Iannillo, Antonio Ken and Gervais, Arthur and State, Radu},
	title = {ConFuzzius: A data dependency-aware hybrid fuzzer for smart contracts},
	year = {2021},
	journal = {Proceedings - 2021 IEEE European Symposium on Security and Privacy, Euro S and P 2021},
	pages = {103 – 119},
	doi = {10.1109/EuroSP51992.2021.00018},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118433506&doi=10.1109%2fEuroSP51992.2021.00018&partnerID=40&md5=0c6f08645e48cf27b683be7662fe2a6a},
	abstract = {Smart contracts are Turing-complete programs that are executed across a blockchain. Unlike traditional programs, once deployed, they cannot be modified. As smart contracts carry more value, they become more of an exciting target for attackers. Over the last years, they suffered from exploits costing millions of dollars due to simple programming mistakes. As a result, a variety of tools for detecting bugs have been proposed. Most of these tools rely on symbolic execution, which may yield false positives due to over-approximation. Recently, many fuzzers have been proposed to detect bugs in smart contracts. However, these tend to be more effective in finding shallow bugs and less effective in finding bugs that lie deep in the execution, therefore achieving low code coverage and many false negatives. An alternative that has proven to achieve good results in traditional programs is hybrid fuzzing, a combination of symbolic execution and fuzzing. In this work, we study hybrid fuzzing on smart contracts and present ConFuzzius, the first hybrid fuzzer for smart contracts. ConFuzzius uses evolutionary fuzzing to exercise shallow parts of a smart contract and constraint solving to generate inputs that satisfy complex conditions that prevent evolutionary fuzzing from exploring deeper parts. Moreover, ConFuzzius leverages dynamic data dependency analysis to efficiently generate sequences of transactions that are more likely to result in contract states in which bugs may be hidden. We evaluate the effectiveness of ConFuzzius by comparing it with state-of-the-art symbolic execution tools and fuzzers for smart contracts. Our evaluation on a curated dataset of 128 contracts and a dataset of 21K real-world contracts shows that our hybrid approach detects more bugs than state-of-the-art tools (up to 23%) and that it outperforms existing tools in terms of code coverage (up to 69%). We also demonstrate that data dependency analysis can boost bug detection up to 18%.  © 2021 IEEE.},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 5; All Open Access, Green Open Access}
}