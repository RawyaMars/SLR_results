
@inproceedings{udokwu_designing_2021,
	address = {New York, NY, USA},
	series = {{ASSE} '21},
	title = {Designing a {Collaborative} {Construction}-{Project} {Platform} on {Blockchain} {Technology} for {Transparency}, {Traceability}, and {Information} {Symmetry}},
	isbn = {978-1-4503-8908-2},
	url = {https://doi.org/10.1145/3456126.3456134},
	doi = {10.1145/3456126.3456134},
	abstract = {The construction industry is a \$6 trillion industry worldwide with a prediction to grow towards \$10,3 trillion by 2023 and constitutes an essential part of the global economy. Nevertheless, the management of the construction effort is still very manual. The construction process from design, to sourcing of material, contract management, and so on, is a convoluted and intransparent process filled with risks the collaborating parties are exposed to. A need exists for management platforms that streamline and automate collaborative construction processes, establish transparency, traceability, and information symmetry between business parties. This paper presents the Construction Project Management (CoPM) platform that is based on blockchain- and smart-contract technologies for enabling peer-to-peer collaboration between construction parties that enhances the flow of information for reducing cost- and time expenditures while improving the quality of service. The CoPM system is based on diligent up-front requirement studies from which we derive a coherent system architecture and set of cooperation protocols. Thereby, the CoPM system overcomes the currently existing fractured value propositions for construction-management systems.CCS Concepts •Software and its engineering•Software creation and management•Designing software},
	booktitle = {2021 2nd {Asia} {Service} {Sciences} and {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Udokwu, Chibuzor and Norta, Alexander and Wenna, Christoph},
	year = {2021},
	note = {event-place: Macau, Macao},
	keywords = {blockchain, smart contract, business processes, collaboration, Construction, data logistics, inter-organisational, project management},
	pages = {1--9},
}

@inproceedings{ma_emerging_2021,
	address = {New York, NY, USA},
	series = {{ICVISP} 2020},
	title = {Emerging {Legal} {Issues} in {Blockchain} for {Construction} {Supply} {Chains}},
	isbn = {978-1-4503-8953-2},
	url = {https://doi.org/10.1145/3448823.3448880},
	doi = {10.1145/3448823.3448880},
	abstract = {A complex web of supply chains is a common feature of construction projects. With the different types of parties involved in a project and the amount of paperwork generated, the supply chain process can be time-consuming, an easy target for fraud and is prone to human errors.Blockchain is an emerging technology that can transform, simplify and make a network of information more secure. In the context of the supply chain, digitalised documents and real-time information can lead to cost-savings in any operation. Its embedded feature of transparency and integrity proves itself to be reliable. In addition, there are two less widely considered advantages that are particularly suitable for applying in the administration and management of the complex web of supply chains in the construction industry. The two additional advantages are dispute avoidance and dispute resolution, which will be discussed in this paper.The use of blockchain in supply chains carries legal issues. This could be a contributing factor to its slower rate of adoption than widely anticipated after the rapid emergence of its first application in the financial system of cryptocurrency, commonly known as Bitcoin. This paper identifies and proposes solutions to three key legal issues arising from the use of blockchain technology in supply chains. They are (a) restricted use of smart contracts to prescribed outcomes only; (b) concerns relating to access and ownership of using a shared blockchain platform; and (c) multi-jurisdiction concerns over where governing laws apply.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Vision}, {Image} and {Signal} {Processing}},
	publisher = {Association for Computing Machinery},
	author = {Ma, Alan},
	year = {2021},
	note = {event-place: Bangkok, Thailand},
	keywords = {Blockchain, Smart Contract, Construction Supply Chain, Digital Platform, Multi-jurisdiction},
}

@inproceedings{tan_latte_2020,
	address = {New York, NY, USA},
	series = {{SIGMOD} '20},
	title = {{LATTE}: {Visual} {Construction} of {Smart} {Contracts}},
	isbn = {978-1-4503-6735-6},
	url = {https://doi.org/10.1145/3318464.3384687},
	doi = {10.1145/3318464.3384687},
	abstract = {Smart contracts enable developers to run instructions on blockchains (eg. Ethereum) and have broad range of real-world applications. Solidity is the most popular high-level smart contract programming language on Ethereum. Coding in such language, however, demands a user to be proficient in contract programming and debugging to construct smart contracts correctly. In practice, such expectation makes it harder for non-programmers to take advantage of smart contracts. In this demonstration, we present a novel visual smart contract construction system on Ethereum called latte to make smart contract development accessible to non-programmers. Specifically, it allows a user to construct a contract without writing Solidity code by manipulating visual objects in a direct manipulation-based interface. Furthermore, latte interactively guides users and makes them aware of the cost (in units of Gas) of visual actions undertaken by them during contract construction.},
	booktitle = {Proceedings of the 2020 {ACM} {SIGMOD} {International} {Conference} on {Management} of {Data}},
	publisher = {Association for Computing Machinery},
	author = {Tan, Sean and S Bhowmick, Sourav and Chua, Huey Eng and Xiao, Xiaokui},
	year = {2020},
	note = {event-place: Portland, OR, USA},
	keywords = {blockchain, smart contracts, usability, visual formulation, visual interface},
	pages = {2713--2716},
}

@article{hamledari_measuring_2021,
	title = {Measuring the {Impact} of {Blockchain} and {Smart} {Contracts} on {Construction} {Supply} {Chain} {Visibility}},
	volume = {50},
	issn = {1474-0346},
	url = {https://doi.org/10.1016/j.aei.2021.101444},
	doi = {10.1016/j.aei.2021.101444},
	number = {C},
	journal = {Adv. Eng. Inform.},
	author = {Hamledari, Hesam and Fischer, Martin},
	month = oct,
	year = {2021},
	note = {Place: NLD
Publisher: Elsevier Science Publishers B. V.},
	keywords = {Blockchain, Smart contract, Construction supply chain, Crypto currency, Crypto token, Impact assessment, Payments, Visibility},
}

@inproceedings{tan_latte_2020-1,
	address = {New York, NY, USA},
	series = {{SIGMOD} '20},
	title = {{LATTE}: {Visual} {Construction} of {Smart} {Contracts}},
	isbn = {978-1-4503-6735-6},
	url = {https://doi.org/10.1145/3318464.3384687},
	doi = {10.1145/3318464.3384687},
	abstract = {Smart contracts enable developers to run instructions on blockchains (eg. Ethereum) and have broad range of real-world applications. Solidity is the most popular high-level smart contract programming language on Ethereum. Coding in such language, however, demands a user to be proficient in contract programming and debugging to construct smart contracts correctly. In practice, such expectation makes it harder for non-programmers to take advantage of smart contracts. In this demonstration, we present a novel visual smart contract construction system on Ethereum called latte to make smart contract development accessible to non-programmers. Specifically, it allows a user to construct a contract without writing Solidity code by manipulating visual objects in a direct manipulation-based interface. Furthermore, latte interactively guides users and makes them aware of the cost (in units of Gas) of visual actions undertaken by them during contract construction.},
	booktitle = {Proceedings of the 2020 {ACM} {SIGMOD} {International} {Conference} on {Management} of {Data}},
	publisher = {Association for Computing Machinery},
	author = {Tan, Sean and S Bhowmick, Sourav and Chua, Huey Eng and Xiao, Xiaokui},
	year = {2020},
	note = {event-place: Portland, OR, USA},
	keywords = {blockchain, smart contracts, usability, visual formulation, visual interface},
	pages = {2713--2716},
}

@article{chen_understanding_2020,
	title = {Understanding {Ethereum} via {Graph} {Analysis}},
	volume = {20},
	issn = {1533-5399},
	url = {https://doi.org/10.1145/3381036},
	doi = {10.1145/3381036},
	abstract = {Ethereum, a blockchain, supports its own cryptocurrency named Ether and smart contracts. Although more than 8M smart contracts have been deployed on Ethereum, little is known about the characteristics of its users, smart contracts, and the relationships among them. We conduct the first systematic study on Ethereum by leveraging graph analysis to characterize three major activities on Ethereum, namely money transfer, smart contract creation, and smart contract invocation. We collect all transaction data, construct three graphs from the data to characterize major activities via graph analysis, and discover new insights. Moreover, we address three security issues based on graphs.},
	number = {2},
	journal = {ACM Trans. Internet Technol.},
	author = {Chen, Ting and Li, Zihao and Zhu, Yuxiao and Chen, Jiachi and Luo, Xiapu and Lui, John Chi-Shing and Lin, Xiaodong and Zhang, Xiaosong},
	month = apr,
	year = {2020},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
	keywords = {Blockchain, Ethereum, contract creation graph, contract invocation graph, graph analysis, money flow graph},
}

@inproceedings{wang_qos-aware_2018,
	address = {New York, NY, USA},
	series = {{ICSE} '18},
	title = {{QoS}-{Aware} {Service} {Composition} {Using} {Blockchain}-{Based} {Smart} {Contracts}},
	isbn = {978-1-4503-5663-3},
	url = {https://doi.org/10.1145/3183440.3194978},
	doi = {10.1145/3183440.3194978},
	abstract = {Smart contracts that run on blockchains can ensure the transactions are automatically, reliably performed as agreed upon between the participants without a trusted third party. In this work, we propose a smart-contract based algorithm for constructing service-based systems through the composition of existing services.},
	booktitle = {Proceedings of the 40th {International} {Conference} on {Software} {Engineering}: {Companion} {Proceeedings}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Puwei and Liu, Xiaohe and Chen, Jinchuan and Zhan, Ying and Jin, Zhi},
	year = {2018},
	note = {event-place: Gothenburg, Sweden},
	pages = {296--297},
}

@inproceedings{dziembowski_fairswap_2018,
	address = {New York, NY, USA},
	series = {{CCS} '18},
	title = {{FairSwap}: {How} {To} {Fairly} {Exchange} {Digital} {Goods}},
	isbn = {978-1-4503-5693-0},
	url = {https://doi.org/10.1145/3243734.3243857},
	doi = {10.1145/3243734.3243857},
	abstract = {We introduce FairSwap – an efficient protocol for fair exchange of digital goods using smart contracts. A fair exchange protocol allows a sender S to sell a digital commodity x for a fixed price p to a receiver R. The protocol is said to be secure if R only pays if he receives the correct x. Our solution guarantees fairness by relying on smart contracts executed over decentralized cryptocurrencies, where the contract takes the role of an external judge that completes the exchange in case of disagreement. While in the past there have been several proposals for building fair exchange protocols over cryptocurrencies, our solution has two distinctive features that makes it particular attractive when users deal with large commodities. These advantages are: (1) minimizing the cost for running the smart contract on the blockchain, and (2) avoiding expensive cryptographic tools such as zero-knowledge proofs. In addition to our new protocols, we provide formal security definitions for smart contract based fair exchange, and prove security of our construction. Finally, we illustrate several applications of our basic protocol and evaluate practicality of our approach via a prototype implementation for fairly selling large files over the cryptocurrency Ethereum.},
	booktitle = {Proceedings of the 2018 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Dziembowski, Stefan and Eckey, Lisa and Faust, Sebastian},
	year = {2018},
	note = {event-place: Toronto, Canada},
	keywords = {smart contracts, fair exchange, blockchain based protocols, distributed file sharing, fairness, provable security},
	pages = {967--984},
}

@inproceedings{choi_smartian_2022,
	series = {{ASE} '21},
	title = {{SMARTIAN}: {Enhancing} {Smart} {Contract} {Fuzzing} with {Static} and {Dynamic} {Data}-{Flow} {Analyses}},
	isbn = {978-1-66540-337-5},
	url = {https://doi.org/10.1109/ASE51524.2021.9678888},
	doi = {10.1109/ASE51524.2021.9678888},
	abstract = {Unlike traditional software, smart contracts have the unique organization in which a sequence of transactions shares persistent states. Unfortunately, such a characteristic makes it difficult for existing fuzzers to find out critical transaction sequences. To tackle this challenge, we employ both static and dynamic analyses for fuzzing smart contracts. First, we statically analyze smart contract bytecodes to predict which transaction sequences will lead to effective testing, and figure out if there is a certain constraint that each transaction should satisfy. Such information is then passed to the fuzzing phase and used to construct an initial seed corpus. During a fuzzing campaign, we perform a lightweight dynamic data-flow analysis to collect data-flow-based feedback to effectively guide fuzzing. We implement our ideas on a practical open-source fuzzer, named Smartian. Smartian can discover bugs in real-world smart contracts without the need for the source code. Our experimental results show that Smartian is more effective than existing state-of-the-art tools in finding known CVEs from real-world contracts. Smartian also outperforms other tools in terms of code coverage.},
	booktitle = {Proceedings of the 36th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {IEEE Press},
	author = {Choi, Jaeseung and Kim, Doyeon and Kim, Soomin and Grieco, Gustavo and Groce, Alex and Cha, Sang Kil},
	year = {2022},
	note = {event-place: Melbourne, Australia},
	pages = {227--239},
}

@inproceedings{steffen_zapper_2022,
	address = {New York, NY, USA},
	series = {{CCS} '22},
	title = {Zapper: {Smart} {Contracts} with {Data} and {Identity} {Privacy}},
	isbn = {978-1-4503-9450-5},
	url = {https://doi.org/10.1145/3548606.3560622},
	doi = {10.1145/3548606.3560622},
	abstract = {Privacy concerns prevent the adoption of smart contracts in sensitive domains incompatible with the public nature of shared ledgers.We present Zapper, a privacy-focused smart contract system allowing developers to express contracts in an intuitive frontend. Zapper hides not only the identity of its users but also the objects they access—the latter is critical to prevent deanonymization attacks. Specifically, Zapper compiles contracts to an assembly language executed by a non-interactive zero-knowledge processor and hides accessed objects by an oblivious Merkle tree construction.We implemented Zapper on an idealized ledger and evaluated it on realistic applications, showing that it allows generating new transactions within 22 s and verifying them within 0.03 s (excluding the time for consensus). This performance is in line with the smart contract system ZEXE (Bowe et al., 2020), which offers analogous data and identity privacy guarantees but suffers from multiple shortcomings affecting security and usability.},
	booktitle = {Proceedings of the 2022 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Steffen, Samuel and Bichsel, Benjamin and Vechev, Martin},
	year = {2022},
	note = {event-place: Los Angeles, CA, USA},
	keywords = {blockchain, smart contracts, privacy, zero-knowledge proofs},
	pages = {2735--2749},
}

@inproceedings{wang_personal_2020,
	address = {New York, NY, USA},
	series = {{ICCSP} 2020},
	title = {A {Personal} {Data} {Determination} {Method} {Based} {On} {Blockchain} {Technology} and {Smart} {Contract}},
	isbn = {978-1-4503-7744-7},
	url = {https://doi.org/10.1145/3377644.3377656},
	doi = {10.1145/3377644.3377656},
	abstract = {Data determination is the primary issue to be addressed in open data sharing. This paper proposes a personal data determination method based on blockchain and smart contract, which are used to solve the problem that the current data transaction market relies heavily on system-center entities. it is difficult for centralized method to confirm the data is true and reliable and cause the owner lose the control over data access. The method implements identity authentication by means of certificate authority, and uses digital signature and hash function to store a digest of the original data into the blockchain.By doing this can determine ownership of the data, and prevent it from being tampered with. Constructing a blockchain serving at data interaction platform to realize access control and transfer rights about personal data through the smart contract installed on it,because the operation record of data will be kept on the blockchain one by one.Then using resource state view to speed up the query process. According to experimental simulation concerning about throughput and latency, blockchain and smart contracts can guarantee the authenticity of the data and achieve the right to confirm the data and promote the open sharing of data.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Cryptography}, {Security} and {Privacy}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Hongman and Yuan, Yongbin and Yang, Fangchun},
	year = {2020},
	note = {event-place: Nanjing, China},
	keywords = {Blockchain, Smart contract, Access control, Personal data determination},
	pages = {89--94},
}

@inproceedings{santiago_gifflar_2021,
	address = {USA},
	series = {{CASCON} '21},
	title = {Gifflar: {A} {Framework} to {Generate} {Smart} {Contracts} on the {Fly}},
	abstract = {Blockchain is a disruptive technology that offers a secure decentralized network, allowing for direct transactions between distributed entities, without the need for a trusted third party. Smart contracts are executable codes hosted on the blockchain which enables the implementation of several decentralized applications, in different domains. Due to the complexity of the contract's construction, it is necessary to seek ways to facilitate and make this innovative development process robust. This paper presents Gifflar, a framework for generating smart contract code on the fly, in such a way that it allows a system to write, compile and implement blockchain contracts with a decentralized application still running. The framework is structured in components that implement design patterns to better define the responsibility of each one of the parts and exports a simple interaction module for modeling contracts in JSON and automatic code writing using the TypeScript language. As far as we know, this framework is one of the first to allow contract code generation dynamically at run time. Thus, the work contributes to the state of the art by addressing a new paradigm, where systems can act as smart contract developers.},
	booktitle = {Proceedings of the 31st {Annual} {International} {Conference} on {Computer} {Science} and {Software} {Engineering}},
	publisher = {IBM Corp.},
	author = {Santiago, Levy and Abijaude, Jauberth Weyll and Greve, Fabíola},
	year = {2021},
	note = {event-place: Toronto, Canada},
	keywords = {blockchain, code generation, framework, smart contract},
	pages = {214--219},
}

@inproceedings{santiago_framework_2021,
	address = {New York, NY, USA},
	series = {{SBES} '21},
	title = {A {Framework} to {Generate} {Smart} {Contracts} {On} the {Fly}},
	isbn = {978-1-4503-9061-3},
	url = {https://doi.org/10.1145/3474624.3477068},
	doi = {10.1145/3474624.3477068},
	abstract = {Blockchain is a disruptive technology that offers a secure decentralized network, and allows for direct transactions between distributed entities, without the need for a trusted third party. Smart contracts are executable codes hosted on the blockchain and enable the implementation of several decentralized applications, in different domains. However, due to the complexity of contract construction, it is necessary to seek ways to facilitate and make this innovative development process robust. This paper presents Gifflar, a framework for generating smart contract code on the fly, in such a way that it allows a system to write, compile and implement blockchain contracts with a decentralized application still running. Gifflar is structured in components that implement design patterns to better define the responsibility of each one of the parts and exports a simple interaction module for contract modeling in JSON and automatic code writing using the TypeScript language. As far as we know, this framework is one of the first to generate contracts dynamically at run time. Thus, the work contributes to the state of the art by addressing a new paradigm, where systems can act as smart contract developers.},
	booktitle = {Proceedings of the {XXXV} {Brazilian} {Symposium} on {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Santiago, Levy and Abijaude, Jauberth and Greve, Fabíola},
	year = {2021},
	note = {event-place: Joinville, Brazil},
	keywords = {Blockchain, Code Generation, Framework, Smart Contract},
	pages = {410--415},
}

@inproceedings{bao_trusted_2022,
	address = {New York, NY, USA},
	series = {{ASSE}' 22},
	title = {Trusted {Blockchain} of {Ring} {Signature} in {TEE} {Environment}},
	isbn = {978-1-4503-8745-3},
	url = {https://doi.org/10.1145/3523181.3523183},
	doi = {10.1145/3523181.3523183},
	abstract = {Traditional blockchain system has two problems: poor privacy protection and scalability. The public chain discloses all information, which can be seen by every node. The code of smart contract is clear-text, and the data is also clear-text. Every node in the public chain is untrustworthy, so it is necessary to design a complex consistency protocol, which often leads to poor performance (low TPS), waste of power, or lower overall credibility. TEE can construct a trusted execution environment Enclave (safe house), which is similar to a black box, the outside cannot access the inside, and it can allow the outside to authenticate the inside reliably through remote authentication. This paper focuses on how to integrate Intel SGX and ring signature algorithm into traditional blockchain to realize privacy calculation and transaction. To protect the anonymity of traders and to process trusted privacy calculation under the chain. Through the cooperation between on the chain and off the chain, "calculation" and "settlement" are completely decoupled, thus solving the performance bottleneck and privacy problems of traditional smart contracts.},
	booktitle = {2022 3rd {Asia} {Service} {Sciences} and {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Bao, LuWei and Lu, GeHao and Fu, LiYu},
	year = {2022},
	note = {event-place: Macau, Macao},
	pages = {8--13},
}

@inproceedings{godoy_predicate_2022,
	address = {New York, NY, USA},
	series = {{MODELS} '22},
	title = {Predicate {Abstractions} for {Smart} {Contract} {Validation}},
	isbn = {978-1-4503-9466-6},
	url = {https://doi.org/10.1145/3550355.3552462},
	doi = {10.1145/3550355.3552462},
	abstract = {Smart contracts are immutable programs deployed on the blockchain that can manage significant assets. Because of this, verification and validation of smart contracts is of vital importance. Indeed, it is industrial practice to hire independent specialized companies to audit smart contracts before deployment. Auditors typically rely on a combination of tools and experience but still fail to identify problems in smart contracts before deployment, causing significant losses. In this paper, we propose using predicate abstraction to construct models which can be used by auditors to explore and validate smart contact behaviour at the function call level by proposing predicates that expose different aspects of the contract. We propose predicates based on requires clauses and enum-type state variables as a starting point for contract validation and report on an evaluation on two different benchmarks.},
	booktitle = {Proceedings of the 25th {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Godoy, Javier and Galeotti, Juan Pablo and Garbervetsky, Diego and Uchitel, Sebastian},
	year = {2022},
	note = {event-place: Montreal, Quebec, Canada},
	pages = {289--299},
}

@inproceedings{su_effectively_2023,
	address = {New York, NY, USA},
	series = {{ASE} '22},
	title = {Effectively {Generating} {Vulnerable} {Transaction} {Sequences} in {Smart} {Contracts} with {Reinforcement} {Learning}-{Guided} {Fuzzing}},
	isbn = {978-1-4503-9475-8},
	url = {https://doi.org/10.1145/3551349.3560429},
	doi = {10.1145/3551349.3560429},
	abstract = {As computer programs run on top of blockchain, smart contracts have proliferated a myriad of decentralized applications while bringing security vulnerabilities, which may cause huge financial losses. Thus, it is crucial and urgent to detect the vulnerabilities of smart contracts. However, existing fuzzers for smart contracts are still inefficient to detect sophisticated vulnerabilities that require specific vulnerable transaction sequences to trigger. To address this challenge, we propose a novel vulnerability-guided fuzzer based on reinforcement learning, namely RLF, for generating vulnerable transaction sequences to detect such sophisticated vulnerabilities in smart contracts. In particular, we firstly model the process of fuzzing smart contracts as a Markov decision process to construct our reinforcement learning framework. We then creatively design an appropriate reward with consideration of both vulnerability and code coverage so that it can effectively guide our fuzzer to generate specific transaction sequences to reveal vulnerabilities, especially for the vulnerabilities related to multiple functions. We conduct extensive experiments to evaluate RLF’s performance. The experimental results demonstrate that our RLF outperforms state-of-the-art vulnerability-detection tools (e.g., detecting 8\%-69\% more vulnerabilities within 30 minutes).},
	booktitle = {Proceedings of the 37th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Su, Jianzhong and Dai, Hong-Ning and Zhao, Lingjun and Zheng, Zibin and Luo, Xiapu},
	year = {2023},
	note = {event-place: Rochester, MI, USA},
	keywords = {Reinforcement learning, Smart contract, Fuzzing},
}

@inproceedings{zhao_bmcprotector_2018,
	address = {New York, NY, USA},
	series = {{ICBTA} 2018},
	title = {{BMCProtector}: {A} {Blockchain} and {Smart} {Contract} {Based} {Application} for {Music} {Copyright} {Protection}},
	isbn = {978-1-4503-6646-5},
	url = {https://doi.org/10.1145/3301403.3301404},
	doi = {10.1145/3301403.3301404},
	abstract = {In this paper, we explore the design and construct a prototype implementation of an Ethereum application, BMCProtector, which is based on Blockchain and Smart Contract technology, to protect music copyright and ensure rights holders income rights. With the blockchain, musicians can easily authorize and manage their music copyright on a public ledger. Without intermediaries being involved during the propagation process, rights holders can receive a greater share of royalty payments from the music industry automatically and instantly. We deal with piracy issues using encryption and watermarking methods. We also introduce a versioning mechanism to update the data in the smart contract for correcting mistakes made by the publisher. BMCProtector provides a solution to protect music copyright more effectively.},
	booktitle = {Proceedings of the 2018 {International} {Conference} on {Blockchain} {Technology} and {Application}},
	publisher = {Association for Computing Machinery},
	author = {Zhao, Sijia and O'Mahony, Donal},
	year = {2018},
	note = {event-place: Xi'an, China},
	keywords = {Blockchain, Smart Contract, Music Copyright, Versioning System},
	pages = {1--5},
}

@inproceedings{lee_measurements_2020,
	address = {New York, NY, USA},
	series = {{WWW} '20},
	title = {Measurements, {Analyses}, and {Insights} on the {Entire} {Ethereum} {Blockchain} {Network}},
	isbn = {978-1-4503-7023-3},
	url = {https://doi.org/10.1145/3366423.3380103},
	doi = {10.1145/3366423.3380103},
	abstract = {Blockchains are increasingly becoming popular due to the prevalence of cryptocurrencies and decentralized applications. Ethereum is a distributed public blockchain network that focuses on running code (smart contracts) for decentralized applications. More simply, it is a platform for sharing information in a global state that cannot be manipulated or changed. Ethereum blockchain introduces a novel ecosystem of human users and autonomous agents (smart contracts). In this network, we are interested in all possible interactions: user-to-user, user-to-contract, contract-to-user, and contract-to-contract. This requires us to construct interaction networks from the entire Ethereum blockchain data, where vertices are accounts (users, contracts) and arcs denote interactions. Our analyses on the networks reveal new insights by combining information from the four networks. We perform an in-depth study of these networks based on several graph properties consisting of both local and global properties, discuss their similarities and differences with social networks and the Web, draw interesting conclusions, and highlight important, future research directions.},
	booktitle = {Proceedings of {The} {Web} {Conference} 2020},
	publisher = {Association for Computing Machinery},
	author = {Lee, Xi Tong and Khan, Arijit and Sen Gupta, Sourav and Ong, Yu Hann and Liu, Xuan},
	year = {2020},
	note = {event-place: Taipei, Taiwan},
	keywords = {Blockchain, Ethereum, Smart Contracts, Network Analysis, Tokens},
	pages = {155--166},
}

@inproceedings{baird_i-tire_2022,
	address = {New York, NY, USA},
	series = {{CCS} '22},
	title = {I-{TiRE}: {Incremental} {Timed}-{Release} {Encryption} or {How} to {Use} {Timed}-{Release} {Encryption} on {Blockchains}?},
	isbn = {978-1-4503-9450-5},
	url = {https://doi.org/10.1145/3548606.3560704},
	doi = {10.1145/3548606.3560704},
	abstract = {Timed-release encryption can encrypt a message to a future time such that it can only be decrypted after that time. Potential applications include sealed bid auctions, scheduled confidential transactions, and digital time capsules. To enable such applications as decentralized smart contracts, we explore how to use timed-release encryption on blockchains. Practical constructions in the literature rely on a trusted server (or servers in a threshold setting), which periodically publishes an epoch-specific decryption key based on a long-term secret. Their main idea is to model time periods or epochs as identities in an identity-based encryption scheme. However, these schemes suffer from a fatal flaw: an epoch's key does not let us decrypt ciphertexts locked to prior epochs. Paterson and Quaglia [SCN'10] address this concern by having encryption specify a range of epochs when decryption is allowed. However, we are left with an efficiency concern: in each epoch, the server(s) must publish (via a smart contract transaction) a decryption key of size logarithmic in the lifetime (total number of epochs). For instance, on Ethereum, for a modest lifetime spanning 2 years of 1-minute long epochs, a server must spend over 6 in gas fees, every minute; this cost multiplies with the number of servers in a threshold setting. We propose a novel timed-release encryption scheme, where a decryption key, while logarithmic in size, allows incremental updates, wherein a short update key (single group element) is sufficient to compute the successive decryption key; our decryption key lets the client decrypt ciphertexts locked to any prior epoch. This leads to significant reduction is gas fees, for instance, only 0.30 in the above setting. Moreover, ciphertexts are also compact (logarithmic in the total lifetime), and encryption and decryption are on the order of few milliseconds. Furthermore, we decentralize the trust among a number of servers, so as to tolerate up to a threshold number of (malicious) corruptions. Our construction is based on bilinear pairing, and adapts ideas from Canetti et al.'s binary tree encryption [Eurocypt 2003] and Naor et al.'s distributed pseudorandom functions [Eurocrypt 1999].},
	booktitle = {Proceedings of the 2022 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Baird, Leemon and Mukherjee, Pratyay and Sinha, Rohit},
	year = {2022},
	note = {event-place: Los Angeles, CA, USA},
	keywords = {blockchain, identity-based encryption, timed-release encryption},
	pages = {235--248},
}

@inproceedings{park_formal_2018,
	address = {New York, NY, USA},
	series = {{ESEC}/{FSE} 2018},
	title = {A {Formal} {Verification} {Tool} for {Ethereum} {VM} {Bytecode}},
	isbn = {978-1-4503-5573-5},
	url = {https://doi.org/10.1145/3236024.3264591},
	doi = {10.1145/3236024.3264591},
	abstract = {In this paper, we present a formal verification tool for the Ethereum Virtual Machine (EVM) bytecode. To precisely reason about all possible behaviors of the EVM bytecode, we adopted KEVM, a complete formal semantics of the EVM, and instantiated the K-framework's reachability logic theorem prover to generate a correct-by-construction deductive verifier for the EVM. We further optimized the verifier by introducing EVM-specific abstractions and lemmas to improve its scalability. Our EVM verifier has been used to verify various high-profile smart contracts including the ERC20 token, Ethereum Casper, and DappHub MakerDAO contracts.},
	booktitle = {Proceedings of the 2018 26th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Park, Daejun and Zhang, Yi and Saxena, Manasvi and Daian, Philip and Roşu, Grigore},
	year = {2018},
	note = {event-place: Lake Buena Vista, FL, USA},
	keywords = {Ethereum, smart contracts, formal verification, K framework},
	pages = {912--915},
}

@inproceedings{zhang_catering_2019,
	address = {New York, NY, USA},
	series = {{IECC} '19},
	title = {Catering {System} {Design} of {Smart} {Park} {Based} on {Blockchain} {Technology}},
	isbn = {978-1-4503-7177-3},
	url = {https://doi.org/10.1145/3343147.3343166},
	doi = {10.1145/3343147.3343166},
	abstract = {Smart Park becomes the main development direction of new-type industrial park. For the operation target of efficient, transparent and intelligent park, blockchain technology is applied to realize tamper-proof, traceability and high security. In this paper, the characteristics of blockchain type are analyzed, and consortium blockchain is proposed to construct the Smart Park System. Taking the catering system of Smart Park as an example, this paper explores the application of blockchain technology in the practical scene of Smart Park, analyzes the blockchain-based catering system process model and key technologies in detail, and designs the implementation method of smart contract.},
	booktitle = {Proceedings of the 1st {International} {Electronics} {Communication} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Jing and Zeng, Junfang and Du, Huaming and An, Yuguo and Zhao, Jian},
	year = {2019},
	note = {event-place: Okinawa, Japan},
	keywords = {blockchain, smart contract, catering system, Smart Park},
	pages = {111--117},
}

@inproceedings{zhang_paralysis_2019,
	address = {New York, NY, USA},
	series = {{AFT} '19},
	title = {Paralysis {Proofs}: {Secure} {Dynamic} {Access} {Structures} for {Cryptocurrency} {Custody} and {More}},
	isbn = {978-1-4503-6732-5},
	url = {https://doi.org/10.1145/3318041.3355459},
	doi = {10.1145/3318041.3355459},
	abstract = {The growing adoption of digital assets—including but not limited to cryptocurrencies, tokens, and even identities—calls for secure and robust digital assets custody. A common way to distribute the ownership of a digital asset is (M, N)-threshold access structures. However, traditional access structures leave users with a painful choice. Setting M = N seems attractive as it offers maximum resistance to share compromise, but it also causes maximum brittleness: A single lost share renders the asset permanently frozen, inducing paralysis. Lowering M improves availability, but degrades security.In this paper, we introduce techniques that address this impasse by making general cryptographic access structures dynamic. The core idea is what we call Paralysis Proofs, evidence that players or shares are provably unavailable. Using Paralysis Proofs, we show how to construct a Dynamic Access Structure System (DASS), which can securely and flexibly update target access structures without a trusted third party. We present DASS constructions that combine a trust anchor (a trusted execution environment or smart contract) with a censorship-resistant channel in the form of a blockchain. We offer a formal framework for specifying DASS policies, and show how to achieve critical security and usability properties (safety, liveness, and paralysis-freeness) in a DASS.To illustrate the wide range of applications, we present three use cases of DASSes for improving digital asset custody: a multi-signature scheme that can "downgrade" the threshold should players become unavailable; a hybrid scheme where the centralized custodian can't refuse service; and a smart-contract-based scheme that supports recovery from unexpected bugs.},
	booktitle = {Proceedings of the 1st {ACM} {Conference} on {Advances} in {Financial} {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Fan and Daian, Philip and Bentov, Iddo and Miers, Ian and Juels, Ari},
	year = {2019},
	note = {event-place: Zurich, Switzerland},
	keywords = {Blockchain, Access control, Digital Asset Custody, Trusted hardware, Wallet},
	pages = {1--15},
}

@inproceedings{wang_computational_2022,
	address = {New York, NY, USA},
	series = {{ICCAI} '22},
	title = {A {Computational} {Trust} {Model} {Based} on {Hyperledger} {Fabric} {Blockchain}},
	isbn = {978-1-4503-9611-0},
	url = {https://doi.org/10.1145/3532213.3532239},
	doi = {10.1145/3532213.3532239},
	abstract = {The core component of the blockchain is smart contracts, which are the basis for connecting countless nodes and executing transactions. In smart contracts, trust often replaces trust in the form of proof of workload, proof of identity, proof of authorization, etc. Therefore, in the transaction process of the core chain, the node usually sees a concept of quantity, and does not know the change course of the agent's trust, so that it cannot fully grasp the dynamic process of the agent and the change of the trust evaluation value. The researches of computational trust has deeply affected the global economic and social development, and have been widely used in some large platforms such as ICAO PKD trust platform, EU's eIDAS platform, US FICAM system and so on. The current solution is a combination of limited mathematical models and assumptions that are far from the operational level. Hyperledger has superior performance in data access, invocation, operability, tamperability, traceability and other aspects, and is more suitable for the study of computational trust models. This study introduces the hyperledger technology to construct a computational trust model, and the main factors affecting the computational trust model are analyzed by using the Hyperledger Fabric technology, which is as the form of one to one to correspond to each node in the hyperledger, and realizes the trust transmission of the node, by sorting each node in the consensus chain, and passes. The interface technology realizes the docking between the model and the Hyperledger Fabric system. And then this paper analyzes the composition system of the computational trust model based on Hyperledger Fabric.},
	booktitle = {Proceedings of the 8th {International} {Conference} on {Computing} and {Artificial} {Intelligence}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Qingnian and He, Xinyi and Wu, Li and Zeng, Yanfei},
	year = {2022},
	note = {event-place: Tianjin, China},
	keywords = {Hyperledger Fabric, Application, Computational Trust},
	pages = {172--180},
}

@inproceedings{tripathy_beyond_2021,
	address = {New York, NY, USA},
	series = {{BSCI} '21},
	title = {Beyond {Uber} and {Lyft}: {A} {Decentralized} {Cab} {Consortium} over {Blockchains}},
	isbn = {978-1-4503-8400-1},
	url = {https://doi.org/10.1145/3457337.3457847},
	doi = {10.1145/3457337.3457847},
	abstract = {Car sharing facilitates car owners and renters to share and use their cars conveniently. The popular car-sharing systems like Car2Go or Zipcar provide such facilities; however, they work line an intermediary or broker and thus pose various security and privacy threats. This paper proposes an alternate car-sharing model by constructing a decentralized cab consortium where the car owners and the renters can directly interact and share the car based on certain predefined agreements. We utilize the concept of smart contracts on top of a blockchain platform to realize such a system that provides a secured, tampered-proof, fair, and transparent interface for car sharing. We have implemented the proposed platform over an Ethereum-based environment and show that its runtime cost and performance are within a considerable margin.},
	booktitle = {Proceedings of the 3rd {ACM} {International} {Symposium} on {Blockchain} and {Secure} {Critical} {Infrastructure}},
	publisher = {Association for Computing Machinery},
	author = {Tripathy, Somanath and Aggarwal, Mayank and Chakraborty, Sandip},
	year = {2021},
	note = {event-place: Virtual Event, Hong Kong},
	keywords = {smart contract, ethereum, security, car sharing},
	pages = {97--102},
}

@inproceedings{liu_government_2021,
	address = {New York, NY, USA},
	series = {{ICBCT} '21},
	title = {Government {Data} {Sharing} {Based} on {Blockchain}},
	isbn = {978-1-4503-8962-4},
	url = {https://doi.org/10.1145/3460537.3460562},
	doi = {10.1145/3460537.3460562},
	abstract = {With the development of smart city, the cooperation between government sectors is becoming more and more frequent, breaking the information island and big data sharing has become an inevitable trend. The traditional way of government data sharing is mainly based on one unified data center, which has high construction cost and maintenance cost, and fails to fully consider the sectoral interests, authority, security and traceability, so there are still many barriers in government data sharing. Taking advantage of the features of blockchain technology, such as distributed ledger, smart contract, data trust and traceability, this paper proposes an application model of government data sharing based on blockchain, which uses a unified data sharing model and autonomous authority management to provide efficient and safe bus service for distributed government big data sharing.},
	booktitle = {2021 {The} 3rd {International} {Conference} on {Blockchain} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Liu, Yu and Zeng, Junfang},
	year = {2021},
	note = {event-place: Shanghai, China},
	keywords = {Authority management, Bus service, City brain, Data sharing model},
	pages = {123--128},
}

@inproceedings{liu_research_2021,
	address = {New York, NY, USA},
	series = {{ICAIIS} 2021},
	title = {Research on {University} {Book} {Sharing} {Cloud} {Platform} {Based} on {Blockchain}},
	isbn = {978-1-4503-9020-0},
	url = {https://doi.org/10.1145/3469213.3470706},
	doi = {10.1145/3469213.3470706},
	abstract = {Through the deep integration of high-tech blockchain, cloud computing and book management technology, a book sharing service platform is designed in this paper by giving full play to the characteristics of blockchain (such as decentralization and non-tampering) and the characteristics of cloud computing (such as virtualization, expandability and configurability). Firstly, it expounded the technical characteristics and combination method of blockchain and cloud computing; Secondly, it designed the logical structure of the platform; Thirdly, it proposed an improved DPoS consensus mechanism algorithm and the specific content of smart contract design. This platform has many advantages, such as breaking down geographical barriers, connecting the book borrowing services among universities, realizing the cross-regional and cross-platform sharing of paper books, solving the problems of repeated construction and poor sharing of university library materials, saving the cumulative construction of university library management cost and improving the service efficiency of books.},
	booktitle = {2021 2nd {International} {Conference} on {Artificial} {Intelligence} and {Information} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Liu, Xiaogang},
	year = {2021},
	note = {event-place: Chongqing, China},
	keywords = {Blockchain, book, cloud computing, platform, share},
}

@inproceedings{wang_poster_2022,
	address = {New York, NY, USA},
	series = {{CCS} '22},
	title = {Poster: {Enabling} {Cost}-{Effective} {Blockchain} {Applications} via {Workload}-{Adaptive} {Transaction} {Execution}},
	isbn = {978-1-4503-9450-5},
	url = {https://doi.org/10.1145/3548606.3563505},
	doi = {10.1145/3548606.3563505},
	abstract = {As transaction fees skyrocket today, blockchains become increasingly expensive, hurting their adoption in broader applications. This work tackles the saving of transaction fees for economic blockchain applications. The key insight is that other than the existing "default” mode to execute application logic fully on-chain, i.e., in smart contracts, and in fine granularity, i.e., user request per transaction, there are alternative execution modes with advantages in cost-effectiveness. On Ethereum, we propose a holistic middleware platform supporting flexible and secure transaction executions, including off-chain states and batching of user requests. Furthermore, we propose control-plane schemes to adapt the execution mode to the current workload for optimal runtime cost. We present a case study on the institutional accounts (e.g., coinbase.com) intensively sending Ether on Ethereum blockchains. By collecting real-life transactions, we construct workload benchmarks and show that our work saves 18\%sim 47\%18\%-47\% per invocation than the default baseline while introducing 1.81\%sim 16.59\%1.81\%-16.59\% blocks delay.},
	booktitle = {Proceedings of the 2022 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Yibo and Tang, Yuzhe},
	year = {2022},
	note = {event-place: Los Angeles, CA, USA},
	keywords = {blockchain, dapp, cost optimization, workload},
	pages = {3483--3485},
}

@inproceedings{krenn_single-use_2021,
	address = {New York, NY, USA},
	series = {{ARES} 21},
	title = {Single-{Use} {Delegatable} {Signatures} {Based} on {Smart} {Contracts}},
	isbn = {978-1-4503-9051-4},
	url = {https://doi.org/10.1145/3465481.3469192},
	doi = {10.1145/3465481.3469192},
	abstract = {Delegation of cryptographic signing rights has found many application in the literature and the real world. However, despite very advanced functionalities and specific use cases, existing solutions share the natural limitation that the number of usages of these signing rights cannot be efficiently limited, but users can at most be disincentivized to abuse their rights. In this paper, we suggest a solution to this problem based on blockchains. We let a user define a smart contract defining delegated signing rights, which needs to be triggered to successfully sign a message. By leveraging the immutability of the blockchain, our construction can now guarantee that a user-defined threshold of signature invocations cannot be exceeded, thereby circumventing the need for dedicated hardware or similar assistance in existing constructions for one-time programs. We discuss different constructions supporting different features, and provide concrete implementations in the Solidity language of the Ethereum blockchain, proving the real-world efficiency and feasibility of our construction.},
	booktitle = {Proceedings of the 16th {International} {Conference} on {Availability}, {Reliability} and {Security}},
	publisher = {Association for Computing Machinery},
	author = {Krenn, Stephan and Lorünser, Thomas},
	year = {2021},
	note = {event-place: Vienna, Austria},
	keywords = {smart contracts, Delegatable signatures, one-time programs},
}

@inproceedings{yu_design_2022,
	address = {New York, NY, USA},
	series = {{BDE} '22},
	title = {Design and {Implementation} of a {Blockchain}-{Based} {Road} {Damage} {Approval} {System}},
	isbn = {978-1-4503-9563-2},
	url = {https://doi.org/10.1145/3538950.3538963},
	doi = {10.1145/3538950.3538963},
	abstract = {In the traditional centralised e-government approval system, the databases of different government departments are independent of each other, with varying degrees of construction, and the fragmentation of information is relatively serious, making the approval of government data inefficient and difficult to share. The emergence of blockchain provides a new idea to solve the difficulties of sharing and managing government data. Based on the characteristics of blockchain such as non-tamperability and traceability, the article adopts FISCO BCOS, a federated chain whose participating members' identities are audited by the system, as the underlying architecture, and conducts research around the road damage approval process, designing, implementing and verifying a blockchain technology-based road damage approval model, as well as designing the corresponding smart contract, so as to complete efficient government approval and secure data sharing. The article concludes with qualitative and quantitative testing of the approval system, demonstrating that the system designed is usable, easy to use and secure.},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Big} {Data} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Yu, Shoujian and Zhang, Ting and Huang, Xiaoxiao and Xia, Xiaoling},
	year = {2022},
	note = {event-place: Beijing, China},
	keywords = {blockchain, smart contracts, approval, Petri net},
	pages = {94--103},
}

@inproceedings{dziembowski_general_2018,
	address = {New York, NY, USA},
	series = {{CCS} '18},
	title = {General {State} {Channel} {Networks}},
	isbn = {978-1-4503-5693-0},
	url = {https://doi.org/10.1145/3243734.3243856},
	doi = {10.1145/3243734.3243856},
	abstract = {One of the fundamental challenges that hinder further adaption of decentralized cryptocurrencies is scalability. Because current cryptocurrencies require that all transactions are processed and stored on a distributed ledger – the so-called blockchain – transaction throughput is inherently limited. An important proposal to significantly improve scalability are off-chain protocols, where the massive amount of transactions is executed without requiring the costly interaction with the blockchain. Examples of off-chain protocols include payment channels and networks, which are currently deployed by popular cryptocurrencies such as Bitcoin and Ethereum. A further extension of payment networks envisioned for cryptocurrencies are so-called state channel networks. In contrast to payment networks that only support off-chain payments between users, state channel networks allow execution of arbitrary complex smart contracts. The main contribution of this work is to give the first full specification for general state channel networks. Moreover, we provide formal security definitions and prove the security of our construction against powerful adversaries. An additional benefit of our construction is the use of channel virtualization, which further reduces latency and costs in complex channel networks.},
	booktitle = {Proceedings of the 2018 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Dziembowski, Stefan and Faust, Sebastian and Hostáková, Kristina},
	year = {2018},
	note = {event-place: Toronto, Canada},
	keywords = {blockchain protocols, provable secure protocols, state channel networs, virtualization},
	pages = {949--966},
}

@inproceedings{gorbunov_pointproofs_2020,
	address = {New York, NY, USA},
	series = {{CCS} '20},
	title = {Pointproofs: {Aggregating} {Proofs} for {Multiple} {Vector} {Commitments}},
	isbn = {978-1-4503-7089-9},
	url = {https://doi.org/10.1145/3372297.3417244},
	doi = {10.1145/3372297.3417244},
	abstract = {Vector commitments enable a user to commit to a sequence of values and provably reveal one or many values at specific posi- tions at a later time. In this work, we construct Pointproofs? a new vector commitment scheme that supports non-interactive aggregation of proofs across multiple commitments. Our construction enables any third party to aggregate a collection of proofs with respect to different, independently computed commitments into a single proof represented by an elliptic curve point of 48-bytes. In addition, our scheme is hiding: a commitment and proofs for some values reveal no information about the remaining values. We build Pointproofs and demonstrate how to apply them to blockchain smart contracts. In our example application, Pointproofs reduce bandwidth overheads for propagating a block of transactions by at least 60\% compared to prior state- of-art vector commitments. Pointproofs are also efficient: on a single-thread, it takes 0.08 seconds to generate a proof for 8 values with respect to one commitment, 0.25 seconds to aggregate 4000 such proofs across multiple commitments into one proof, and 23 seconds (0.7 ms per value proven) to verify the aggregated proof.},
	booktitle = {Proceedings of the 2020 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {Association for Computing Machinery},
	author = {Gorbunov, Sergey and Reyzin, Leonid and Wee, Hoeteck and Zhang, Zhenfei},
	year = {2020},
	note = {event-place: Virtual Event, USA},
	keywords = {blockchain, smart contract, pairing based cryptography, pointproofs, vector commitment},
	pages = {2007--2023},
}

@article{drakopoulos_report_2023,
	title = {Report on the 2nd {International} {Workshop} on {Transforms} in {Behavioral} and {Affective} {Computing} ({THECOG} 2022) at {CIKM} 2022},
	volume = {56},
	issn = {0163-5840},
	url = {https://doi.org/10.1145/3582900.3582922},
	doi = {10.1145/3582900.3582922},
	abstract = {Human decision making is central in many functions across a broad spectrum of fields including marketing, investments and smart contracts, digital health, political campaigns, logistics, and strategic management to name only a few. Computational behavioral science, the focus of the second consecutive iteration of the international workshop on transforms in behavioral and affective computing (THECOG) which was held in conjunction with CIKM 2022, not only studies the various psychological, cultural, and social factors contributing to decision making besides reasoning, but it also seeks to construct robust, scalable, and efficient computational models imitating or extending decision making processes. This year the keynote speech focused on affective robotics and their expected advantages in substantially improving the quality of human life. Moreover, the accepted papers had a considerable topical variety covering among others smart cities, speech emotion recognition, deepfake discovery, and how smart coupons may influence online consumer behavior. THECOG 2022 for a second continuous year was a central meeting point where new results were presented.Date: 21 October, 2022.Website: https://www.cikm2022.org/workshops.},
	number = {2},
	journal = {SIGIR Forum},
	author = {Drakopoulos, Georgios and Kafeza, Eleanna},
	month = jan,
	year = {2023},
	note = {Place: New York, NY, USA
Publisher: Association for Computing Machinery},
}

@inproceedings{udokwu_designing_2021-1,
	address = {New York, NY, USA},
	series = {{ASSE} '21},
	title = {Designing a {Collaborative} {Construction}-{Project} {Platform} on {Blockchain} {Technology} for {Transparency}, {Traceability}, and {Information} {Symmetry}},
	isbn = {978-1-4503-8908-2},
	url = {https://doi.org/10.1145/3456126.3456134},
	doi = {10.1145/3456126.3456134},
	abstract = {The construction industry is a \$6 trillion industry worldwide with a prediction to grow towards \$10,3 trillion by 2023 and constitutes an essential part of the global economy. Nevertheless, the management of the construction effort is still very manual. The construction process from design, to sourcing of material, contract management, and so on, is a convoluted and intransparent process filled with risks the collaborating parties are exposed to. A need exists for management platforms that streamline and automate collaborative construction processes, establish transparency, traceability, and information symmetry between business parties. This paper presents the Construction Project Management (CoPM) platform that is based on blockchain- and smart-contract technologies for enabling peer-to-peer collaboration between construction parties that enhances the flow of information for reducing cost- and time expenditures while improving the quality of service. The CoPM system is based on diligent up-front requirement studies from which we derive a coherent system architecture and set of cooperation protocols. Thereby, the CoPM system overcomes the currently existing fractured value propositions for construction-management systems.CCS Concepts •Software and its engineering•Software creation and management•Designing software},
	booktitle = {2021 2nd {Asia} {Service} {Sciences} and {Software} {Engineering} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Udokwu, Chibuzor and Norta, Alexander and Wenna, Christoph},
	year = {2021},
	note = {event-place: Macau, Macao},
	keywords = {blockchain, smart contract, business processes, collaboration, Construction, data logistics, inter-organisational, project management},
	pages = {1--9},
}

@article{liang_decentralized_2022,
	title = {Decentralized {Crowdsourcing} for {Human} {Intelligence} {Tasks} with {Efficient} {On}-{Chain} {Cost}},
	volume = {15},
	issn = {2150-8097},
	url = {https://doi.org/10.14778/3538598.3538609},
	doi = {10.14778/3538598.3538609},
	abstract = {Crowdsourcing for Human Intelligence Tasks (HIT) has been widely used to crowdsource human knowledge, such as image annotation for machine learning. We use a public blockchain to play the role of traditional centralized HIT systems, such that the blockchain deals with cryptocurrency payments and acts as a trustworthy judge to resolve disputes between a worker and a requester in a decentralized setting, preventing false-reporting and free-riding. Our approach neither uses expensive cryptographic tools, such as zero-knowledge proofs, nor sends the worker's answers to the blockchain. Compared with prior works, our approach significantly reduces on-chain cost: it only requires O(1) on-chain storage and O(logN) smart contract computation, where N is the question number of a HIT. Additionally, our approach uses known answers or gold standards to determine the worker's answer quality. To motivate the requester to use honest known answers, the requester cannot learn the worker's answers if the answer quality does not meet the requirement. We further provide formal security definitions for our decentralized HIT and prove security of our construction.},
	number = {9},
	journal = {Proc. VLDB Endow.},
	author = {Liang, Yihuai and Li, Yan and Shin, Byeong-Seok},
	month = may,
	year = {2022},
	note = {Publisher: VLDB Endowment},
	pages = {1875--1888},
}

@inproceedings{du_seed_2022,
	address = {New York, NY, USA},
	series = {{SIGCSE} 2022},
	title = {{SEED} {Internet} {Emulator}: {An} {Open}-{Source} {Tool} for {Network} and {Cybersecurity} {Courses}},
	isbn = {978-1-4503-9071-2},
	url = {https://doi.org/10.1145/3478432.3499260},
	doi = {10.1145/3478432.3499260},
	abstract = {In cybersecurity courses, it is quite challenging to do hands-on activities that involve many components of the Internet, such as bringing down the Internet, attacking a blockchain, etc. To solve this problem, we have developed an open-source Internet Emulator, which is a Python library, consisting of the classes for each essential element of the Internet, including autonomous system, network, host, router, BGP router, Internet exchange, etc. It also includes the classes for a variety of services, including Web, DNS, Botnet, Darknet, Blockchain, and more are being developed. Using these classes, users can construct a mini-Internet to emulate the real-world Internet. Although it is small, it has all the essential elements of the real Internet. The construction is compiled into Docker container files, and the emulation is executed by Docker on a single machine or on multiple cloud machines. With this Internet Emulator, we can develop hands-on activities for cybersecurity courses, including BGP prefix hijacking, attacks on smart contract, using Darknet to achieve anonymity, launching Botnet and ransomware attacks, etc. While the emulator was initially developed for cybersecurity courses, it can also be used for network courses, for students to learn how the Internet technologies work, such as routing, BGP, IP Anycast, DNS, CDN, and many other interesting technologies.},
	booktitle = {Proceedings of the 53rd {ACM} {Technical} {Symposium} on {Computer} {Science} {Education} {V}. 2},
	publisher = {Association for Computing Machinery},
	author = {Du, Wenliang},
	year = {2022},
	note = {event-place: Providence, RI, USA},
	keywords = {cybersecurity, internet emulation, networking},
	pages = {1180},
}

@inproceedings{xu_constructing_2018,
	address = {New York, NY, USA},
	series = {{MobiQuitous} '18},
	title = {Constructing {Trustworthy} and {Safe} {Communities} on a {Blockchain}-{Enabled} {Social} {Credits} {System}},
	isbn = {978-1-4503-6093-7},
	url = {https://doi.org/10.1145/3286978.3287022},
	doi = {10.1145/3286978.3287022},
	abstract = {The emergence of big data and Artificial Intelligence (AI) technology is reshaping the world. While the technological revolution improves the quality of our life, new concerns are triggered. The superhuman capability enables AI to outperform human workers in many data-and/or computing-intensive tasks. Also, digital superpowers are showing arrogance towards individuals, which erodes the trust foundation of the society. In this position paper, we suggest to construct trustworthy and safe communities based on a BLockchain-Enabled Social credits System (BLESS) that rewards the residents who commit in socially beneficial activities. Human being's true value lies in serving other people. The BLESS system is considered as an efficient approach to promote the value and dignity in efforts focused on enhancing our communities and regulating business and private behaviors. The BLESS system leverages the decentralized architecture of the blockchain network, which not only allows grassroots individuals to participate rating process of a social credit system (SCS), but also provides tamper proof of transaction data in the trustless network environment. The anonymity in blockchain records also protects individuals from being targeted in the fight against powerful enterprises. Smart contract enabled authentication and authorization strategy prevents any unauthorized entity from accessing the credit system. The BLESS scheme is promising to offer a secure, transparent and decentralized SCS.},
	booktitle = {Proceedings of the 15th {EAI} {International} {Conference} on {Mobile} and {Ubiquitous} {Systems}: {Computing}, {Networking} and {Services}},
	publisher = {Association for Computing Machinery},
	author = {Xu, Ronghua and Lin, Xuheng and Dong, Qi and Chen, Yu},
	year = {2018},
	note = {event-place: New York, NY, USA},
	keywords = {Blockchain, Smart Contract, Social Credits System, Time Banking},
	pages = {449--453},
}

@inproceedings{he_fmsm_2021,
	address = {New York, NY, USA},
	series = {{ICPP} {Workshops} '21},
	title = {{FMSM}: {A} {Fuzzy} {Multi}-{Keyword} {Search} {Scheme} for {Encrypted} {Cloud} {Data} {Based} on {Multi}-{Chain} {Network}},
	isbn = {978-1-4503-8441-4},
	url = {https://doi.org/10.1145/3458744.3474040},
	doi = {10.1145/3458744.3474040},
	abstract = {Searchable encryption is an efficient and secure solution that can perform search operation in ciphertext on cloud servers. It is widely used by a growing number of businesses and individuals. However, most existing searchable encryption schemes typically overestimate the security level of the cloud server, which is an untrusted and centralized third party in fact. The emergence of blockchain technology solves the trustworthiness problem of the third party with features such as decentralization, verifiability and immutability. The combination of searchable encryption and blockchain technology uses the smart contract instead of the cloud server to execute ciphertext search task, which improves security and efficiency of search significantly. We propose a Fuzzy Multi-keyword Search Scheme for Encrypted Cloud Data based on Multi-chain Network (FMSM). FMSM is a distributed searchable encryption scheme since we adopt a multi-chain architecture. It not only supports fuzzy multi-keyword search and dynamic updates for encrypted cloud data, but also supports parallel processing of data. In FMSM, counting bloom filter and MinHash algorithm are used to construct index vectors and query vectors on the corresponding two chains, besides, the search is done on a third chain. All of these calculation tasks are executed in the way of distributed computing, which makes the index construction and search process more efficient and the sorting results more accurate. The security analysis and performance evaluation show that the FMSM has high security, reliability, search efficiency and accuracy.},
	booktitle = {50th {International} {Conference} on {Parallel} {Processing} {Workshop}},
	publisher = {Association for Computing Machinery},
	author = {He, Heng and Liu, chengyu and Zhou, Xiaohu and Feng, Ke},
	year = {2021},
	note = {event-place: Lemont, IL, USA},
	keywords = {blockchain, fuzzy search, multi-chain, multi-keyword search, Searchable encryption},
}

@inproceedings{ma_emerging_2021-1,
	address = {New York, NY, USA},
	series = {{ICVISP} 2020},
	title = {Emerging {Legal} {Issues} in {Blockchain} for {Construction} {Supply} {Chains}},
	isbn = {978-1-4503-8953-2},
	url = {https://doi.org/10.1145/3448823.3448880},
	doi = {10.1145/3448823.3448880},
	abstract = {A complex web of supply chains is a common feature of construction projects. With the different types of parties involved in a project and the amount of paperwork generated, the supply chain process can be time-consuming, an easy target for fraud and is prone to human errors.Blockchain is an emerging technology that can transform, simplify and make a network of information more secure. In the context of the supply chain, digitalised documents and real-time information can lead to cost-savings in any operation. Its embedded feature of transparency and integrity proves itself to be reliable. In addition, there are two less widely considered advantages that are particularly suitable for applying in the administration and management of the complex web of supply chains in the construction industry. The two additional advantages are dispute avoidance and dispute resolution, which will be discussed in this paper.The use of blockchain in supply chains carries legal issues. This could be a contributing factor to its slower rate of adoption than widely anticipated after the rapid emergence of its first application in the financial system of cryptocurrency, commonly known as Bitcoin. This paper identifies and proposes solutions to three key legal issues arising from the use of blockchain technology in supply chains. They are (a) restricted use of smart contracts to prescribed outcomes only; (b) concerns relating to access and ownership of using a shared blockchain platform; and (c) multi-jurisdiction concerns over where governing laws apply.},
	booktitle = {Proceedings of the 2020 4th {International} {Conference} on {Vision}, {Image} and {Signal} {Processing}},
	publisher = {Association for Computing Machinery},
	author = {Ma, Alan},
	year = {2021},
	note = {event-place: Bangkok, Thailand},
	keywords = {Blockchain, Smart Contract, Construction Supply Chain, Digital Platform, Multi-jurisdiction},
}

@inproceedings{sarker_blockchain-based_2021,
	address = {New York, NY, USA},
	series = {{SAC} '21},
	title = {Blockchain-{Based} {Root} of {Trust} {Management} in {Security} {Credential} {Management} {System} for {Vehicular} {Communications}},
	isbn = {978-1-4503-8104-8},
	url = {https://doi.org/10.1145/3412841.3441905},
	doi = {10.1145/3412841.3441905},
	abstract = {Security Credential Management System (SCMS) provides the Public Key Infrastructure (PKI) for vehicular networking. SCMS builds the state-of-the-art distributed PKI to protect the vehicular networking privacy against an honest-but-curious authority (by the use of multiple PKI authorities) and to decentralize the PKI root of trust (by the Elector-Based Root Management or EBRM, having the distributed electors manage the Root Certificate Authority or RCA). We build on the EBRM architecture and construct a Blockchain-Based Root Management (BBRM) to provide even greater decentralization and security. More specifically, BBRM uses blockchain to i) replace the existing RCA and have the electors directly involved in the root certificate generation, ii) control the elector network membership including elector addition and revocation, and iii) provide greater accountability and transparency on the aforementioned functionalities. We implement BBRM on Hyperledger Fabric using smart contract for system experimentation and analyses. Our experiments show that BBRM is lightweight in processing, efficient in ledger size, and supports a bandwidth of multiple transactions per second. Our results show that the BBRM blockchain is appropriate for the root certificate generation and the elector membership control for EBRM within SCMS, which are significantly smaller in number and occurrences than the SCMS outputs of vehicle certificates. We also experiment to analyze how the BBRM distributed consensus protocol parameters, such as the number of electors and the number of required votes, affect the overall scheme's performances.},
	booktitle = {Proceedings of the 36th {Annual} {ACM} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Sarker, Arijet and Byun, SangHyun and Fan, Wenjun and Chang, Sang-Yoon},
	year = {2021},
	note = {event-place: Virtual Event, Republic of Korea},
	keywords = {blockchain, PKI, SCMS, vehicular networking},
	pages = {223--231},
}

@inproceedings{he_construction_2022,
	address = {New York, NY, USA},
	series = {{CSAE} '22},
	title = {Construction of {Cross}-{Border} {Food} {Supply} {Chain} {Information} {Sharing} {Platform} {Based} on {Blockchain} {Under} {COVID}-19},
	isbn = {978-1-4503-9600-4},
	url = {https://doi.org/10.1145/3565387.3565414},
	doi = {10.1145/3565387.3565414},
	abstract = {The pandemic of the COVID-19 has caused many problems in the cross-border food supply chain during transportation, such as food safety is difficult to guarantee due to the infection of people or environmental epidemics, information asymmetry and difficult to share in the food supply chain, and food related information is tampered with and difficult to trace during transportation. The emergence of blockchain technology has brought new solutions to the above problems. Based on the relevant functions and characteristics of the blockchain, this paper constructs a cross-border food supply chain information sharing platform under the blockchain technology, such as using smart contracts to monitor the epidemic security risk in the transportation process of the supply chain, using hash functions and tamper proof features to deal with food information fraud, and using the distributed and decentralized characteristics of the blockchain to solve the sharing problem of information asymmetry; The time stamp in the blockchain is used to trace the information of each link node of food and the initial node for accountability. In this paper, the construction process of the platform is described in detail from the perspective of model, function and subject, and the specific process of the platform is described in detail from the perspective of information storage, information sharing and information traceability. In this paper, the emerging blockchain technology is applied to all links of the food supply chain, and considering the current epidemic problems, the platform can bring new ideas to solve the problems of cross-border food transportation during the epidemic, and has certain theoretical value.},
	booktitle = {Proceedings of the 6th {International} {Conference} on {Computer} {Science} and {Application} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {He, Zhuoli},
	year = {2022},
	note = {event-place: Virtual Event, China},
	keywords = {blockchain technology, COVID-19, food supply chain},
}
