
@article{xu_blockchain_2022,
	title = {Blockchain in the {AECO} industry: {Current} status, key topics, and future research agenda},
	volume = {134},
	issn = {0926-5805},
	url = {https://www.sciencedirect.com/science/article/pii/S0926580521005525},
	doi = {https://doi.org/10.1016/j.autcon.2021.104101},
	abstract = {Blockchain has attracted great attention in the architecture, engineering, construction, and operation (AECO) industry. To capture its research trends, this study conducted a comprehensive review of blockchain development in the industry using a mixed approach of bibliometrics and content analyses. Ninety-four papers were filtered from the Scopus and Web of Science databases for this review. Bibliometric analysis revealed annual publication trends, journal distributions, country distributions, high-yielding authors, author cooperation networks, and keyword co-occurrence networks, whereas content analysis identified five key topics of contract management, supply chain management, information management, stakeholder management, and the integration of blockchain with other technologies. Research gaps and future research directions are articulated and explained within the research framework. This paper contributes to the body of knowledge by synthesizing the current state and development areas of blockchain research, which would promote the strategic adoption and use of blockchain to a greater extent in the AECO industry.},
	journal = {Automation in Construction},
	author = {Xu, Yongshun and Chong, Heap-Yih and Chi, Ming},
	year = {2022},
	keywords = {AECO industry, Bibliometric analysis, Blockchain, Comprehensive review, Content analysis, Smart contracts},
	pages = {104101},
}

@article{marchesi_abcdeagile_2020,
	title = {{ABCDE}—agile block chain {DApp} engineering},
	volume = {1},
	issn = {2096-7209},
	url = {https://www.sciencedirect.com/science/article/pii/S2096720920300026},
	doi = {https://doi.org/10.1016/j.bcra.2020.100002},
	abstract = {Blockchain software development is becoming more and more important for any modern software developer and IT startup. Nonetheless, blockchain software production still lacks a disciplined, organized and mature development process, as demonstrated by the many and (in)famous failures and frauds occurred in recent years. In this paper we present ABCDE, a complete method addressing blockchain software development. The method considers the software integration among the blockchain components—smart contracts, libraries, data structures—and the out-of-chain components, such as web or mobile applications, which all together constitute a complete DApp system. We advocate for ABCDE the use of agile practices, because these are suited to develop systems whose requirements are not completely understood since the beginning, or tend to change, as it is the case of most blockchain-based applications. ABCDE is based on Scrum, and is therefore iterative and incremental. From Scrum, we kept the requirement gathering with user stories, the iterative-incremental approach, the key roles, and the meetings. The main difference with Scrum is the separation of development activities in two flows—one for smart contracts and the other for out-of-chain software interacting with the blockchain—each performed iteratively, with integration activities every 2–3 iterations. ABCDE makes explicit the activities that must be performed to design, develop, test and integrate smart contracts and out-of-chain software, and documents the smart contracts using formal diagrams to help development, security assessment, and maintenance. A diagram derived from UML class diagram helps to effectively model the data structure of smart contracts, whereas the exchange of messages between the entities of the system is modeled using a modified UML sequence diagram. The proposed method has also specific activities for security assessment and gas optimization, through systematic use of patterns and checklists. ABCDE focuses on Ethereum blockchain and its Solidity language, but preserves generality and with proper modifications might be applied to any blockchain software project. ABCDE method is described in detail, and an example is given to show how to concretely implement the various development steps.},
	number = {1},
	journal = {Blockchain: Research and Applications},
	author = {Marchesi, Lodovica and Marchesi, Michele and Tonelli, Roberto},
	year = {2020},
	keywords = {Blockchain, Blockchain-oriented software engineering, DApp design, Smart contracts, UML},
	pages = {100002},
}

@incollection{krishnan_chapter_2020,
	title = {Chapter 13 - {Cryptocurrency} {Mechanisms} for {Blockchains}: {Models}, {Characteristics}, {Challenges}, and {Applications}},
	isbn = {978-0-12-819816-2},
	url = {https://www.sciencedirect.com/science/article/pii/B9780128198162000137},
	abstract = {In recent years, blockchains have drawn considerable attention from engineers, researchers, and institutions alike; and their implementation has affected fields like e-healthcare, Internet of Things, smart contracts, e-finance, logistics, and so forth. The focus of this chapter shall be the cryptocurrency mechanisms for blockchains. Cryptocurrencies are a new form of virtual currency, first introduced to the masses with the creation of bitcoin, developed by Satoshi Nakamoto. They are a more secure and verified form of transaction, which uses cryptographic protocols in a peer-to-peer system generating a distributed ledger. With the growing popularity of blockchains, a large number of cryptocurrencies have been introduced, greatly changing the prospects of blockchains in the domain of finance. Greater attention is now being paid by stakeholders around the world to various mechanisms of using blockchains in cryptocurrencies. In these blockchain systems, all the committed transactions are stored in a list of blocks with several transactional properties including irreversibility, pseudonymous, security, and global scalability. As both permission and permissionless blockchain platforms are being challenged to meet rigorous real-world application requirements, such as immediate transaction finality, low latencies, good scalability, and high-performance, the limitations of existing consensus models are being recognized. To achieve the necessary agreement in a network among distributed processes, consensus mechanisms are used as fault-tolerant mechanisms in blockchains systems. Many consensus models have been designed and new ones are still emerging to combat the limitations of their predecessors. Models like Proof-of-Work, Proof-of-Stake, Proof-of-Elapsed Time, and many others that follow open-ended or closed-ended participation have their own advantages and limitations. The consensus mechanism maintains the sanctity of the data and the key properties of the blockchain; the security of the consensus model is perhaps an important measure of the quality of the model. Poor choice of consensus mechanism could lead to blockchain fork, consensus failure, dominance, and poor performance thereby compromising the data recorded on the blockchain. Despite all these challenges, blockchains show immense potential in improving cryptocurrency by bringing numerous opportunities. This chapter provides a primer on the basics of cryptocurrencies using blockchain technology and discusses the existing narratives about the technology’s potential to facilitate efficient mechanisms for financial transactions among others. The principal disciples of the technology are discussed in great detail while also flagging the potential points of concern and conflict surrounding the technology. It concludes with suggestions for future research.},
	booktitle = {Handbook of {Research} on {Blockchain} {Technology}},
	publisher = {Academic Press},
	author = {Sharma, Deepak Kumar and Pant, Shrid and Sharma, Mehul and Brahmachari, Shikha},
	editor = {Krishnan, Saravanan and Balas, Valentina E. and Julie, E. Golden and Robinson, Y. Harold and Balaji, S. and Kumar, Raghvendra},
	year = {2020},
	doi = {https://doi.org/10.1016/B978-0-12-819816-2.00013-7},
	keywords = {bitcoin, blockchain, consensus, Cryptocurrency, cryptography, hedera hashgraph, tangle, transactions},
	pages = {323--348},
}

@article{vacca_systematic_2021,
	title = {A systematic literature review of blockchain and smart contract development: {Techniques}, tools, and open challenges},
	volume = {174},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121220302818},
	doi = {https://doi.org/10.1016/j.jss.2020.110891},
	abstract = {Blockchain platforms and languages for writing smart contracts are becoming increasingly popular. However, smart contracts and blockchain applications are developed through non-standard software life-cycles, in which, for instance, delivered applications can hardly be updated or bugs resolved by releasing a new version of the software. Therefore, this systematic literature review oriented to software engineering aims at highlighting current problems and possible solutions concerning smart contracts and blockchain applications development. In this paper, we analyze 96 articles (written from 2016 to 2020) presenting solutions to tackle software engineering-specific challenges related to the development, test, and security assessment of blockchain-oriented software. In particular, we review papers (that appeared in international journals and conferences) relating to six specific topics: smart contract testing, smart contract code analysis, smart contract metrics, smart contract security, Dapp performance, and blockchain applications. Beyond the systematic review of the techniques, tools, and approaches that have been proposed in the literature to address the issues posed by the development of blockchain-based software, for each of the six aforementioned topics, we identify open challenges that require further research.},
	journal = {Journal of Systems and Software},
	author = {Vacca, Anna and Sorbo, Andrea Di and Visaggio, Corrado A. and Canfora, Gerardo},
	year = {2021},
	keywords = {Empirical study, Ethereum, Smart contract, Software engineering for blockchain technologies, Software metrics, Software quality},
	pages = {110891},
}

@article{almuharraqi_factors_2022,
	title = {Factors affecting the adoption of smart building projects in the {Kingdom} of {Bahrain}},
	volume = {62},
	issn = {2352-7102},
	url = {https://www.sciencedirect.com/science/article/pii/S2352710222013316},
	doi = {https://doi.org/10.1016/j.jobe.2022.105325},
	abstract = {The construction industry is gradually adopting smart building projects due to the need for sustainable development and superior building performance. This study aimed to examine the characteristics, challenges, and barriers that a Smart Building Project (SBP) would experience during its life cycle in the Kingdom of Bahrain. The challenges encountered in implementing smart building projects in Bahrain were examined for the first time in this study. It is hypothesized that there are no statistically significant differences in the level of response with SBP characteristics and challenges between respondents according to their experience, affiliation, and project type. A questionnaire was distributed to professional engineers and the quantitative data were analyzed using descriptive statistics and Structure Equation Modelling (SEM) to test the research hypotheses. The experience and affiliation did not affect the response level with SBP characteristics and challenges while the project type did with a 95\% confidence level. Overcoming the challenges, enhancing awareness, clarifying purpose objectives, creating standards, and opening a deep discussion about SBP in Bahrain should occur and further improvements to the SBP sector could be achieved in Bahrain by studying digital building twins and blockchain technology for performance-based smart contracts.},
	journal = {Journal of Building Engineering},
	author = {AlMuharraqi, Mohamed and Sweis, Ghaleb and Sweis, Rateb and Sammour, Farouq},
	year = {2022},
	keywords = {Energy, Smart building, Smart building projects, Smart technology, Sustainability},
	pages = {105325},
}

@article{baninemeh_decision_2023,
	title = {A decision model for decentralized autonomous organization platform selection: {Three} industry case studies},
	issn = {2096-7209},
	url = {https://www.sciencedirect.com/science/article/pii/S2096720923000027},
	doi = {https://doi.org/10.1016/j.bcra.2023.100127},
	abstract = {Context Decentralized autonomous organizations are a new form of smart contract based governance. Decentralized autonomous organization platforms, which support the creation of such organizations, are becoming increasingly popular, such as Aragon and Colony. Selecting the best fitting platform is challenging for organizations, as a significant number of decision criteria, such as popularity, developer availability, governance issues, and consistent documentation of such platforms, should be considered. Additionally, decision-makers at the organizations are not experts in every domain, so they must continuously acquire volatile knowledge regarding such platforms. Objective Supporting decision-makers in selecting the right decentralized autonomous organizations by designing an effective decision model is the main objective of this study. We aim to provide more insight into their selection process and reduce time and effort significantly by designing a decision model. Method This study presents a decision model for the decentralized autonomous organization platform selection problem. The decision model captures knowledge regarding such platforms and concepts systematically. The decision model is based on an existing theoretical framework that assists software engineers with a set of Multi-Criteria Decision-Making problems in software production. Results We conducted three industry case studies in the context of three decentralized autonomous organizations to evaluate the effectiveness and efficiency of the decision model in assisting decision-makers. The case study participants declared that the decision model provides significantly more insight into their selection process and reduces time and effort. Conclusion We observe in the empirical evidence from the case studies that decision-makers can make more rational, efficient, and effective decisions with the decision model. Furthermore, the reusable form of captured knowledge regarding Decentralized Autonomous Organization Platforms can be employed by other researchers in their future investigations.},
	journal = {Blockchain: Research and Applications},
	author = {Baninemeh, E. and Farshidi, S. and Jansen, S.},
	year = {2023},
	keywords = {Case study research, Decentralized autonomous organization, Decentralized autonomous organization platform, Decision model, Decision support system, Multi-criteria decision making},
	pages = {100127},
}

@article{gourisetti_blockchain_2021,
	title = {Blockchain smart contract reference framework and program logic architecture for transactive energy systems},
	volume = {304},
	issn = {0306-2619},
	url = {https://www.sciencedirect.com/science/article/pii/S0306261921011831},
	doi = {https://doi.org/10.1016/j.apenergy.2021.117860},
	abstract = {This paper proposes a reference framework for a transactive energy market based on distributed ledger technology such as blockchain. The framework design was based on the engineering requirements of a distribution-scale market, including participant needs, expected market transactions, and the cybersecurity constructs required to support a fair, secure, and efficient market operation. It leverages the existing blockchain attributes to provide clear value propositions that are applicable to transactive energy market applications. Those attributes are evaluated to not only facilitate the energy market mechanisms but also assist with the cybersecurity requirements, such as access control management (including identification, authentication, and authorization); data security and integrity; and resilience management (decentralization, scalability, and performance during faults). The validity of the proposed framework is demonstrated using a real-time, five-minute double-auction market. The results highlight the framework benefits and provide a strong validation of its applicability to blockchain-based transactive energy systems. The proposed design can help to support machine-to-machine transactions that can be directly integrated into complex grid operations, such as automated market bidding and self-sufficient, resilience-capable grids.},
	journal = {Applied Energy},
	author = {Gourisetti, Sri Nikhil Gupta and Sebastian-Cardenas, D. Jonathan and Bhattarai, Bishnu and Wang, Peng and Widergren, Steve and Borkum, Mark and Randall, Alysha},
	year = {2021},
	keywords = {Blockchain, Smart contract, Transactive energy systems},
	pages = {117860},
}

@article{kopke_designing_2023,
	title = {Designing secure business processes for blockchains with {SecBPMN2BC}},
	volume = {141},
	issn = {0167-739X},
	url = {https://www.sciencedirect.com/science/article/pii/S0167739X22003764},
	doi = {https://doi.org/10.1016/j.future.2022.11.013},
	abstract = {Collaborative business processes can be seen as smart contracts, as they are oftentimes adopted to express agreements among different organizations. Indeed, they provide mechanisms to formalize the obligations of each involved party. For instance, collaborative business processes can specify when a certain task should be executed, under which conditions a service should be offered to the other participants, and how physical objects and information should be manipulated. In this setting, to prevent misuse of smart contracts and services and information provided, it is paramount to guarantee by design that security requirements are fulfilled. With the rise in popularity of blockchains, several approaches exploiting the trusted smart contract execution environment offered by this technology to enforce collaborative business processes have been proposed. Yet, the complexity of business processes, security requirements, and blockchain applications calls for an engineering approach that guides the design of secure business processes. Such an approach should both take advantage of the possibilities offered by blockchain technology to enforce some security requirements (e.g., non-repudiation), and take into account the limitations blockchain poses for other security requirements (e.g., confidentiality). However, we are not aware of any existing work that aims at addressing such issues following a similar approach. In this article, we propose SecBPMN2BC: a model-driven approach to designing business processes with security requirements that are meant to be deployed on blockchains. SecBPMN2BC consists of: (i) an extension of BPMN 2.0 that allows designing secure smart contracts; (ii) a set of algorithms and their implementation that check incompatible security requirements and help the design of smart contracts; (iii) a workflow that guides the application of the method. The method has been validated with a survey conducted on security and BPMN experts.},
	journal = {Future Generation Computer Systems},
	author = {Köpke, Julius and Meroni, Giovanni and Salnitri, Mattia},
	year = {2023},
	keywords = {Blockchain, Business processes, Information systems, Model-driven engineering, Security, Smart contracts},
	pages = {382--398},
}

@article{alsalim_secure_2023,
	title = {Secure banking and international trade digitization using blockchain},
	volume = {272},
	issn = {0030-4026},
	url = {https://www.sciencedirect.com/science/article/pii/S0030402622015273},
	doi = {https://doi.org/10.1016/j.ijleo.2022.170269},
	abstract = {Traditional trade processes suffer from a great number of issues about intermediaries, information latency and trust, which, in turn, hinder overall process efficiency. The emerging blockchain technology may have potentials to mitigate those issues by revolutionizing business processes across enterprise borders in various industries. The security of smart contract technology and anti-money-laundering is utilized in tandem to combat the flaws of traditional banking. By decentralizing we can circumvent some of its defects, and achieve autonomous, fast and safe foreign goods trade. The purpose of this paper is to examine the current obstacles in letter of credit and bank transfers related to the imported foreign goods, and suggest a solution using the blockchain technology. Comparative analysis and feasibility study were conducted to identify and validate the prospects, in terms of facilitating process flow and enhancing overall trade performance, of the proposed blockchain-based international trade process model. This study contributes to the conceptual design of a blockchain- and smart-contract based process along with a provision of practical case in business process re-engineering. Further endeavors devoted to blockchain research and application across different sectors are suggested to reach better performance of business process operations.},
	journal = {Optik},
	author = {Alsalim, Mohammed Sabah Hameed and Ucan, Osman Nuri},
	year = {2023},
	keywords = {Balance of payments, Blockchain, Distributed ledger technology, Foreign trade, Letter of credit, Smart contract},
	pages = {170269},
}

@article{hsain_ethereums_2021,
	title = {Ethereum’s {Smart} {Contracts} {Construction} and {Development} using {Model} {Driven} {Engineering} {Technologies}: a {Review}},
	volume = {184},
	issn = {1877-0509},
	url = {https://www.sciencedirect.com/science/article/pii/S1877050921007389},
	doi = {https://doi.org/10.1016/j.procs.2021.03.097},
	abstract = {In the Blockchain context, Smart Contracts are computer programs that run on the Ethereum platform. Benefiting from the properties of Blockchain, SCs development represents a major challenge to developers, as the code is deployed to an immutable system, besides the Ethereum platform is still evolving. This paper highlights how we can exploit model-driven engineering for generating long terms and high productivity smart contracts. It reviews researches on Smart Contracts generation in the Ethereum blockchain from a model-driven perspective. Based on the studied approaches, we defined a comparative framework to outline the advantages and disadvantages of each approach. The result can be used as a basis of tool selection for specific development aspects of SCs.},
	journal = {Procedia Computer Science},
	author = {Hsain, Yassine Ait and Laaz, Naziha and Mbarki, Samir},
	year = {2021},
	keywords = {Blockchain, Business Process Model, Ethereum, Model-Driven Engineering (MDE), Modeling, Notation (BPMN), Smart Contracts (SCs), Unified Modeling Language (UML)},
	pages = {785--790},
	annote = {The 12th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 4th International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops},
}

@article{elghaish_integrated_2020,
	title = {Integrated project delivery with blockchain: {An} automated financial system},
	volume = {114},
	issn = {0926-5805},
	url = {https://www.sciencedirect.com/science/article/pii/S0926580519312142},
	doi = {https://doi.org/10.1016/j.autcon.2020.103182},
	abstract = {Integrated project delivery (IPD) in the architecture, engineering and construction (AEC) industry relies on risk/reward sharing and deferral of parties' profit payments until all project activities are completed. A decentralised, automated and secured financial platform is needed to enable all parties to control and track financial transactions, with no unauthorised changes allowed. The new technology, blockchain, enables data to be recorded, has no network participant with dominant power and manages data using specific functions, in line with smart contracts. The present study is the first to develop a framework proposing blockchain technology utilisation in IPD projects. The framework would enable core project team members to automatically execute all financial transactions, through coding the three main transactions of IPD projects: reimbursed costs, profit and cost saving, as functions of the IPD smart contract. To demonstrate the proposed framework's applicability, a “proof of concept” is developed and validated through an IPD case project. The practicality of the built-up hyperledger network (IBM® Blockchain Cloud Beta 2) and the advantages of the proposed smart contract functions are examined. The user-friendliness of the proposed financial system and its efficiency in automating all transactions are demonstrated. No deficiency is found in the blockchain network components. The study's findings, applied in a favourable external context, would facilitate IPD adoption and use across the AEC industry by providing a workable solution to existing financial barriers. The findings extend the horizon for further research on exploring blockchain's capabilities to solve comparable deficiencies to those affecting the AEC industry.},
	journal = {Automation in Construction},
	author = {Elghaish, Faris and Abrishami, Sepehr and Hosseini, M. Reza},
	year = {2020},
	keywords = {5D BIM, Alliancing, Building Information Modelling (BIM), Distributed ledger technology (DLT), Financial transactions, Hyperledger fabric, Smart contract},
	pages = {103182},
}

@article{lin_bsein_2018,
	title = {{BSeIn}: {A} blockchain-based secure mutual authentication with fine-grained access control system for industry 4.0},
	volume = {116},
	issn = {1084-8045},
	url = {https://www.sciencedirect.com/science/article/pii/S1084804518301619},
	doi = {https://doi.org/10.1016/j.jnca.2018.05.005},
	abstract = {To be prepared for the ‘Industry 4.0’-era, we propose a hierarchical framework comprising four tangible layers, which is designed to vertically integrate inter-organizational value networks, engineering value chain, manufacturing factories, etc. The conceptual framework allows us to efficiently implement a flexible and reconfigurable smart factory. However, we need to consider security inherent in existing (stand-alone) devices and networks as well as those that may arise in such integrations. Especially the existing solutions are insufficient to address these fundamental security concerns. Thus, we present a blockchain-based system for secure mutual authentication, BSeIn, to enforce fine-grained access control polices. The proposed system (with integrated attribute signature, multi-receivers encryption and message authentication code) is designed to provide privacy and security guarantees such as anonymous authentication, auditability, and confidentiality. BSeIn also scales well due to the utilization of smart contract. We then evaluate the security and performance of BSeIn. For example, findings from the performance evaluation demonstrate that Initialization/Request Issuance/Chain Transaction/State Delivery/Permission Update phase only cost 12.123/4.810/6.978/0.013/2.559s, respectively.},
	journal = {Journal of Network and Computer Applications},
	author = {Lin, Chao and He, Debiao and Huang, Xinyi and Choo, Kim-Kwang Raymond and Vasilakos, Athanasios V.},
	year = {2018},
	keywords = {Access control, Authentication, Blockchain, Blockchain-based secure mutual authentication, Industry 4.0, Smart contract, Smart factory},
	pages = {42--52},
}

@article{dixit_towards_2022,
	title = {Towards user-centered and legally relevant smart-contract development: {A} systematic literature review},
	volume = {26},
	issn = {2452-414X},
	url = {https://www.sciencedirect.com/science/article/pii/S2452414X21001072},
	doi = {https://doi.org/10.1016/j.jii.2021.100314},
	abstract = {Smart contracts (SC) run on blockchain technology (BCT) to implement agreements between several parties. As BCT grows, organizations aim to automate their processes and engage in business collaborations using SCs. The translation of contract semantics into SC language semantics is difficult due to ambiguous contractual interpretation by the several parties and the developers. Also, an SC language itself misses the language constructs needed for semantically expressing collaboration terms. This leads to SC coding errors that result in contractual conflicts over transactions during the performance of SCs and thus, novel SC solutions incur high development and maintenance costs. Various model-based and no/low code development approaches address this issue by enabling higher abstractions in SC development. Still, the question remains unanswered how contractual parties, i.e., end-users with non-IT skills, manage to develop legally relevant SCs with ease. This study aims to (1) identify and categorize the state of the art of SC automation models, in terms of their technical features, and their legal significance, and to (2) identify new research opportunities. The review has been conducted as a systematic literature review (SLR) that follows the guidelines proposed by Kitchenham for performing SLRs in software-engineering. As a result of the implementation of the review protocol, 1367 papers are collected, and 33 of them are selected for extraction and analysis. The contributions of this article are threefold: (1) 10 different SC automation models/frameworks are identified and classified according to their technical and implementation features; (2) 11 different legal contract parameters are identified and categorized into 4 legal criteria classes; (3) a comparative analysis of SC-automation models in the context of their legal significance is conducted that identifies the degrees to which the SC-automation models are considered legally relevant. As a conclusion, we produce a comprehensive and replicable overview of the state of the art of SC automation models and a systematic measure of their legal significance to benefit practitioners in the field.},
	journal = {Journal of Industrial Information Integration},
	author = {Dixit, Abhishek and Deval, Vipin and Dwivedi, Vimal and Norta, Alex and Draheim, Dirk},
	year = {2022},
	keywords = {Blockchain, Business collaboration, Legal relevance, Ricardian contract, Smart contract},
	pages = {100314},
}

@article{boubeta-puig_cepchain_2021,
	title = {{CEPchain}: {A} graphical model-driven solution for integrating complex event processing and blockchain},
	volume = {184},
	issn = {0957-4174},
	url = {https://www.sciencedirect.com/science/article/pii/S0957417421009805},
	doi = {https://doi.org/10.1016/j.eswa.2021.115578},
	abstract = {Blockchain provides an immutable distributed ledger for storing transactions. One of the challenges of blockchain is the particular processing of dynamic queries due to accumulating costs. Complex Event Processing (CEP) provides efficient and effective support for this in a way, however, that is difficult to integrate with blockchain. This paper addresses the research challenges of integrating blockchain with CEP. More specifically, we envision an effective development environment in which (i) event-driven smart contracts are modeled in a graphical way, which are, in turn, (ii) automatically transformed into complementary code that is deployed in both a CEP engine and a blockchain network, and then (iii) executed on off-chain CEP applications which, connected to different data sources and sinks, automatically invoke smart contracts when event pattern conditions are met. We follow a classic systems engineering approach for defining the concepts of our system, called CEPchain, which addresses the described requirements. CEPchain was evaluated using a real-world case study for vaccine delivery, which requires an unbroken cold chain. The results demonstrate that our approach can be applied without requiring experts on event processing and smart contract languages. Our contribution simplifies the design of integrated CEP and blockchain functionality by hiding implementation details and supporting efficient deployment.},
	journal = {Expert Systems with Applications},
	author = {Boubeta-Puig, Juan and Rosa-Bilbao, Jesús and Mendling, Jan},
	year = {2021},
	keywords = {Blockchain, Complex event processing, Graphical modeling tool, Model-driven development, Smart contract, Supply chain},
	pages = {115578},
}

@article{sorbo_profiling_2022,
	title = {Profiling gas consumption in solidity smart contracts},
	volume = {186},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121221002697},
	doi = {https://doi.org/10.1016/j.jss.2021.111193},
	abstract = {Nowadays, more and more applications are developed for running on a distributed ledger technology, namely dApps. The business logic of dApps is usually implemented within smart contracts developed through Solidity, a programming language for writing smart contracts on different blockchain platforms, including the popular Ethereum. In Ethereum, the smart contracts run on the machines of miners and the gas corresponds to the execution fee compensating such computing resources. However, the deployment and execution costs of a smart contract depend on the implementation choices done by developers. Unappropriated design choices could lead to higher gas consumption than necessary. In this paper, we (i) identify a set of 19 Solidity code smells affecting the deployment and transaction costs of a smart contract, and (ii) assess the relevance of such smells through a survey involving 34 participants. On top of these smells, we propose GasMet, a suite of metrics for statically evaluating the code quality of a smart contract from the gas consumption perspective. An experiment involving 2186 smart contracts demonstrates that the proposed metrics have direct associations with deployment costs. The metrics in our suite can be used for more easily identifying source code segments that need optimizations.},
	journal = {Journal of Systems and Software},
	author = {Sorbo, Andrea Di and Laudanna, Sonia and Vacca, Anna and Visaggio, Corrado A. and Canfora, Gerardo},
	year = {2022},
	keywords = {Code quality, Empirical study, Smart contracts optimization, Software engineering for blockchain technologies, Software metrics},
	pages = {111193},
}

@article{corradini_model-driven_2021,
	title = {Model-driven engineering for multi-party business processes on multiple blockchains},
	volume = {2},
	issn = {2096-7209},
	url = {https://www.sciencedirect.com/science/article/pii/S2096720921000130},
	doi = {https://doi.org/10.1016/j.bcra.2021.100018},
	abstract = {As a disruptive technology, the blockchain is continuously finding novel application contexts, bringing new opportunities and radical changes. In this paper, we use blockchain as a communication infrastructure to support multi-party business processes. In particular, through smart contracts specifically generated by the mentioned business process, it is possible to derive a trustable infrastructure enabling the interaction among parties. Moreover, the emergence of different blockchain technologies, satisfying different characteristics, gives the possibility to support the same business process dealing with different non-functional needs. In this paper, we propose a novel engineering methodology supported by a practical framework called Multi-Chain. It permits to derive, using a model-driven strategy, a blockchain-based infrastructure, that can be deployed over a specific blockchain technology (e.g., Ethereum or Hyperledger Fabric). The objective is to permit the single definition and multiple deployments of the business process, to deliver the same functionalities, but satisfying different non-functional needs. In such a way, organisations willing to cooperate can select the multi-party business process and the blockchain technology they would like to use to satisfy their needs. Using Multi-Chain, they will be able to automatically derive from a Business Process Modelling Notation (BPMN) choreography diagram a blockchain infrastructure ready to be used. This overcomes the need to get acquainted with many details of the specific technology.},
	number = {3},
	journal = {Blockchain: Research and Applications},
	author = {Corradini, Flavio and Marcelletti, Alessandro and Morichetta, Andrea and Polini, Andrea and Re, Barbara and Scala, Emanuele and Tiezzi, Francesco},
	year = {2021},
	keywords = {Blockchain, Choreography, Model-driven, Multi-party},
	pages = {100018},
}

@article{marijan_blockchain_2022,
	title = {Blockchain verification and validation: {Techniques}, challenges, and research directions},
	volume = {45},
	issn = {1574-0137},
	url = {https://www.sciencedirect.com/science/article/pii/S1574013722000314},
	doi = {https://doi.org/10.1016/j.cosrev.2022.100492},
	abstract = {As blockchain technology is gaining popularity in industry and society, solutions for Verification and Validation (V\&V) of blockchain-based software applications (BC-Apps) have started gaining equal attention. To ensure that BC-Apps are properly developed before deployment, it is paramount to apply systematic V\&V to verify their functional and non-functional requirements. While existing research aims at addressing the challenges of engineering BC-Apps by providing testing techniques and tools, blockchain-based software development is still an emerging research discipline, and therefore, best practices and tools for the V\&V of BC-Apps are not yet sufficiently developed. In this paper, we provide a comprehensive survey on V\&V solutions for BC-Apps. Specifically, using a layered approach, we synthesize V\&V tools and techniques addressing different components at various layers of the BC-App stack, as well as across the whole stack. Next, we provide a discussion on the challenges associated with BC-App V\&V, and summarize a set of future research directions based on the challenges and gaps identified in existing research work. Our study aims to highlight the importance of BC-App V\&V and pave the way for a disciplined, testable, and verifiable BC development.},
	journal = {Computer Science Review},
	author = {Marijan, Dusica and Lal, Chhagan},
	year = {2022},
	keywords = {Benchmarking, Blockchain, Consensus, Formal verification, Ledger, P2P, Performance testing, Platform testing, Security testing, Simulation, Smart contracts, Software testing, System under test, Testing, Validation, Verification},
	pages = {100492},
}

@article{ding_architecture_2022,
	title = {Architecture, operation, and implementation for {Blockchain}-driven turnkey project under {I4}.0 workshop based on {RAMI} 4.0},
	volume = {173},
	issn = {0360-8352},
	url = {https://www.sciencedirect.com/science/article/pii/S0360835222007252},
	doi = {https://doi.org/10.1016/j.cie.2022.108737},
	abstract = {As the turnkey project adheres to the concept of one-stop delivery, it puts forward higher requirements for rapid construction of manufacturing systems. During the implementation of the turnkey project in the I4.0 workshop, there is a lack of unified construction and delivery standards under the system configuration framework that meets information security. Therefore, according to the I4.0 manufacturing requirements of node scalability, trusted delivery and standard information modeling in the turnkey process, the paper proposes a reference information architecture of blockchain-driven turnkey project to establish a turnkey service system with AAS as the delivery core: (1) Take RAMI4.0 and I4.0 component as the engineering construction framework and supporting technology, by analyzing the bottleneck of blockchain in solving the I4.0 workshop, integrating the open blockchain architecture interoperability characteristics of BC-Based smart contract and Tangle-Based extensible IIoT-node, and establish complete solution to turnkey project information architecture under the I4.0 workshop; (2) Combined with the current turnkey project, this paper proposes and studies the AAS modeling method supporting blockchain verification and the delivery constraint mechanism based on smart contract, and designs the blockchain-based architecture, operation and implementation process with AAS as the delivery core; (3) Through the development and integration of key technologies, an experimental development and operation case of the turnkey project of the I4.0 workshop customized production line is given, which provides theoretical and technical references for more SMEs to quickly integrate into the turnkey project system.},
	journal = {Computers \& Industrial Engineering},
	author = {Ding, Kai and Fan, Liu qun},
	year = {2022},
	keywords = {Asset Administration Shell, I4.0 component, I4.0 workshop, Open blockchain architecture, RAMI 4.0, Turnkey project},
	pages = {108737},
}

@article{chang_supply_2019,
	title = {Supply chain re-engineering using blockchain technology: {A} case of smart contract based tracking process},
	volume = {144},
	issn = {0040-1625},
	url = {https://www.sciencedirect.com/science/article/pii/S0040162518305547},
	doi = {https://doi.org/10.1016/j.techfore.2019.03.015},
	abstract = {The emergence of blockchain technology has created a number of potential innovations in handling business activities across various industries. However, few studies discuss the potential influence of blockchain technology from a business process re-engineering perspective. This study focuses on the feasibility and inceptive application of supply chain processes. We proposed a blockchain-based framework along with the use of an affiliated technology, i.e., smart contracts, to derive the feasible benefits of the supply chain process design. Through the illustrative design of an integrated process, we provide an achievable use case of the disintermediation of business processes via a conceptual, shared information ledger. This ledger not only facilitates the sharing of tracking information but also promotes a network for multilateral collaboration among supply chain members. The pursuit of transparency and accountability across supply chain processes can potentially influence decentralization and automation. A comparative analysis of the current and proposed frameworks is conducted to support the core reasoning of this study. Additionally, future implications on managerial practice and academic research are explored to provide pervasive suggestions for similar attempts in different sectors. We conclude with an evaluation of the potential influence of blockchain technology on supply chain management.},
	journal = {Technological Forecasting and Social Change},
	author = {Chang, Shuchih Ernest and Chen, Yi-Chian and Lu, Ming-Fang},
	year = {2019},
	keywords = {Blockchain, Business process re-engineering, Distributed ledger, Smart contract, Supply chain management},
	pages = {1--11},
}

@article{pasqua_enhancing_2023,
	title = {Enhancing {Ethereum} smart-contracts static analysis by computing a precise {Control}-{Flow} {Graph} of {Ethereum} bytecode},
	volume = {200},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121223000481},
	doi = {https://doi.org/10.1016/j.jss.2023.111653},
	abstract = {The immutable nature of Ethereum transactions, and consequently Ethereum smart-contracts, has stimulated the proliferation of many approaches aiming at detecting defects and security issues before the deployment of smart-contracts on the blockchain. Indeed, the actions performed by smart-contracts instantiated on the blockchain, possibly involving substantial financial value, cannot be undone. Unfortunately, smart-contracts source code is not always available, hence approaches based on static analysis have very often to face the problem of inspecting the compiled Ethereum Virtual Machine (EVM) bytecode, retrieved directly from the blockchain. However, due to the intrinsic complexity of EVM bytecode (especially in jumps address resolution), the state-of-the-art static analysis-based solutions have poor accuracy in the automated detection of Ethereum smart-contracts programming defects and vulnerabilities. This paper presents a novel approach based on symbolic execution of the EVM operands stack that allows to resolve jumps address in the EVM bytecode and to construct a precise Control-Flow Graph (CFG) of compiled smart-contracts. Many static analysis techniques are based on a CFG-based representation of the smart-contract to validate, and would therefore benefit from our approach. We have implemented the CFG reconstruction algorithm in a tool called EtherSolve . Then, we have validated the tool on a large dataset of real-world Ethereum smart-contracts, showing that EtherSolve extracts more precise CFGs, w.r.t. state-of-the-art available approaches. Finally, we have extended EtherSolve with two detectors for two of the most prominent Ethereum smart-contracts vulnerabilities (Reentrancy and Tx.origin). Experimental results show that exploiting the proposed CFG reconstruction static analysis, leads to more accurate vulnerabilities detection, w.r.t. state-of-the-art security tools. Editor’s note: Open Science material was validated by the Journal of Systems and Software Open Science Board.},
	journal = {Journal of Systems and Software},
	author = {Pasqua, Michele and Benini, Andrea and Contro, Filippo and Crosara, Marco and Preda, Mila Dalla and Ceccato, Mariano},
	year = {2023},
	keywords = {Ethereum, Reverse engineering, Smart-contract, Static analysis},
	pages = {111653},
}

@article{tao_confidentiality-minded_2022,
	title = {Confidentiality-minded framework for blockchain-based {BIM} design collaboration},
	volume = {136},
	issn = {0926-5805},
	url = {https://www.sciencedirect.com/science/article/pii/S0926580522000450},
	doi = {https://doi.org/10.1016/j.autcon.2022.104172},
	abstract = {Building Information Modeling (BIM) is widely adopted for design collaboration in the architecture, engineering, and construction (AEC) industry, while its centralized paradigm suffers the risk of data manipulation. To this end, blockchain is an emerging distributive technology that guarantees data authenticity and integrity by providing decentralized, immutable, and traceable data storage. However, directly integrating BIM with blockchain risks leaking sensitive data, since a blockchain is a transparent network insofar as shared information (including sensitive data) can be disclosed to all members without access control. Therefore, this paper proposes a confidentiality-minded framework (CMF) for blockchain-based design collaboration. The major innovations are twofold. First, an access control model is developed in the CMF to prevent unauthorized access to sensitive BIM data in a blockchain ledger. Second, new design strategies are developed in CMF to facilitate design coordination within the access-controlled blockchain network. An illustrative design example validates the feasibility and performance of the proposed CMF, which has acceptable latency and storage cost. The results also show that the sensitive BIM data are effectively kept confidential when project members collaborate within the CMF.},
	journal = {Automation in Construction},
	author = {Tao, Xingyu and Liu, Yuhan and Wong, Peter Kok-Yiu and Chen, Keyu and Das, Moumita and Cheng, Jack C. P.},
	year = {2022},
	keywords = {Asymmetric encryption, BIM, BIM Merkel tree, Blockchain, Design collaboration, Smart contract},
	pages = {104172},
}

@article{hamledari_application_2021,
	title = {The application of blockchain-based crypto assets for integrating the physical and financial supply chains in the construction \& engineering industry},
	volume = {127},
	issn = {0926-5805},
	url = {https://www.sciencedirect.com/science/article/pii/S092658052100162X},
	doi = {https://doi.org/10.1016/j.autcon.2021.103711},
	abstract = {Supply chain integration remains an elusive goal for the construction and engineering industry. The high degree of fragmentation and the reliance on financial institutions has pushed the physical and financial supply chains apart. The paper demonstrates how blockchain-based crypto assets address this limitation when used for conditioning payments on the flow of products. The integration of flows is contrasted in today's supply chains and those using crypto assets for their payment settlement. The thesis is validated in two construction projects where a smart contract administered payments in crypto currencies and crypto tokens. The findings reveal that crypto assets can enhance both the granularity and the atomicity of the integration between the cash and product flows; the on- and off-chain realities can be directly linked in crypto asset-enabled supply chains. The paper concludes with a discussion of risks such as regulatory landscapes, security, and price volatility and offers potential solutions.},
	journal = {Automation in Construction},
	author = {Hamledari, Hesam and Fischer, Martin},
	year = {2021},
	pages = {103711},
}

@article{sarker_re-designing_2022,
	title = {Re-designing the pension business processes for achieving technology-driven reforms through blockchain adoption: {A} proposed architecture},
	volume = {174},
	issn = {0040-1625},
	url = {https://www.sciencedirect.com/science/article/pii/S0040162521004911},
	doi = {https://doi.org/10.1016/j.techfore.2021.121059},
	abstract = {High administrative costs and associated operational inefficiencies present multiple challenges for pension industries across different countries. Although blockchain is considered a potential solution for these concerns, the pension industry has not fully leveraged this disruptive technology. This paper provides a blueprint for a blockchain-based end-to-end digital transformation of the pension industry. First, we identified the pre-requisites for blockchain adoption in pension. Then, we developed an architectural design of blockchain-based re-designed pension business processes. Subsequently, we elaborated on how smart contracts can make pension transactions in such redesigned processes optimized, automated, and error-free. Finally, we presented how blockchain can be integrated with the existing pension IT systems, using an API layer, to enable seamless onboarding of all pension participants to a single digital platform – a critical ask for any blockchain implementation. We concluded with an elucidation of the potential of such blockchain-based digital transformation of the pension industry in reducing turnaround time, lowering operating expenses, and facilitating the achievement of other pension reform agendas. This architecture of a blockchain-enabled pension network represents a flexible and scalable knowledge construct that can act as a foundation for further investigations by pension regulators or pension industry participants interested in achieving technology-driven pension operations reforms.},
	journal = {Technological Forecasting and Social Change},
	author = {Sarker, Indranil and Datta, Bidisha},
	year = {2022},
	keywords = {Application programming interface, Business process re-engineering, Digital transformation, Enterprise blockchain, Pension reforms, Smart contract},
	pages = {121059},
}

@article{halgamuge_estimation_2022,
	title = {Estimation of the success probability of a malicious attacker on blockchain-based edge network},
	volume = {219},
	issn = {1389-1286},
	url = {https://www.sciencedirect.com/science/article/pii/S1389128622004364},
	doi = {https://doi.org/10.1016/j.comnet.2022.109402},
	abstract = {Modeling highly accurate cyber-attacks on blockchain-based edge networks may be almost impossible in real-world circumstances due to unanticipated adversary (malicious) behavior. In this study, we propose a novel, distributed blockchain-based security architecture that today’s industrial edge-enabled IoT systems may use to strengthen their defences against cyberattacks. We develop a probabilistic model to estimate the success probability of a malicious attacker on blockchain-based edge network by considering (i) hardware-level attack, (ii) network-level attack (IoT, Edge), (iii) software-level attack, wallet, smart contract, and (iv) blockchain network-level attack. We analyze the proposed attack model for sixteen different cyberattacks: False Data Injection, Sybil, DDoS, Identity Spoofing, Side-Channel, Botnet, Backdoor Trojan, Targeted Code Injection, Social Engineering, Phishing, Sinkhole, Man-in-the-middle, SQL Injection, Consensus, Eclipse, and Block Mining. Our model considers scenarios where private keys are stolen, lost, or forgotten by certain nodes. To determine the probability that a malicious attacker will be successful, we develop a simulation environment (a blockchain-based edge network with 200 total nodes, which generates 47,540 samples). We then estimate the success probability of a malicious attacker based on the blockchain resiliency (fault-tolerance) provided by the consensus algorithm, attack types, attack location, and the network size for various scenarios. Our results demonstrate that blockchain-based edge networks are more vulnerable to malicious attacks based on: (i) cyber-attack types (90.96\% for Botnet and Backdoor Trojan attacks higher than for other attacks, such as DDoS, SQL Injection and Sybil); (ii) attack location (90.18\% for software-level attacks higher than hardware, network, and blockchain network-level attacks); and (iii) consensus algorithm (68.85\% for Byzantine fault tolerance, BFT, higher than the Proof-of-Work, PoW). The IoT network vulnerability factor, or exposure factor, of cyberattacks, depends on the strategic importance of the application to the attacker. Our results should be validated in real-world experiments with a large number of nodes.},
	journal = {Computer Networks},
	author = {Halgamuge, Malka N.},
	year = {2022},
	keywords = {Blockchain, Cyberattacks, Data privacy, Internet of Things (IoT), Malicious attack, Smart objects},
	pages = {109402},
}

@article{hamdaqa_icontractml_2022,
	title = {{iContractML} 2.0: {A} domain-specific language for modeling and deploying smart contracts onto multiple blockchain platforms},
	volume = {144},
	issn = {0950-5849},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584921002081},
	doi = {https://doi.org/10.1016/j.infsof.2021.106762},
	abstract = {Context: Smart contracts play a vital role in many fields. Despite being called smart, the development of smart contracts is a tedious task beyond defining a set of contractual rules. In addition to business knowledge, coding a smart contract requires strong technical knowledge in a multiplex of new and rapidly changing domain-specific languages and blockchain platforms. Objectives: The goal of this paper is to assist developers in building smart contracts independently from the language or the target blockchain platform. In which, we present our second-generation smart contract language iContractML 2.0. Methods: We follow a feature-oriented approach to analyze three different blockchain platforms and propose an enhanced reference model and a modeling framework for smart contracts (iContractML 2.0). Then, we evaluate the coverage and extensibility of iContractML 2.0, first through mapping the concepts of the reference models to the constructs within each of the platforms used in devising the reference model, and second through mapping its concepts to a new smart contract language not previously considered. Finally, we demonstrate the capabilities of iContractML 2.0 using five case studies from different business domains. Results: iContractML 2.0 extends our first generation language to support DAML, which is another standardized language for smart contracts. This makes iContractML 2.0 supports the platforms that DAML support by extension. Moreover, iContractML 2.0 supports generating the structural and deployment artifacts in addition to the smart contract behavior by implementing templates for some of the common functions. The results of evaluating the generality of the iContractML 2.0 reference model show that it is 91.7\% lucid and 72.2\% laconic. Moreover, the reference model is able to capture all the elements of the new language with 83.3\% of the components which have a direct one-to-one mapping. Conclusion: iContractML 2.0 is an extensible framework that empowers developers to model and generate functional smart contract code that can be deployed onto multiple blockchain platforms.},
	journal = {Information and Software Technology},
	author = {Hamdaqa, Mohammad and Met, Lucas Alberto Pineda and Qasse, Ilham},
	year = {2022},
	keywords = {Azure, Blockchain, DAML, Ethereum, Hyperledger fabric, Model-driven engineering, Smart contracts},
	pages = {106762},
}

@article{he_neural-febi_2023,
	title = {Neural-{FEBI}: {Accurate} function identification in {Ethereum} {Virtual} {Machine} bytecode},
	volume = {199},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121223000225},
	doi = {https://doi.org/10.1016/j.jss.2023.111627},
	abstract = {Millions of smart contracts have been deployed onto the Ethereum platform, posing potential attack subjects. Therefore, analyzing contract binaries is vital since their sources are unavailable, involving identification comprising function entry identification and detecting its boundaries. Such boundaries are critical to many smart contract applications, e.g. reverse engineering and profiling. Unfortunately, it is challenging to identify functions from these stripped contract binaries due to the lack of internal function call statements and the compiler-inducing instruction reshuffling. Recently, several existing works excessively relied on a set of handcrafted heuristic rules which impose several faults. To address this issue, we propose a novel neural network-based framework for EVM bytecode Function Entries and Boundaries Identification (neural-FEBI) that does not rely on a fixed set of handcrafted rules. Instead, it used a two-level bi-Long Short-Term Memory network and a Conditional Random Field network to locate the function entries. The suggested framework also devises a control flow traversal algorithm to determine the code segments reachable from the function entry as its boundary. Several experiments on 38,996 publicly available smart contracts collected as binary demonstrate that neural-FEBI confirms the lowest and highest F1-scores for the function entries identification task across different datasets of 88.3 to 99.7, respectively. Its performance on the function boundary identification task is also increased from 79.4\% to 97.1\% compared with state-of-the-art. We further demonstrate that the identified function information can be used to construct more accurate intra-procedural CFGs and call graphs. The experimental results confirm that the proposed framework significantly outperforms state-of-the-art, often based on handcrafted heuristic rules.},
	journal = {Journal of Systems and Software},
	author = {He, Jiahao and Li, Shuangyin and Wang, Xinming and Cheung, Shing-Chi and Zhao, Gansen and Yang, Jinji},
	year = {2023},
	keywords = {Binary analysis, Control flow traversal, Ethereum smart contract, Function identification, LSTM-CRF},
	pages = {111627},
}
